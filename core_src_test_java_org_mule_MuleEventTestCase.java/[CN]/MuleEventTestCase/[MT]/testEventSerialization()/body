{
  Transformer trans1=new TestEventTransformer();
  trans1.setName("OptimusPrime");
  Transformer trans2=new TestEventTransformer();
  trans2.setName("Bumblebee");
  List<Transformer> transformers=new ArrayList<Transformer>();
  transformers.add(trans1);
  transformers.add(trans2);
  ImmutableEndpoint endpoint=getTestOutboundEndpoint("Test",null,transformers,new PayloadTypeFilter(Object.class),null);
  MuleEvent event=RequestContext.setEvent(getTestEvent("payload",endpoint));
  Serializable serialized=(Serializable)new SerializableToByteArray().transform(event);
  assertNotNull(serialized);
  ByteArrayToObject trans=new ByteArrayToObject();
  trans.setMuleContext(muleContext);
  MuleEvent deserialized=(MuleEvent)trans.transform(serialized);
  assertNotNull(deserialized);
  assertNotNull(deserialized.getMuleContext());
  assertNotNull(deserialized.getSession());
  assertEquals(event.getSession().getId(),deserialized.getSession().getId());
  assertNotNull(deserialized.getSession().getFlowConstruct());
  assertEquals(event.getSession().getFlowConstruct(),deserialized.getSession().getFlowConstruct());
  assertSame(event.getSession().getFlowConstruct(),deserialized.getSession().getFlowConstruct());
  assertNotNull(deserialized.getEndpoint());
  assertEquals(endpoint,deserialized.getEndpoint());
  List deserializedTransformers=deserialized.getEndpoint().getTransformers();
  assertEquals(2,deserializedTransformers.size());
  assertEquals(trans1.getName(),((Transformer)deserializedTransformers.get(0)).getName());
  assertEquals(trans2.getName(),((Transformer)deserializedTransformers.get(1)).getName());
  assertEquals(PayloadTypeFilter.class,deserialized.getEndpoint().getFilter().getClass());
}
