{
  MuleEvent event=createEventToSerialize();
  muleContext.start();
  List transformers=event.getEndpoint().getTransformers();
  ImmutableEndpoint endpoint=event.getEndpoint();
  Serializable serialized=(Serializable)new SerializableToByteArray().transform(event);
  assertNotNull(serialized);
  muleContext.dispose();
  muleContext=createMuleContext();
  muleContext.start();
  ByteArrayToObject trans=new ByteArrayToObject();
  trans.setMuleContext(muleContext);
  createAndRegisterTransformersEndpointBuilderService();
  MuleEvent deserialized=(MuleEvent)trans.transform(serialized);
  assertNotNull(deserialized);
  assertNotNull(deserialized.getMuleContext());
  assertNotNull(deserialized.getSession());
  assertEquals(event.getSession().getId(),deserialized.getSession().getId());
  assertNotNull(deserialized.getSession().getFlowConstruct());
  Service service=(Service)event.getSession().getFlowConstruct();
  Service deserializedService=(Service)deserialized.getSession().getFlowConstruct();
  assertEquals(service.getName(),deserializedService.getName());
  assertEquals(service.getInitialState(),deserializedService.getInitialState());
  assertEquals(service.getExceptionListener().getClass(),deserializedService.getExceptionListener().getClass());
  assertEquals(service.getComponent().getClass(),deserializedService.getComponent().getClass());
  assertNotNull(deserialized.getEndpoint());
  assertEquals(endpoint.getEncoding(),deserialized.getEndpoint().getEncoding());
  assertEquals(endpoint.getEndpointBuilderName(),deserialized.getEndpoint().getEndpointBuilderName());
  assertEquals(endpoint.getEndpointURI(),deserialized.getEndpoint().getEndpointURI());
  assertEquals(endpoint.getProtocol(),deserialized.getEndpoint().getProtocol());
  assertEquals(endpoint.getResponseTimeout(),deserialized.getEndpoint().getResponseTimeout());
  assertEquals(endpoint.getConnector().getClass(),deserialized.getEndpoint().getConnector().getClass());
  List deserializedTransformers=deserialized.getEndpoint().getTransformers();
  assertEquals(2,deserializedTransformers.size());
  assertEquals(((Transformer)transformers.get(0)).getName(),((Transformer)deserializedTransformers.get(0)).getName());
  assertEquals(((Transformer)transformers.get(1)).getName(),((Transformer)deserializedTransformers.get(1)).getName());
  assertEquals(PayloadTypeFilter.class,deserialized.getEndpoint().getFilter().getClass());
}
