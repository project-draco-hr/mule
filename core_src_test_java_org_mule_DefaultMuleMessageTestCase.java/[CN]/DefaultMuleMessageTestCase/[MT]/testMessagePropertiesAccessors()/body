{
  Map<String,Object> properties=createMessageProperties();
  properties.put("number","24");
  properties.put("decimal","24.3");
  properties.put("boolean","true");
  Apple apple=new Apple(true);
  properties.put("apple",apple);
  MuleMessage message=new DefaultMuleMessage(TEST_MESSAGE,properties,muleContext);
  assertTrue(message.getProperty("boolean",PropertyScope.OUTBOUND,false));
  assertEquals(new Integer(24),message.getProperty("number",PropertyScope.OUTBOUND,0));
  assertEquals(new Byte((byte)24),message.getProperty("number",PropertyScope.OUTBOUND,new Byte((byte)0)));
  assertEquals(new Long(24),message.getProperty("number",PropertyScope.OUTBOUND,0l));
  assertEquals(new Float(24.3),message.getProperty("decimal",PropertyScope.OUTBOUND,0f));
  Double d=message.getProperty("decimal",PropertyScope.OUTBOUND,0d);
  assertEquals(new Double(24.3),d);
  assertEquals("true",message.getProperty("boolean",PropertyScope.OUTBOUND,""));
  assertEquals(apple,message.getProperty("apple",PropertyScope.OUTBOUND,null));
  try {
    message.getProperty("apple",PropertyScope.OUTBOUND,new Orange());
    fail("Orange is not assignable to Apple");
  }
 catch (  IllegalArgumentException e) {
  }
  assertNull(message.getProperty("banana",PropertyScope.OUTBOUND,null));
  assertNull(message.getProperty("blah",PropertyScope.OUTBOUND,null));
  assertEquals(new Float(24.3),message.getProperty("blah",PropertyScope.OUTBOUND,24.3f));
}
