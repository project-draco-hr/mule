{
  String notset=CoreMessages.notSet().getMessage();
  Manifest mf=MuleManifest.getManifest();
  Map att=mf.getMainAttributes();
  if (att.values().size() > 0) {
    header.add(StringUtils.defaultString(MuleManifest.getProductDescription(),notset));
    header.add(CoreMessages.version().getMessage() + " Build: " + StringUtils.defaultString(MuleManifest.getBuildNumber(),notset));
    header.add(StringUtils.defaultString(MuleManifest.getVendorName(),notset));
    header.add(StringUtils.defaultString(MuleManifest.getProductMoreInfo(),notset));
  }
 else {
    header.add(CoreMessages.versionNotSet().getMessage());
  }
  header.add(" ");
  if (context.getStartDate() > 0) {
    header.add(CoreMessages.serverStartedAt(context.getStartDate()).getMessage());
  }
  header.add("Server ID: " + context.getConfiguration().getId());
  header.add("JDK: " + System.getProperty("java.version") + " ("+ System.getProperty("java.vm.info")+ ")");
  header.add("OS encoding: " + System.getProperty("file.encoding") + ", Mule encoding: "+ context.getConfiguration().getDefaultEncoding());
  String patch=System.getProperty("sun.os.patch.level",null);
  header.add("OS: " + System.getProperty("os.name") + (patch != null && !"unknown".equalsIgnoreCase(patch) ? " - " + patch : "")+ " ("+ System.getProperty("os.version")+ ", "+ System.getProperty("os.arch")+ ")");
  try {
    InetAddress host=InetAddress.getLocalHost();
    header.add("Host: " + host.getHostName() + " ("+ host.getHostAddress()+ ")");
  }
 catch (  UnknownHostException e) {
  }
  final boolean productionMode=StartupContext.get().getStartupOptions().containsKey("production");
  header.add("Mode: " + (productionMode ? "Production" : "Development"));
  header.add(" ");
}
