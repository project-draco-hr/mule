{
  long keepAliveTimeout=((TcpConnector)connector).getKeepAliveTimeout();
  try {
    do {
      conn.setKeepAlive(false);
      if (keepAliveTimeout > 0) {
        ((HttpConnector)connector).getKeepAliveMonitor().addExpirable(keepAliveTimeout,TimeUnit.MILLISECONDS,this);
      }
      HttpRequest request=conn.readRequest();
      if (request == null) {
        break;
      }
      try {
        conn.writeResponse(processRequest(request));
      }
 catch (      Exception e) {
        String temp=ExceptionHelper.getErrorMapping(connector.getProtocol(),e.getClass());
        int httpStatus=Integer.valueOf(temp);
        conn.writeResponse(buildFailureResponse(request.getRequestLine().getHttpVersion(),httpStatus,e.getMessage()));
        if (e instanceof MessagingException) {
          MuleEvent event=((MessagingException)e).getEvent();
          event.getFlowConstruct().getExceptionListener().handleException(e,event);
        }
 else {
          getConnector().getMuleContext().getExceptionListener().handleException(e);
        }
        break;
      }
 finally {
        ((HttpConnector)connector).getKeepAliveMonitor().removeExpirable(this);
        if (request.getBody() != null) {
          request.getBody().close();
        }
      }
    }
 while (conn.isKeepAlive());
  }
 catch (  Exception e) {
    getConnector().getMuleContext().getExceptionListener().handleException(e);
  }
 finally {
    logger.debug("Closing HTTP connection.");
    if (conn.isOpen()) {
      conn.close();
      conn=null;
    }
  }
}
