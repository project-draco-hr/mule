{
  OutStreamMessageAdapter response;
  UMOEndpointURI endpointURI=eventContext.getEndpointURI();
  String method;
  if (eventContext.isStreaming()) {
    StreamMessageAdapter sma=(StreamMessageAdapter)eventContext.getMessage().getPayload();
    if (sma.getOutput() != null) {
      response=new OutStreamMessageAdapter(sma.getOutput());
    }
 else {
      response=new OutStreamMessageAdapter(new ByteArrayOutputStream());
    }
  }
 else {
    response=new OutStreamMessageAdapter(new ByteArrayOutputStream());
  }
  UMOMessage eventMsg=eventContext.getMessage();
  String endpointHeader=eventMsg.getStringProperty(MuleProperties.MULE_ENDPOINT_PROPERTY,null);
  String request=eventMsg.getStringProperty(HttpConnector.HTTP_REQUEST_PROPERTY,null);
  if (request != null) {
    endpointURI=new MuleEndpointURI("soap:" + endpointURI.toString() + request);
  }
  method=endpointURI.getParams().getProperty(org.mule.providers.soap.SoapConstants.SOAP_METHOD_PROPERTY);
  if (method == null) {
    method=eventMsg.getStringProperty(org.mule.providers.soap.SoapConstants.SOAP_METHOD_PROPERTY,null);
  }
  if (method == null) {
    if (endpointHeader != null) {
      endpointURI=new MuleEndpointURI(endpointHeader);
      method=endpointURI.getParams().getProperty(org.mule.providers.soap.SoapConstants.SOAP_METHOD_PROPERTY);
    }
  }
  String serviceName=getService(eventContext);
  if (request == null) {
    request=endpointHeader;
  }
  if (request != null && request.toLowerCase().endsWith("?wsdl")) {
    generateWSDL(response,serviceName);
  }
 else {
    if (method == null) {
      throw new MuleException(new Message(Messages.PROPERTIES_X_NOT_SET,"method"));
    }
    ServiceRegistry reg=getServiceRegistry();
    if (serviceName == null || serviceName.length() == 0 || !reg.hasService(serviceName)) {
      if (!reg.hasService(serviceName)) {
        eventMsg.setProperty(HttpConnector.HTTP_STATUS_PROPERTY,String.valueOf(HttpConstants.SC_NOT_FOUND));
      }
      generateServices(response);
      return response;
    }
    invoke(eventContext,endpointURI,response,serviceName,method);
  }
  return response.getPayloadAsBytes();
}
