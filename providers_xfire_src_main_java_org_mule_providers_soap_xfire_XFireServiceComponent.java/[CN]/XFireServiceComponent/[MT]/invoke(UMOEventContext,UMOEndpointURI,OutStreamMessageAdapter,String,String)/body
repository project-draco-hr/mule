{
  MessageContext context=new MessageContext();
  context.setXFire(xfire);
  XFireMuleSession session=new XFireMuleSession(eventContext.getSession());
  context.setSession(session);
  context.setService(getService(service));
  OperationInfo op=context.getService().getServiceInfo().getOperation(methodName);
  if (op == null) {
    throw new NoSuchMethodException(methodName);
  }
  context.setExchange(new MessageExchange(context));
  context.getExchange().setOperation(op);
  Channel channel;
  String uri=endpointURI.toString();
  try {
    channel=transport.createChannel(uri);
  }
 catch (  Exception e) {
    logger.debug("Couldn't open channel.",e);
    throw new MessagingException(new Message("xfire",7,uri),eventContext.getMessage(),e);
  }
  String contentType=eventContext.getStringProperty(HttpConstants.HEADER_CONTENT_TYPE);
  String encoding=eventContext.getStringProperty(HttpConstants.HEADER_CONTENT_ENCODING);
  if (encoding == null) {
    encoding=MuleManager.getConfiguration().getEncoding();
  }
  if (contentType == null) {
    contentType=DEFAULT_CONTENT_TYPE + "; charset=" + encoding;
    logger.warn("Content-Type not set on request, defaulting to: " + contentType);
  }
 else   if (contentType.indexOf("charset=") == -1) {
    contentType+="; charset=" + encoding;
  }
  if (contentType.toLowerCase().indexOf("multipart/related") != -1) {
    try {
      Attachments atts=new JavaMailAttachments(getMessageStream(eventContext),contentType);
      XMLStreamReader reader=STAXUtils.createXMLStreamReader(atts.getSoapMessage().getDataHandler().getInputStream(),encoding);
      InMessage message=new InMessage(reader,uri);
      message.setProperty(SoapConstants.SOAP_ACTION,eventContext.getStringProperty(SoapConstants.SOAP_ACTION,Utility.EMPTY_STRING));
      message.setAttachments(atts);
      context.getExchange().setInMessage(message);
      context.setCurrentMessage(message);
      context.setProperty(Channel.BACKCHANNEL_URI,response.getStream());
      channel.receive(context,message);
    }
 catch (    javax.mail.MessagingException e) {
      throw new XFireRuntimeException("Couldn't parse request message.",e);
    }
  }
 else {
    XMLStreamReader reader=STAXUtils.createXMLStreamReader(getMessageStream(eventContext),encoding);
    InMessage message=new InMessage(reader,uri);
    context.getExchange().setInMessage(message);
    context.setCurrentMessage(message);
    context.setProperty(Channel.BACKCHANNEL_URI,response.getStream());
    channel.receive(context,message);
  }
}
