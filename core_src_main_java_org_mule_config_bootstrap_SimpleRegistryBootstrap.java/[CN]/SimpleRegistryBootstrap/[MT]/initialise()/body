{
  Enumeration e=ClassUtils.getResources(SERVICE_PATH + REGISTRY_PROPERTIES,getClass());
  List<Properties> bootstraps=new LinkedList<Properties>();
  while (e.hasMoreElements()) {
    try {
      URL url=(URL)e.nextElement();
      if (logger.isInfoEnabled()) {
        logger.info("Reading bootstrap file: " + url.toString());
      }
      Properties p=new Properties();
      p.load(url.openStream());
      bootstraps.add(p);
    }
 catch (    Exception e1) {
      throw new InitialisationException(e1,this);
    }
  }
  int objectCounter=1;
  int transformerCounter=1;
  Properties transformers=new Properties();
  Properties namedObjects=new Properties();
  Properties unnamedObjects=new Properties();
  for (  Properties bootstrap : bootstraps) {
    for (    Map.Entry entry : bootstrap.entrySet()) {
      final String key=(String)entry.getKey();
      if (key.contains(OBJECT_KEY)) {
        String newKey=key.substring(0,key.lastIndexOf(".")) + objectCounter++;
        unnamedObjects.put(newKey,entry.getValue());
      }
 else       if (key.contains(TRANSFORMER_KEY)) {
        String newKey=key.substring(0,key.lastIndexOf(".")) + transformerCounter++;
        transformers.put(newKey,entry.getValue());
      }
 else {
{
          namedObjects.put(key,entry.getValue());
        }
      }
    }
  }
  try {
    registerUnnamedObjects(unnamedObjects,context.getRegistry());
    registerTransformers(transformers,context.getRegistry());
    registerObjects(namedObjects,context.getRegistry());
  }
 catch (  Exception e1) {
    throw new InitialisationException(e1,this);
  }
}
