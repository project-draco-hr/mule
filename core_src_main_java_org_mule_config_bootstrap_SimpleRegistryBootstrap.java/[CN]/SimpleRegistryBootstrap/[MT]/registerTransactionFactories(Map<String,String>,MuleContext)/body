{
  for (  Entry<String,String> entry : singleTransactionFactories.entrySet()) {
    String transactionResourceClassNameProperties=entry.getValue();
    String transactionFactoryClassName=entry.getKey();
    boolean optional=false;
    int x=transactionResourceClassNameProperties.indexOf(",");
    if (x > -1) {
      Properties p=PropertiesUtils.getPropertiesFromString(transactionResourceClassNameProperties.substring(x + 1),',');
      optional=p.containsKey("optional");
    }
    final String transactionResourceClassName=(x == -1 ? transactionResourceClassNameProperties : transactionResourceClassNameProperties.substring(0,x));
    try {
      context.getTransactionFactoryManager().registerTransactionFactory(Class.forName(transactionResourceClassName),(TransactionFactory)Class.forName(transactionFactoryClassName).newInstance());
    }
 catch (    NoClassDefFoundError ncdfe) {
      throwExceptionIfNotOptional(optional,ncdfe,"Ignoring optional transaction factory: " + transactionResourceClassName);
    }
catch (    ClassNotFoundException cnfe) {
      throwExceptionIfNotOptional(optional,cnfe,"Ignoring optional transaction factory: " + transactionResourceClassName);
    }
  }
}
