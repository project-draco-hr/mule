{
  if (isStoppable) {
    try {
      return LifecycleTransitionResult.startOrStopAll(((Stoppable)componentObject).stop(),new LifecycleTransitionResult.Closure(){
        public LifecycleTransitionResult doContinue(){
          started=false;
          return LifecycleTransitionResult.OK;
        }
      }
);
    }
 catch (    Exception e) {
      throw new DefaultMuleException(CoreMessages.failedToStop("UMO Service: " + component.getService().getName()),e);
    }
  }
 else {
    started=false;
    return LifecycleTransitionResult.OK;
  }
}
