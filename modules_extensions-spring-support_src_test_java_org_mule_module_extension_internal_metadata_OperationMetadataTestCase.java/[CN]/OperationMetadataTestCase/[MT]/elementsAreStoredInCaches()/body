{
  processorId=new ProcessorId(OUTPUT_AND_METADATA_KEY_CACHE_RESOLVER,FIRST_PROCESSOR_INDEX);
  metadataManager.getMetadataKeys(processorId);
  getOperationDynamicMetadata();
  processorId=new ProcessorId(CONTENT_AND_OUTPUT_CACHE_RESOLVER_WITH_ALTERNATIVE_CONFIG,FIRST_PROCESSOR_INDEX);
  getOperationDynamicMetadata();
  MuleMetadataManager metadataManager=(MuleMetadataManager)muleContext.getRegistry().lookupObject(MetadataManager.class);
  DefaultMetadataCache configCache=(DefaultMetadataCache)metadataManager.getMetadataCaches().get(CONFIG);
  assertThat(configCache.asMap().keySet(),hasItems(AGE,NAME,BRAND));
  assertThat(configCache.get(AGE).get(),is(AGE_VALUE));
  assertThat(configCache.get(NAME).get(),is(NAME_VALUE));
  assertThat(configCache.get(BRAND).get(),is(BRAND_VALUE));
  DefaultMetadataCache alternativeConfigCache=(DefaultMetadataCache)metadataManager.getMetadataCaches().get(ALTERNATIVE_CONFIG);
  assertThat(alternativeConfigCache.asMap().keySet(),hasItems(BRAND));
  assertThat(alternativeConfigCache.get(BRAND).get(),is(BRAND_VALUE));
}
