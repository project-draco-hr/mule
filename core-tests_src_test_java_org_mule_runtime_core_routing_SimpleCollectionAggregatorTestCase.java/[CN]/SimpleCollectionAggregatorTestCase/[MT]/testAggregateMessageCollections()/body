{
  Flow flow=getTestFlow("test",Apple.class);
  assertNotNull(flow);
  SimpleCollectionAggregator router=new SimpleCollectionAggregator();
  router.setMuleContext(muleContext);
  router.setFlowConstruct(flow);
  router.initialise();
  MessageContext executionContext=DefaultMessageContext.create(flow,TEST_CONNECTOR,"foo");
  MuleMessage message1=MuleMessage.builder().payload("test event A").build();
  MuleMessage message2=MuleMessage.builder().payload("test event B").build();
  MuleMessage message3=MuleMessage.builder().payload("test event C").build();
  MuleMessage message4=MuleMessage.builder().payload("test event D").build();
  List<MuleMessage> list=new ArrayList<>();
  List<MuleMessage> list2=new ArrayList<>();
  list.add(message1);
  list.add(message2);
  list2.add(message3);
  list2.add(message4);
  MuleMessage messageCollection1=MuleMessage.builder().payload(list).build();
  MuleMessage messageCollection2=MuleMessage.builder().payload(list2).build();
  MuleEvent event1=MuleEvent.builder(executionContext).message(messageCollection1).correlation(new Correlation(2,null)).flow(flow).build();
  MuleEvent event2=MuleEvent.builder(executionContext).message(messageCollection2).correlation(new Correlation(2,null)).flow(flow).build();
  assertNull(router.process(event1));
  MuleEvent resultEvent=router.process(event2);
  assertNotNull(resultEvent);
  MuleMessage resultMessage=resultEvent.getMessage();
  assertNotNull(resultMessage);
  List<MuleMessage> payload=(List<MuleMessage>)resultMessage.getPayload();
  assertEquals(2,payload.size());
  assertEquals("test event A",((List<MuleMessage>)payload.get(0).getPayload()).get(0).getPayload());
  assertEquals("test event B",((List<MuleMessage>)payload.get(0).getPayload()).get(1).getPayload());
  assertEquals("test event C",((List<MuleMessage>)payload.get(1).getPayload()).get(0).getPayload());
  assertEquals("test event D",((List<MuleMessage>)payload.get(1).getPayload()).get(1).getPayload());
}
