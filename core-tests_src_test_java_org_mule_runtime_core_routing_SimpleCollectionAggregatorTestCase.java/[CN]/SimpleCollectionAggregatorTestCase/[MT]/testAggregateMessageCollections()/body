{
  Flow flow=getTestFlowWithComponent("test",Apple.class);
  assertNotNull(flow);
  SimpleCollectionAggregator router=new SimpleCollectionAggregator();
  router.setMuleContext(muleContext);
  router.setFlowConstruct(flow);
  router.initialise();
  EventContext executionContext=DefaultEventContext.create(flow,TEST_CONNECTOR,"foo");
  InternalMessage message1=InternalMessage.builder().payload("test event A").build();
  InternalMessage message2=InternalMessage.builder().payload("test event B").build();
  InternalMessage message3=InternalMessage.builder().payload("test event C").build();
  InternalMessage message4=InternalMessage.builder().payload("test event D").build();
  List<InternalMessage> list=new ArrayList<>();
  List<InternalMessage> list2=new ArrayList<>();
  list.add(message1);
  list.add(message2);
  list2.add(message3);
  list2.add(message4);
  InternalMessage messageCollection1=InternalMessage.builder().payload(list).build();
  InternalMessage messageCollection2=InternalMessage.builder().payload(list2).build();
  Event event1=Event.builder(executionContext).message(messageCollection1).groupCorrelation(new GroupCorrelation(2,null)).flow(flow).build();
  Event event2=Event.builder(executionContext).message(messageCollection2).groupCorrelation(new GroupCorrelation(2,null)).flow(flow).build();
  assertNull(router.process(event1));
  Event resultEvent=router.process(event2);
  assertNotNull(resultEvent);
  InternalMessage resultMessage=resultEvent.getMessage();
  assertNotNull(resultMessage);
  List<InternalMessage> payload=(List<InternalMessage>)resultMessage.getPayload().getValue();
  assertEquals(2,payload.size());
  assertEquals("test event A",((List<InternalMessage>)payload.get(0).getPayload().getValue()).get(0).getPayload().getValue());
  assertEquals("test event B",((List<InternalMessage>)payload.get(0).getPayload().getValue()).get(1).getPayload().getValue());
  assertEquals("test event C",((List<InternalMessage>)payload.get(1).getPayload().getValue()).get(0).getPayload().getValue());
  assertEquals("test event D",((List<InternalMessage>)payload.get(1).getPayload().getValue()).get(1).getPayload().getValue());
}
