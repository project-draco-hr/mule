{
  final URL classPathRoot=ClassUtils.getClassPathRoot(getClass());
  System.out.println("classPathRoot = " + classPathRoot);
  File f=new File(classPathRoot.getPath(),"../../../test-01-plugin-impl-1/target/classes/");
  System.out.println("f = " + f);
  assertTrue("Dependent test classes not found, has required IT test modules been run before?",f.exists());
  URL[] parentUrls=new URL[]{f.toURI().toURL()};
  URLClassLoader parent=new URLClassLoader(parentUrls,Thread.currentThread().getContextClassLoader());
  f=new File(classPathRoot.getPath(),"../../../test-02-plugin-impl-2/target/classes/");
  System.out.println("f = " + f);
  assertTrue("Dependent test classes not found, has required IT test modules been run before?",f.exists());
  URL[] childUrls=new URL[]{f.toURI().toURL()};
  MulePluginClassLoader ext=new MulePluginClassLoader(childUrls,parent,Arrays.asList("mypackage"),null);
  Class c=ext.loadClass("mypackage.SneakyChatter");
  final Method methodHi=c.getMethod("hi");
  final Object result=methodHi.invoke(c.newInstance());
  assertEquals("Wrong implementation loaded","Bye",result);
}
