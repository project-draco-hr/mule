{
  this.parserContext=parserContext;
  Class beanClass=getBeanClass(element);
  Assert.state(beanClass != null,"Class returned from getBeanClass(Element) must not be null, element is: " + element.getNodeName());
  BeanDefinitionBuilder builder=createBeanDefinitionBuilder(element,beanClass);
  builder.setSource(parserContext.extractSource(element));
  builder.setSingleton(isSingleton());
  builder.addDependsOn("_muleRegistry");
  List interfaces=ClassUtils.getAllInterfaces(beanClass);
  if (interfaces != null) {
    if (interfaces.contains(Initialisable.class)) {
      builder.setInitMethodName(Initialisable.PHASE_NAME);
    }
    if (interfaces.contains(Disposable.class)) {
      builder.setDestroyMethodName(Disposable.PHASE_NAME);
    }
  }
  if (parserContext.isNested()) {
    builder.setSingleton(parserContext.getContainingBeanDefinition().isSingleton());
  }
  doParse(element,parserContext,builder);
  return builder.getBeanDefinition();
}
