{
  super(connector,component,endpoint);
  if ("rest".equals(endpoint.getEndpointURI().getScheme())) {
    ServletConnector scon=(ServletConnector)RegistryContext.getRegistry().lookupConnector(JETTY_SERVLET_CONNECTOR_NAME);
    if (scon != null) {
      throw new CreateException(HttpMessages.noServletConnectorFound(JETTY_SERVLET_CONNECTOR_NAME),this);
    }
    scon=new ServletConnector();
    scon.setName(JETTY_SERVLET_CONNECTOR_NAME);
    scon.setServletUrl(endpoint.getEndpointURI().getAddress());
    try {
      UMOManagementContext managementContext=MuleServer.getManagementContext();
      scon.setManagementContext(managementContext);
      managementContext.getRegistry().registerConnector(scon,managementContext);
      String path=endpoint.getEndpointURI().getPath();
      if (StringUtils.isEmpty(path)) {
        path="/";
      }
      UMOEndpointBuilder endpointBuilder=new EndpointURIEndpointBuilder("servlet://" + path.substring(1),connector.getManagementContext());
      endpointBuilder.setTransformers(endpoint.getTransformers());
      UMOImmutableEndpoint ep=connector.getManagementContext().getRegistry().lookupEndpointFactory().getInboundEndpoint(endpointBuilder,connector.getManagementContext());
      scon.registerListener(component,ep);
    }
 catch (    Exception e) {
      throw new CreateException(e,this);
    }
  }
}
