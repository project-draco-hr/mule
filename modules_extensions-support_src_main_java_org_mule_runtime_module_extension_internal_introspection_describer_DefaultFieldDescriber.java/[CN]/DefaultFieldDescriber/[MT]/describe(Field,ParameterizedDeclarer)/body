{
  String parameterName=getAliasName(field);
  ParameterDeclarer parameterDeclarer;
  MetadataType fieldType=getFieldMetadataType(field,typeLoader);
  Optional optional=field.getAnnotation(Optional.class);
  parameterDeclarer=optional == null ? declarer.withRequiredParameter(parameterName) : declarer.withOptionalParameter(parameterName).defaultingTo(getDefaultValue(optional));
  XmlHints elementStyle=field.getAnnotation(XmlHints.class);
  if (elementStyle != null) {
    parameterDeclarer.withModelProperty(new XmlHintsModelProperty(elementStyle));
  }
  parameterDeclarer.ofType(fieldType).withExpressionSupport(getExpressionSupport(field)).withModelProperty(new DeclaringMemberModelProperty(field));
  LayoutModelProperty layoutModelProperty=parseLayoutAnnotations(field,field.getName());
  if (layoutModelProperty != null) {
    parameterDeclarer.withModelProperty(layoutModelProperty);
  }
  return parameterDeclarer;
}
