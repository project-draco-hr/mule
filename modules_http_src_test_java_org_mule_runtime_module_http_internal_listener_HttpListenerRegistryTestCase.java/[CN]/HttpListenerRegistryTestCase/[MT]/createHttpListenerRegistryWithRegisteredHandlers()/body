{
  final HttpListenerRegistry httpListenerRegistry=new HttpListenerRegistry();
  requestHandlerPerPath.put(ROOT_PATH,mock(RequestHandler.class));
  requestHandlerPerPath.put(FIRST_LEVEL_CATCH_ALL,mock(RequestHandler.class));
  requestHandlerPerPath.put(FIRST_LEVEL_PATH_LOWER_CASE,mock(RequestHandler.class));
  requestHandlerPerPath.put(FIRST_LEVEL_PATH_UPPER_CASE,mock(RequestHandler.class));
  requestHandlerPerPath.put(FIRST_LEVEL_PATH_UPPER_CASE_CATCH_ALL,mock(RequestHandler.class));
  requestHandlerPerPath.put(SECOND_LEVEL_PATH,mock(RequestHandler.class));
  requestHandlerPerPath.put(SECOND_LEVEL_URI_PARAM,mock(RequestHandler.class));
  requestHandlerPerPath.put(FOURTH_LEVEL_CATCH_ALL,mock(RequestHandler.class));
  requestHandlerPerPath.put(URI_PARAM_IN_THE_MIDDLE,mock(RequestHandler.class));
  requestHandlerPerPath.put(CATCH_ALL_IN_THE_MIDDLE_NO_COLLISION,mock(RequestHandler.class));
  requestHandlerPerPath.put(SEVERAL_CATCH_ALL,mock(RequestHandler.class));
  for (  String path : requestHandlerPerPath.keySet()) {
    httpListenerRegistry.addRequestHandler(testServer,requestHandlerPerPath.get(path),new ListenerRequestMatcher(AcceptsAllMethodsRequestMatcher.instance(),path));
  }
  httpListenerRegistry.addRequestHandler(testServer,methodPathUriParamGetRequestHandler,new ListenerRequestMatcher(new MethodRequestMatcher("GET"),METHOD_PATH_URI_PARAM));
  httpListenerRegistry.addRequestHandler(testServer,methodPathUriParamPostRequestHandler,new ListenerRequestMatcher(new MethodRequestMatcher("POST"),METHOD_PATH_URI_PARAM));
  httpListenerRegistry.addRequestHandler(testServer,methodPathCatchAllGetRequestHandler,new ListenerRequestMatcher(new MethodRequestMatcher("GET"),METHOD_PATH_CATCH_ALL));
  httpListenerRegistry.addRequestHandler(testServer,methodPathCatchAllPostRequestHandler,new ListenerRequestMatcher(new MethodRequestMatcher("POST"),METHOD_PATH_CATCH_ALL));
  httpListenerRegistry.addRequestHandler(testServer,methodPathWildcardGetRequestHandler,new ListenerRequestMatcher(new MethodRequestMatcher("GET"),METHOD_PATH_WILDCARD));
  httpListenerRegistry.addRequestHandler(testServer,methodPathWildcardPostRequestHandler,new ListenerRequestMatcher(new MethodRequestMatcher("POST"),METHOD_PATH_WILDCARD));
  return httpListenerRegistry;
}
