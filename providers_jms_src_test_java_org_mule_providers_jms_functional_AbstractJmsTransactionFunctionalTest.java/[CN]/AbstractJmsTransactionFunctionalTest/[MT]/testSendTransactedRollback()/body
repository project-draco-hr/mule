{
  final CountDown countDown=new CountDown(2);
  UMODescriptor descriptor=getDescriptor("testComponent",FunctionalTestComponent.class.getName());
  EventCallback callback=new EventCallback(){
    public void eventReceived(    UMOEventContext context,    Object Component) throws Exception {
      callbackCalled=true;
      currentTx=context.getCurrentTransaction();
      assertNotNull(currentTx);
      assertTrue(currentTx.isBegun());
      System.out.println("@@@@ Rolling back transaction @@@@");
      currentTx.setRollbackOnly();
      countDown.release();
    }
  }
;
  initialiseComponent(descriptor,UMOTransactionConfig.ACTION_ALWAYS_BEGIN,UMOTransactionConfig.ACTION_ALWAYS_COMMIT,callback);
  UMOManager manager=MuleManager.getInstance();
  addResultListener(getOutDest().getAddress(),countDown);
  UMOConnector umoCnn=manager.lookupConnector(CONNECTOR_NAME);
  umoCnn.setExceptionStrategy(new RollbackExceptionHandler(countDown));
  manager.start();
  send(DEFAULT_MESSAGE,false,Session.AUTO_ACKNOWLEDGE);
  afterInitialise();
  assertTrue("Only " + countDown.currentCount() + " of "+ countDown.initialCount()+ " checkpoints hit",countDown.attempt(LOCK_WAIT));
  assertNull(currentMsg);
  assertTrue(callbackCalled);
  assertTrue(currentTx.isRolledBack());
  assertNull(receive(getInDest().getAddress(),2000));
}
