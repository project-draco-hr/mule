{
  final CountDown countDown=new CountDown(2);
  UMODescriptor descriptor=getDescriptor("testComponent",FunctionalTestComponent.class.getName());
  EventCallback callback=new EventCallback(){
    public void eventReceived(    UMOEventContext context,    Object Component) throws Exception {
      callbackCalled=true;
      currentTx=context.getCurrentTransaction();
      if (transactionAvailable) {
        assertNotNull(currentTx);
        assertTrue(currentTx.isBegun());
      }
 else {
        assertNull(currentTx);
      }
      countDown.release();
    }
  }
;
  initialiseComponent(descriptor,(transactionAvailable ? UMOTransactionConfig.ACTION_ALWAYS_BEGIN : UMOTransactionConfig.ACTION_NONE),UMOTransactionConfig.ACTION_COMMIT_IF_POSSIBLE,callback);
  MuleManager.getInstance().start();
  addResultListener(getOutDest().getAddress(),countDown);
  send(DEFAULT_MESSAGE,false,Session.AUTO_ACKNOWLEDGE);
  assertTrue("Only " + countDown.currentCount() + " of "+ countDown.initialCount()+ " checkpoints hit",countDown.attempt(LOCK_WAIT));
  assertNotNull(currentMsg);
  assertTrue(currentMsg instanceof TextMessage);
  assertEquals(DEFAULT_MESSAGE + " Received",((TextMessage)currentMsg).getText());
  assertTrue(callbackCalled);
  if (transactionAvailable) {
    assertNotNull(currentTx);
    assertTrue(currentTx.isBegun());
    Thread.sleep(300);
    assertTrue(currentTx.isCommitted());
  }
 else {
    assertNull(currentTx);
  }
}
