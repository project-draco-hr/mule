{
  FunctionalTestComponent ftc=getFunctionalTestComponent("testComponent");
  assertNotNull(ftc);
  ftc.setEventCallback(new EventCallback(){
    @Override public void eventReceived(    MuleEventContext context,    Object component) throws Exception {
      assertEquals("application/octet-stream; charset=ISO-8859-1",context.getMessage().getInboundProperty(MuleProperties.CONTENT_TYPE_PROPERTY));
      assertEquals("We should have an attachment",1,context.getMessage().getInboundAttachmentNames().size());
      DataHandler dh=context.getMessage().getInboundAttachment("attach1");
      assertNotNull("DataHandler with name 'attach1' should not be null",dh);
      assertEquals("We should have an attachment with foo","foo",IOUtils.toString(dh.getInputStream()));
      assertEquals("text/plain; charset=ISO-8859-1",dh.getContentType());
    }
  }
);
  MuleClient client=muleContext.getClient();
  MutableMuleMessage msg=new DefaultMuleMessage("test",muleContext);
  msg.addOutboundAttachment("attach1",new DataHandler(new StringDataSource("foo","attach1")));
  MuleMessage result=client.send("endpoint1",msg);
  assertEquals("We should have no attachments coming back",0,result.getInboundAttachmentNames().size());
}
