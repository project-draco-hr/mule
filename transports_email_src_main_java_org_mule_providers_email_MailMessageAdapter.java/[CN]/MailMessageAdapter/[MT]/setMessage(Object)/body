{
  Message msg;
  if (message instanceof Message) {
    msg=(Message)message;
  }
 else {
    throw new MessageTypeNotSupportedException(message,MailMessageAdapter.class);
  }
  try {
    Object content=msg.getContent();
    if (content instanceof Multipart) {
      this.messagePart=((Multipart)content).getBodyPart(0);
      logger.debug("Received Multipart message");
      for (int i=1; i < ((Multipart)content).getCount(); i++) {
        Part part=((Multipart)content).getBodyPart(i);
        String name=part.getFileName();
        if (name == null) {
          name=String.valueOf(i - 1);
        }
        addAttachment(name,part.getDataHandler());
        addAttachmentHeaders(name,part);
      }
    }
 else {
      messagePart=msg;
    }
    setProperty(MailProperties.TO_ADDRESSES_PROPERTY,MailUtils.mailAddressesToString(msg.getRecipients(Message.RecipientType.TO)));
    setProperty(MailProperties.CC_ADDRESSES_PROPERTY,MailUtils.mailAddressesToString(msg.getRecipients(Message.RecipientType.CC)));
    setProperty(MailProperties.BCC_ADDRESSES_PROPERTY,MailUtils.mailAddressesToString(msg.getRecipients(Message.RecipientType.BCC)));
    setProperty(MailProperties.REPLY_TO_ADDRESSES_PROPERTY,MailUtils.mailAddressesToString(msg.getReplyTo()));
    setProperty(MailProperties.FROM_ADDRESS_PROPERTY,MailUtils.mailAddressesToString(msg.getFrom()));
    setProperty(MailProperties.SUBJECT_PROPERTY,StringUtils.defaultIfEmpty(msg.getSubject(),"(no subject)"));
    setProperty(MailProperties.CONTENT_TYPE_PROPERTY,StringUtils.defaultIfEmpty(msg.getContentType(),"text/plain"));
    Date sentDate=msg.getSentDate();
    if (sentDate == null) {
      sentDate=new Date();
    }
    setProperty(MailProperties.SENT_DATE_PROPERTY,sentDate);
    for (Enumeration e=msg.getAllHeaders(); e.hasMoreElements(); ) {
      Header h=(Header)e.nextElement();
      setProperty(h.getName(),h.getValue());
    }
  }
 catch (  Exception e) {
    throw new MessagingException(new org.mule.config.i18n.Message(Messages.FAILED_TO_CREATE_X,"Message Adapter"),e);
  }
}
