{
  super.initialise();
  if (getSchemaObject() == null) {
    if (schemaLocations == null) {
      throw new InitialisationException(CoreMessages.objectIsNull("schemaLocations"),this);
    }
    String[] split=StringUtils.splitAndTrim(schemaLocations,",");
    Source[] schemas=new Source[split.length];
    for (int i=0; i < split.length; i++) {
      String loc=split[i];
      InputStream schemaStream;
      try {
        schemaStream=loadSchemaStream(loc);
      }
 catch (      IOException e) {
        throw new InitialisationException(e,this);
      }
      if (schemaStream == null) {
        throw new InitialisationException(CoreMessages.failedToLoad(loc),this);
      }
      schemas[i]=new StreamSource(schemaStream);
    }
    SchemaFactory schemaFactory=SchemaFactory.newInstance(getSchemaLanguage());
    if (logger.isInfoEnabled()) {
      logger.info("Schema factory implementation: " + schemaFactory);
    }
    if (this.errorHandler != null) {
      schemaFactory.setErrorHandler(this.errorHandler);
    }
    if (this.resourceResolver == null) {
      this.resourceResolver=new MuleResourceResolver();
    }
    schemaFactory.setResourceResolver(this.resourceResolver);
    Schema schema;
    try {
      schema=schemaFactory.newSchema(schemas);
    }
 catch (    SAXException e) {
      throw new InitialisationException(e,this);
    }
    setSchemaObject(schema);
  }
  if (getSchemaObject() == null) {
    throw new InitialisationException(CoreMessages.objectIsNull("schemaObject"),this);
  }
}
