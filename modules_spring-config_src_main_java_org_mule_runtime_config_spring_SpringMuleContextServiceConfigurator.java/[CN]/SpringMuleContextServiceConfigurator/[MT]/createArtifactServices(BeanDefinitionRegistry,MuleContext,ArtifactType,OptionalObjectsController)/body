{
  createBootstrapBeanDefinitions(beanDefinitionRegistry,muleContext,artifactType,optionalObjectsController);
  createNotificationManager(beanDefinitionRegistry);
  createObjectStoreBeanDefinitions(beanDefinitionRegistry);
  createQueueStoreBeanDefinitions(beanDefinitionRegistry);
  createQueueManagerBeanDefinitions(beanDefinitionRegistry);
  createThreadingProfileBeanDefinitions(beanDefinitionRegistry);
  createSpringSpecificBeanDefinitions(beanDefinitionRegistry);
  beanDefinitionRegistry.registerBeanDefinition(OBJECT_TRANSACTION_MANAGER,getBeanDefinition(TransactionManagerFactoryBean.class));
  beanDefinitionRegistry.registerBeanDefinition(OBJECT_DEFAULT_RETRY_POLICY_TEMPLATE,getBeanDefinition(NoRetryPolicyTemplate.class));
  beanDefinitionRegistry.registerBeanDefinition(OBJECT_EXPRESSION_LANGUAGE,getBeanDefinition(MVELExpressionLanguageWrapper.class));
  beanDefinitionRegistry.registerBeanDefinition(OBJECT_EXTENSION_MANAGER,getBeanDefinition(ExtensionManagerFactoryBean.class));
  beanDefinitionRegistry.registerBeanDefinition(OBJECT_TIME_SUPPLIER,getBeanDefinition(TimeSupplier.class));
  beanDefinitionRegistry.registerBeanDefinition(OBJECT_CONNECTION_MANAGER,getBeanDefinition(DefaultConnectionManager.class));
  beanDefinitionRegistry.registerBeanDefinition(OBJECT_METADATA_MANAGER,getBeanDefinition(MuleMetadataManager.class));
  beanDefinitionRegistry.registerBeanDefinition(OBJECT_OBJECT_NAME_PROCESSOR,getBeanDefinition(MuleObjectNameProcessor.class));
  beanDefinitionRegistry.registerBeanDefinition(OBJECT_SERIALIZER,getBeanDefinitionBuilder(DefaultObjectSerializerFactoryBean.class).addDependsOn(OBJECT_MULE_CONFIGURATION).getBeanDefinition());
  if (artifactType.equals(ArtifactType.APP)) {
    createApplicationServicesBeanDefinitions(beanDefinitionRegistry);
  }
  createEndpointFactory(beanDefinitionRegistry);
}
