{
  byte action;
  if (config == null || (action=config.getAction()) == TransactionConfig.ACTION_INDIFFERENT) {
    return callback.doInTransaction();
  }
  Transaction joinedExternal=null;
  Transaction tx=TransactionCoordination.getInstance().getTransaction();
  if (tx == null && context != null && config != null && config.isInteractWithExternal()) {
    TransactionFactory tmFactory=config.getFactory();
    if (tmFactory instanceof ExternalTransactionAwareTransactionFactory) {
      ExternalTransactionAwareTransactionFactory extmFactory=(ExternalTransactionAwareTransactionFactory)tmFactory;
      joinedExternal=tx=extmFactory.joinExternalTransaction(context);
    }
  }
  Transaction suspendedXATx=null;
  if (action == TransactionConfig.ACTION_NEVER && tx != null) {
    throw new IllegalTransactionStateException(CoreMessages.transactionAvailableButActionIs("Never"));
  }
 else   if ((action == TransactionConfig.ACTION_NONE || action == TransactionConfig.ACTION_ALWAYS_BEGIN) && tx != null) {
    if (logger.isDebugEnabled()) {
      logger.debug(action + ", " + "current TX: "+ tx);
    }
    if (tx.isXA()) {
      suspendedXATx=tx;
      suspendXATransaction(suspendedXATx);
    }
 else {
      resolveTransaction(tx);
    }
    tx=null;
  }
 else   if (action == TransactionConfig.ACTION_ALWAYS_JOIN && tx == null) {
    throw new IllegalTransactionStateException(CoreMessages.transactionNotAvailableButActionIs("Always Join"));
  }
  if (action == TransactionConfig.ACTION_ALWAYS_BEGIN || (action == TransactionConfig.ACTION_BEGIN_OR_JOIN && tx == null)) {
    logger.debug("Beginning transaction");
    tx=config.getFactory().beginTransaction(context);
    logger.debug("Transaction successfully started: " + tx);
  }
 else {
    tx=null;
  }
  T result=callback.doInTransaction();
  if (tx != null) {
    tx=TransactionCoordination.getInstance().getTransaction();
  }
  if (tx != null) {
    resolveTransaction(tx);
  }
  if (suspendedXATx != null) {
    resumeXATransaction(suspendedXATx);
    tx=suspendedXATx;
  }
  if (joinedExternal != null) {
    TransactionCoordination.getInstance().unbindTransaction(joinedExternal);
  }
  return result;
}
