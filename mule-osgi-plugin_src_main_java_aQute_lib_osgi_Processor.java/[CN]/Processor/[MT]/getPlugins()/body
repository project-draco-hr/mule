{
  if (this.plugins != null)   return this.plugins;
  String spe=getProperty(Analyzer.PLUGIN,DEFAULT_PLUGINS);
  Map<String,Map<String,String>> plugins=parseHeader(spe);
  List<Object> list=new ArrayList<Object>();
  list.add(new MakeBnd());
  list.add(new MakeCopy());
  for (  Map.Entry<String,Map<String,String>> entry : plugins.entrySet()) {
    String key=(String)entry.getKey();
    if (key.equals("none"))     return this.plugins=newList();
    try {
      CL loader=getLoader();
      String path=entry.getValue().get("path:");
      if (path != null) {
        File f=getFile(path).getAbsoluteFile();
        loader.add(f.toURL());
      }
      trace("Using plugin %s",key);
      key=removeDuplicateMarker(key);
      Class<?> c=(Class<?>)loader.loadClass(key);
      Object plugin=c.newInstance();
      if (plugin instanceof Plugin) {
        ((Plugin)plugin).setProperties(entry.getValue());
        ((Plugin)plugin).setReporter(this);
      }
      list.add(plugin);
    }
 catch (    Exception e) {
      error("Problem loading the plugin: " + key + " exception: "+ e);
    }
  }
  return this.plugins=list;
}
