{
  Map<String,Map<String,String>> toVisit=new HashMap<String,Map<String,String>>(actual);
  Map<String,Map<String,String>> result=newMap();
  for (Iterator<String> i=instructions.keySet().iterator(); i.hasNext(); ) {
    String instruction=i.next();
    String originalInstruction=instruction;
    Map<String,String> instructedAttributes=instructions.get(instruction);
    if (instruction.startsWith("=")) {
      result.put(instruction.substring(1),instructedAttributes);
      superfluous.remove(originalInstruction);
      continue;
    }
    if (isDuplicate(instruction)) {
      result.put(instruction,instructedAttributes);
      superfluous.remove(originalInstruction);
      continue;
    }
    Instruction instr=Instruction.getPattern(instruction);
    for (Iterator<String> p=toVisit.keySet().iterator(); p.hasNext(); ) {
      String packageName=p.next();
      if (instr.matches(packageName)) {
        superfluous.remove(originalInstruction);
        if (!instr.isNegated()) {
          Map<String,String> newAttributes=new HashMap<String,String>();
          newAttributes.putAll(actual.get(packageName));
          newAttributes.putAll(instructedAttributes);
          result.put(packageName,newAttributes);
        }
 else         if (ignored != null) {
          ignored.put(packageName,new HashMap<String,String>());
        }
        p.remove();
      }
    }
  }
  return result;
}
