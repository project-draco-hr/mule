{
  if (logger.isDebugEnabled()) {
    logger.debug("Uri before parsing is: " + uri);
  }
  Map<String,Object> props=getPropertiesForTemplate(message);
  String newUriString=parser.parse(props,uri);
  Object evalParam=props.get(EVAL_PARAM_PROPERTY);
  if (evalParam != null) {
    newUriString=this.getMuleContext().getExpressionManager().parse(newUriString,new DefaultMuleMessage(evalParam,getMuleContext()),true);
  }
 else {
    newUriString=this.getMuleContext().getExpressionManager().parse(newUriString,message,true);
  }
  if (logger.isDebugEnabled()) {
    logger.debug("Uri after parsing is: " + newUriString);
  }
  try {
    setEndpointURI(new MuleEndpointURI(newUriString,getMuleContext()));
    if (!getLocalConnector().supportsProtocol(getEndpointURI().getScheme())) {
      throw new DispatchException(CoreMessages.schemeCannotChangeForRouter(this.getEndpointURI().getScheme(),getEndpointURI().getScheme()),message,this);
    }
    getEndpointURI().initialise();
    return getEndpointURI();
  }
 catch (  Exception e) {
    throw new DispatchException(CoreMessages.templateCausedMalformedEndpoint(uri,newUriString),message,this,e);
  }
}
