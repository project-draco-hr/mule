{
  assertNotNull(connector);
  MuleDescriptor d=getTestDescriptor("anOrange",Orange.class.getName());
  UMOComponent component=MuleManager.getInstance().getModel().registerComponent(d);
  UMOEndpoint endpoint=new MuleEndpoint("test",new MuleEndpointURI(getTestEndpointURI()),connector,null,UMOEndpoint.ENDPOINT_TYPE_SENDER,null);
  try {
    connector.registerListener(null,null);
    fail("cannot register null");
  }
 catch (  Exception e) {
  }
  try {
    connector.registerListener(null,endpoint);
    fail("cannot register null");
  }
 catch (  Exception e) {
  }
  try {
    connector.registerListener(component,null);
    fail("cannot register null");
  }
 catch (  Exception e) {
  }
  connector.registerListener(component,endpoint);
  connector.unregisterListener(component,endpoint);
  try {
    connector.unregisterListener(null,null);
    fail("cannot unregister null");
  }
 catch (  Exception e) {
  }
  try {
    connector.unregisterListener(component,null);
    fail("cannot unregister null");
  }
 catch (  Exception e) {
  }
  try {
    connector.unregisterListener(null,endpoint);
    fail("cannot unregister null");
  }
 catch (  Exception e) {
  }
  connector.unregisterListener(component,endpoint);
  MuleManager.getInstance().getModel().unregisterComponent(d);
}
