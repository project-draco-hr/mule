{
  LinkedList<ComponentBuildingDefinition> componentBuildingDefinitions=new LinkedList<>();
  componentBuildingDefinitions.add(getInboundEndpointBuildingDefinitionBuilder().build());
  componentBuildingDefinitions.add(getOutboundEndpointBuildingDefinitionBuilder().build());
  componentBuildingDefinitions.add(getEndpointBuildingDefinitionBuilder().build());
  componentBuildingDefinitions.add(baseDefinition.copy().withIdentifier(ENDPOINT_RESPONSE_ELEMENT).withTypeDefinition(fromType(MessageProcessor.class)).withObjectFactoryType(MessageProcessorChainFactoryBean.class).build());
  componentBuildingDefinitions.add(baseDefinition.copy().withIdentifier("service-overrides").withObjectFactoryType(ServiceOverridesObjectFactory.class).withTypeDefinition(fromType(Map.class)).withSetterParameterDefinition("messageReceiver",fromSimpleParameter("messageReceiver").build()).withSetterParameterDefinition("transactedMessageReceiver",fromSimpleParameter("transactedMessageReceiver").build()).withSetterParameterDefinition("xaTransactedMessageReceiver",fromSimpleParameter("xaTransactedMessageReceiver").build()).withSetterParameterDefinition("dispatcherFactory",fromSimpleParameter("dispatcherFactory").build()).withSetterParameterDefinition("inboundTransformer",fromSimpleParameter("inboundTransformer").build()).withSetterParameterDefinition("outboundTransformer",fromSimpleParameter("outboundTransformer").build()).withSetterParameterDefinition("responseTransformer",fromSimpleParameter("responseTransformer").build()).withSetterParameterDefinition("endpointBuilder",fromSimpleParameter("endpointBuilder").build()).withSetterParameterDefinition("messageFactory",fromSimpleParameter("messageFactory").build()).withSetterParameterDefinition("serviceFinder",fromSimpleParameter("serviceFinder").build()).withSetterParameterDefinition("sessionHandler",fromSimpleParameter("sessionHandler").build()).withSetterParameterDefinition("inboundExchangePatterns",fromSimpleParameter("inboundExchangePatterns").build()).withSetterParameterDefinition("outboundExchangePatterns",fromSimpleParameter("outboundExchangePatterns").build()).withSetterParameterDefinition("defaultExchangePattern",fromSimpleParameter("defaultExchangePattern").build()).build());
  return componentBuildingDefinitions;
}
