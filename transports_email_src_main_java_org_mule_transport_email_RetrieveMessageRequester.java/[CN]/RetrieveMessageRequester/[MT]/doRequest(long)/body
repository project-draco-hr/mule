{
  long t0=System.currentTimeMillis();
  if (timeout < 0) {
    timeout=Long.MAX_VALUE;
  }
  do {
    if (hasMessages(folder)) {
      int count=getMessageCount(folder);
      if (count > 0) {
        Message message=getNextMessage(folder);
        if (message != null) {
          flagMessage(folder,message);
          if (moveToFolder != null) {
            Message newMessage=message;
            if (message instanceof IMAPMessage) {
              newMessage=new MimeMessage((IMAPMessage)message);
            }
            folder.copyMessages(new Message[]{message},moveToFolder);
            message=newMessage;
          }
          return new DefaultMuleMessage(castConnector().getMessageAdapter(message),connector.getMuleContext());
        }
      }
 else       if (count == -1) {
        throw new MessagingException("Cannot monitor folder: " + folder.getFullName() + " as folder is closed");
      }
    }
    long sleep=Math.min(castConnector().getCheckFrequency(),timeout - (System.currentTimeMillis() - t0));
    if (sleep > 0) {
      if (logger.isDebugEnabled()) {
        logger.debug("No results, sleeping for " + sleep);
      }
      Thread.sleep(sleep);
    }
 else {
      logger.debug("Timeout");
      return null;
    }
  }
 while (true);
}
