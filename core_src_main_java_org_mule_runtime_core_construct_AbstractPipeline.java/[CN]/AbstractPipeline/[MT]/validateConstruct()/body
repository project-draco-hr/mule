{
  super.validateConstruct();
  boolean userConfiguredProcessingStrategy=!(getProcessingStrategyFactory() instanceof DefaultFlowProcessingStrategyFactory);
  boolean userConfiguredAsyncProcessingStrategy=getProcessingStrategyFactory() instanceof AsynchronousProcessingStrategyFactory && userConfiguredProcessingStrategy;
  boolean redeliveryHandlerConfigured=isRedeliveryPolicyConfigured();
  boolean isCompatibleWithAsync=sourceCompatibleWithAsync.evaluate(messageSource);
  if (userConfiguredAsyncProcessingStrategy && (!(messageSource == null || isCompatibleWithAsync) || redeliveryHandlerConfigured)) {
    throw new FlowConstructInvalidException(CoreMessages.createStaticMessage("One of the message sources configured on this Flow is not " + "compatible with an asynchronous processing strategy.  Either " + "because it is request-response, has a transaction defined, or "+ "messaging redelivered is configured."),this);
  }
  if (getProcessingStrategyFactory() instanceof NonBlockingProcessingStrategyFactory && messageSource != null && !(messageSource instanceof NonBlockingMessageSource)) {
    throw new FlowConstructInvalidException(CoreMessages.createStaticMessage(format("The non-blocking processing strategy (%s) currently only supports non-blocking messages sources (source is %s).",getProcessingStrategyFactory().toString(),messageSource.toString())),this);
  }
}
