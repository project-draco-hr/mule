{
  Service testService=getTestService("test",Apple.class);
  MuleSession session=getTestSession(testService,muleContext);
  InboundRouterCollection messageRouter=new DefaultInboundRouterCollection();
  TestEventAggregator router=new TestEventAggregator(3);
  messageRouter.addRouter(router);
  messageRouter.setCatchAllStrategy(new LoggingCatchAllStrategy());
  router.setMuleContext(muleContext);
  router.initialise();
  MuleMessage message1=new DefaultMuleMessage("test event A",muleContext);
  MuleMessage message2=new DefaultMuleMessage("test event B",muleContext);
  MuleMessage message3=new DefaultMuleMessage("test event C",muleContext);
  message1.setCorrelationId(message1.getUniqueId());
  message2.setCorrelationId(message1.getUniqueId());
  message3.setCorrelationId(message1.getUniqueId());
  ImmutableEndpoint endpoint=getTestOutboundEndpoint(false);
  MuleEvent event1=new DefaultMuleEvent(message1,endpoint,session);
  MuleEvent event2=new DefaultMuleEvent(message2,endpoint,session);
  MuleEvent event3=new DefaultMuleEvent(message3,endpoint,session);
  assertTrue(router.isMatch(event1));
  assertTrue(router.isMatch(event2));
  assertTrue(router.isMatch(event3));
  assertNull(router.process(event1));
  assertNull(router.process(event2));
  MuleEvent[] results=router.process(event3);
  assertNotNull(results);
  assertEquals(1,results.length);
  assertEquals("test event A test event B test event C ",results[0].getMessageAsString());
}
