{
  int length=5000;
  final MuleClient client=new MuleClient(muleContext);
  StringBuffer b=new StringBuffer();
  int counter=1;
  while (b.length() < length) {
    b.append(counter).append(" ");
    counter++;
  }
  final String largeString=b.toString().trim();
  final String msg="<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" " + "xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " + "xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">"+ "<soap:Body>"+ "<echo xmlns=\"http://simple.component.mule.org/\">"+ "<echo>" + largeString + "</echo>"+ "</echo>"+ "</soap:Body>"+ "</soap:Envelope>";
  final CountDownLatch latch=new CountDownLatch(100);
  Runnable runnable=new Runnable(){
    public void run(){
      for (int i=0; i < 20; i++) {
        try {
          MuleMessage result=client.send("http://localhost:" + getPorts().get(0) + "/services/EchoProxy",msg,null);
          String payloadAsStr=result.getPayloadAsString();
          assertTrue("The payload length should never be 0",payloadAsStr.length() != 0);
          assertTrue(payloadAsStr.indexOf(largeString) != -1);
          latch.countDown();
        }
 catch (        Exception e) {
          e.printStackTrace();
        }
      }
    }
  }
;
  for (int j=0; j < 5; j++) {
    new Thread(runnable).start();
  }
  latch.await(50000,TimeUnit.SECONDS);
}
