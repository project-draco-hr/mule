{
  if (component.getInterfaceBindings() != null) {
    Map<Class<?>,Object> bindings=new HashMap<Class<?>,Object>();
    for (    InterfaceBinding interfaceBinding : component.getInterfaceBindings()) {
      Object proxy=bindings.get(interfaceBinding.getInterface());
      if (proxy == null) {
        proxy=interfaceBinding.createProxy(componentObject);
        bindings.put(interfaceBinding.getInterface(),proxy);
        Method setterMethod;
        List methods=ClassUtils.getSatisfiableMethods(componentObject.getClass(),new Class[]{interfaceBinding.getInterface()},true,false,null);
        if (methods.size() == 1) {
          setterMethod=(Method)methods.get(0);
        }
 else         if (methods.size() > 1) {
          throw new TooManySatisfiableMethodsException(componentObject.getClass(),new Class[]{interfaceBinding.getInterface()});
        }
 else {
          throw new NoSatisfiableMethodsException(componentObject.getClass(),new Class[]{interfaceBinding.getInterface()});
        }
        try {
          setterMethod.invoke(componentObject,proxy);
        }
 catch (        Exception e) {
          throw new InitialisationException(CoreMessages.failedToSetProxyOnService(interfaceBinding,componentObject.getClass()),e,this);
        }
      }
 else {
        BindingInvocationHandler handler=(BindingInvocationHandler)Proxy.getInvocationHandler(proxy);
        handler.addRouterForInterface(interfaceBinding);
      }
    }
  }
}
