{
  MuleClient client=new MuleClient(muleContext);
  for (int i=0; i < NUM_MESSAGES; ++i) {
    MuleMessage result=client.send("sendManyEndpoint",TEST_MESSAGE,null);
    assertEquals(TEST_MESSAGE + " Received",result.getPayloadAsString());
  }
  Service c=muleContext.getRegistry().lookupService("testComponent2");
  assertTrue("Service should be a TestSedaService",c instanceof TestSedaService);
  Object ftc=getComponent(c);
  assertNotNull("Functional Test Service not found in the model.",ftc);
  assertTrue("Service should be a FunctionalTestComponent",ftc instanceof FunctionalTestComponent);
  EventCallback cc=((FunctionalTestComponent)ftc).getEventCallback();
  assertNotNull("EventCallback is null",cc);
  assertTrue("EventCallback should be a CounterCallback",cc instanceof CounterCallback);
  assertEquals(NUM_MESSAGES,((CounterCallback)cc).getCallbackCount());
}
