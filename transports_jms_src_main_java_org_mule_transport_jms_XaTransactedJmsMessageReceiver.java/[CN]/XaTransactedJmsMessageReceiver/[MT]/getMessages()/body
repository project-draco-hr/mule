{
  Session session=this.connector.getSessionFromTransaction();
  Transaction tx=TransactionCoordination.getInstance().getTransaction();
  MessageConsumer consumer=createConsumer();
  Message message=null;
  try {
    message=consumer.receive(timeout);
  }
 catch (  JMSException e) {
    if (!this.isConnected()) {
    }
 else {
      throw e;
    }
  }
  if (message == null) {
    if (tx != null) {
      tx.setRollbackOnly();
    }
    return null;
  }
  message=connector.preProcessMessage(message,session);
  if (logger.isDebugEnabled()) {
    logger.debug("Message received it is of type: " + ClassUtils.getSimpleName(message.getClass()));
    if (message.getJMSDestination() != null) {
      logger.debug("Message received on " + message.getJMSDestination() + " ("+ message.getJMSDestination().getClass().getName()+ ")");
    }
 else {
      logger.debug("Message received on unknown destination");
    }
    logger.debug("Message CorrelationId is: " + message.getJMSCorrelationID());
    logger.debug("Jms Message Id is: " + message.getJMSMessageID());
  }
  if (message.getJMSRedelivered()) {
    if (logger.isDebugEnabled()) {
      logger.debug("Message with correlationId: " + message.getJMSCorrelationID() + " is redelivered. handing off to Exception Handler");
    }
    ((RedeliveryHandler)redeliveryHandler.get()).handleRedelivery(message,endpoint,flowConstruct);
  }
  MuleMessage messageToRoute=createMuleMessage(message,endpoint.getEncoding());
  routeMessage(messageToRoute);
  return null;
}
