{
  logger.debug("Create a consumer for the jms destination");
  try {
    JmsSupport jmsSupport=this.connector.getJmsSupport();
    JmsThreadContext ctx=context.getContext();
    if (ctx == null) {
      ctx=new JmsThreadContext();
    }
    Session session;
    Transaction tx=TransactionCoordination.getInstance().getTransaction();
    if (this.reuseSession && ctx.session != null) {
      session=ctx.session;
      tx.bindResource(this.connector.getConnection(),session);
    }
 else {
      session=this.connector.getSession(endpoint);
      if (session != null && tx != null) {
        if (session instanceof XaTransaction.MuleXaObject) {
          ((XaTransaction.MuleXaObject)session).setReuseObject(reuseSession);
        }
 else {
          logger.warn("Session should be XA, but is of type " + session.getClass().getName());
        }
      }
    }
    if (reuseSession) {
      ctx.session=session;
    }
    if (this.reuseConsumer && ctx.consumer != null) {
      return ctx.consumer;
    }
    final boolean topic=connector.getTopicResolver().isTopic(endpoint);
    Destination dest=jmsSupport.createDestination(session,endpoint);
    String selector=null;
    if (endpoint.getFilter() != null && endpoint.getFilter() instanceof JmsSelectorFilter) {
      selector=((JmsSelectorFilter)endpoint.getFilter()).getExpression();
    }
 else     if (endpoint.getProperties() != null) {
      selector=(String)endpoint.getProperties().get(JmsConstants.JMS_SELECTOR_PROPERTY);
    }
    String tempDurable=(String)endpoint.getProperties().get("durable");
    boolean durable=connector.isDurable();
    if (tempDurable != null) {
      durable=Boolean.valueOf(tempDurable);
    }
    String durableName=(String)endpoint.getProperties().get("durableName");
    if (durableName == null && durable && topic) {
      durableName="mule." + connector.getName() + "."+ endpoint.getEndpointURI().getAddress();
      logger.debug("Jms Connector for this receiver is durable but no durable name has been specified. Defaulting to: " + durableName);
    }
    MessageConsumer consumer=jmsSupport.createConsumer(session,dest,selector,connector.isNoLocal(),durableName,topic);
    if (reuseConsumer) {
      ctx.consumer=consumer;
    }
    return consumer;
  }
 catch (  JMSException e) {
    throw new ConnectException(e,this);
  }
}
