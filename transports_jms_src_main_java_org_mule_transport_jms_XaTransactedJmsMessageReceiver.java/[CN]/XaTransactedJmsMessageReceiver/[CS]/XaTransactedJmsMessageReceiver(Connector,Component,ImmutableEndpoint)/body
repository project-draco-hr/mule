{
  super(umoConnector,component,endpoint);
  this.setFrequency(DEFAULT_JMS_POLL_FREQUENCY);
  this.setTimeUnit(DEFAULT_JMS_POLL_TIMEUNIT);
  this.connector=(JmsConnector)umoConnector;
  this.timeout=endpoint.getTransactionConfig().getTimeout();
  if (this.connectionStrategy instanceof SingleAttemptConnectionStrategy) {
    this.reuseConsumer=true;
    this.reuseSession=true;
  }
  this.reuseConsumer=MapUtils.getBooleanValue(endpoint.getProperties(),"reuseConsumer",this.reuseConsumer);
  this.reuseSession=MapUtils.getBooleanValue(endpoint.getProperties(),"reuseSession",this.reuseSession);
  boolean topic=connector.getTopicResolver().isTopic(getEndpoint());
  if (topic && (reuseConsumer || reuseSession)) {
    logger.warn("Destination " + getEndpoint().getEndpointURI() + " is a topic and XA transaction was "+ "configured. Forcing 'reuseSession' and 'reuseConsumer' to false. Set these "+ "on endpoint to avoid the message.");
    reuseConsumer=false;
    reuseSession=false;
  }
  this.setUseMultipleTransactedReceivers(!topic);
  try {
    redeliveryHandler=this.connector.getRedeliveryHandler();
    redeliveryHandler.setConnector(this.connector);
  }
 catch (  Exception e) {
    throw new CreateException(e,this);
  }
}
