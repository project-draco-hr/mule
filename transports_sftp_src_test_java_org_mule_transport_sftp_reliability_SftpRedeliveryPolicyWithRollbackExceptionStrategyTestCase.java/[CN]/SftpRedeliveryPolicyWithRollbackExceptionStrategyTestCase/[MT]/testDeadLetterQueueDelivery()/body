{
  final AtomicInteger deliveredTimes=new AtomicInteger(0);
  final CountDownLatch latch=new CountDownLatch(MAX_REDELIVERY_ATTEMPS);
  muleContext.registerListener(new ExceptionNotificationListener<ExceptionNotification>(){
    @Override public void onNotification(    ExceptionNotification notification){
      deliveredTimes.incrementAndGet();
      latch.countDown();
    }
  }
);
  super.testDeadLetterQueueDelivery();
  assertThat(latch.await(TIMEOUT,TimeUnit.MILLISECONDS),is(true));
  PollingProber pollingProber=new PollingProber(TIMEOUT,100);
  pollingProber.check(new JUnitProbe(){
    @Override protected boolean test() throws Exception {
      assertThat(deliveredTimes.get(),is(MAX_REDELIVERY_ATTEMPS + 2));
      return true;
    }
    @Override public String describeFailure(){
      return "Incorrect amount of notifications received";
    }
  }
);
}
