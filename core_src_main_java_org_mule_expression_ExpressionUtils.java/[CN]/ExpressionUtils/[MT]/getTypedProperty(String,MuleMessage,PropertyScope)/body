{
  boolean required=true;
  if (expression.endsWith(OPTIONAL_ARGUMENT)) {
    expression=expression.substring(0,expression.length() - OPTIONAL_ARGUMENT.length());
    required=false;
  }
  final String propertyName=expression.trim();
  Object result=msg.getProperty(propertyName,scope);
  if (result == null && required) {
    throw new RequiredValueException(CoreMessages.expressionEvaluatorReturnedNull("header",scope.getScopeName() + ":" + expression));
  }
  DataType<?> propertyDataType=msg.getPropertyDataType(propertyName,scope);
  if (propertyDataType == null) {
    propertyDataType=DataTypeFactory.create(Object.class,null);
  }
  return new TypedValue(result,propertyDataType);
}
