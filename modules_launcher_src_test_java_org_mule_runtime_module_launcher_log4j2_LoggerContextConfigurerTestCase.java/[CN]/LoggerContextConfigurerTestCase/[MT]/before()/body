{
  contextConfigurer=new LoggerContextConfigurer();
  when(context.isStandlone()).thenReturn(true);
  when(context.getConfiguration()).thenReturn(configuration);
  converter=null;
  doAnswer(new Answer<Object>(){
    @Override public Object answer(    InvocationOnMock invocation) throws Throwable {
      converter=invocation.getArguments()[1];
      return null;
    }
  }
).when(configuration).addComponent(eq("Converter"),anyObject());
  when(configuration.getComponent(CONVERTER_COMPONENT)).thenAnswer(new Answer<Object>(){
    @Override public Object answer(    InvocationOnMock invocation) throws Throwable {
      return converter;
    }
  }
);
}
