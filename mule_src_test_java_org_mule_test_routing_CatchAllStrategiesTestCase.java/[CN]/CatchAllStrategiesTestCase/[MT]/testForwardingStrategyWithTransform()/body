{
  ForwardingCatchAllStrategy strategy=new ForwardingCatchAllStrategy();
  strategy.setSendTransformed(true);
  Mock endpoint=getMockEndpoint();
  Mock dispatcher=new Mock(UMOMessageDispatcher.class);
  Mock connector=getMockConnector();
  UMOEvent event=getTestEvent("UncaughtEvent");
  strategy.setEndpoint((UMOEndpoint)endpoint.proxy());
  endpoint.expectAndReturn("getTransformer",new TestEventTransformer());
  endpoint.expectAndReturn("getTransformer",new TestEventTransformer());
  endpoint.expectAndReturn("getProperties",new HashMap());
  endpoint.expectAndReturn("getProperties",new HashMap());
  endpoint.expectAndReturn("getConnector",(UMOConnector)connector.proxy());
  endpoint.expectAndReturn("getEndpointURI",new MuleEndpointURI("test://dummy"));
  connector.expectAndReturn("getDispatcher","dummy",(UMOMessageDispatcher)dispatcher.proxy());
  dispatcher.expect("send",new Constraint(){
    public boolean eval(    Object arg0){
      if (arg0 instanceof UMOEvent) {
        return "Transformed Test Data".equals(((UMOEvent)arg0).getMessage().getPayload());
      }
      return false;
    }
  }
);
  strategy.catchMessage(event.getMessage(),null,true);
  endpoint.verify();
  dispatcher.verify();
  connector.verify();
  assertNotNull(strategy.getEndpoint());
}
