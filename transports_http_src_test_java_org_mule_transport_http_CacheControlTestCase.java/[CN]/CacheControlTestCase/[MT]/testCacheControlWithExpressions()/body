{
  CacheControlHeader cacheControl=new CacheControlHeader();
  cacheControl.setDirective(HEADER_DIRECTIVE);
  cacheControl.setMaxAge(HEADER_MAX_AGE);
  cacheControl.setMustRevalidate(HEADER_MUST_REVALIDATE);
  cacheControl.setNoCache(HEADER_NO_CACHE);
  cacheControl.setNoStore(HEADER_NO_STORE);
  when(expressionManager.isExpression(HEADER_DIRECTIVE)).thenReturn(true);
  when(expressionManager.evaluate(HEADER_DIRECTIVE,muleMessage)).thenReturn("public");
  when(expressionManager.isExpression(HEADER_MAX_AGE)).thenReturn(true);
  when(expressionManager.evaluate(HEADER_MAX_AGE,muleMessage)).thenReturn(3600);
  when(expressionManager.isExpression(HEADER_MUST_REVALIDATE)).thenReturn(true);
  when(expressionManager.evaluate(HEADER_MUST_REVALIDATE,muleMessage)).thenReturn(true);
  when(expressionManager.isExpression(HEADER_NO_CACHE)).thenReturn(true);
  when(expressionManager.evaluate(HEADER_NO_CACHE,muleMessage)).thenReturn(true);
  when(expressionManager.isExpression(HEADER_NO_STORE)).thenReturn(true);
  when(expressionManager.evaluate(HEADER_NO_STORE,muleMessage)).thenReturn(true);
  cacheControl.evaluate(muleMessage,expressionManager);
  assertEquals("public,no-cache,no-store,must-revalidate,max-age=3600",cacheControl.toString());
}
