{
  int i=expression.indexOf(".");
  String property;
  String method;
  if (i > -1) {
    property=expression.substring(0,i);
    method=expression.substring(i + 1);
  }
 else {
    throw new IllegalArgumentException();
  }
  Object[] args;
  if (message.getPayload() instanceof Map) {
    args=((Map)message.getPayload()).values().toArray(new Object[]{});
  }
 else   if (message.getPayload().getClass().isArray()) {
    args=(Object[])message.getPayload();
  }
 else {
    args=new Object[]{message.getPayload()};
  }
  Object o=message.getInvocationProperty(property,null);
  if (o != null) {
    try {
      return MethodUtils.invokeMethod(o,method,args);
    }
 catch (    Exception e) {
      throw new ExpressionRuntimeException(CoreMessages.failedToInvoke(expression),e);
    }
  }
 else {
    throw new ExpressionRuntimeException(CoreMessages.expressionMalformed(expression,getName()));
  }
}
