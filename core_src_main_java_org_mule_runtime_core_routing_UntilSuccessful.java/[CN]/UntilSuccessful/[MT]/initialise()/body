{
  if (routes.isEmpty()) {
    throw new InitialisationException(I18nMessageFactory.createStaticMessage("One message processor must be configured within UntilSuccessful."),this);
  }
  if (routes.size() > 1) {
    throw new InitialisationException(I18nMessageFactory.createStaticMessage("Only one message processor is allowed within UntilSuccessful." + " Use a Processor Chain to group several message processors into one."),this);
  }
  setWaitTime();
  super.initialise();
  if (deadLetterQueue != null) {
    resolveDlqMessageProcessor();
  }
  if (failureExpression != null) {
    failureExpressionFilter=new ExpressionFilter(failureExpression);
  }
 else {
    failureExpressionFilter=new ExpressionFilter("exception != null");
  }
  failureExpressionFilter.setMuleContext(muleContext);
  if ((ackExpression != null) && (!muleContext.getExpressionManager().isExpression(ackExpression))) {
    throw new InitialisationException(I18nMessageFactory.createStaticMessage("Invalid ackExpression: " + ackExpression),this);
  }
  if (synchronous) {
    this.untilSuccessfulStrategy=new SynchronousUntilSuccessfulProcessingStrategy();
  }
 else {
    if (threadingProfile == null) {
      threadingProfile=muleContext.getDefaultThreadingProfile();
    }
    this.untilSuccessfulStrategy=new AsynchronousUntilSuccessfulProcessingStrategy();
    ((MessagingExceptionHandlerAware)this.untilSuccessfulStrategy).setMessagingExceptionHandler(messagingExceptionHandler);
  }
  this.untilSuccessfulStrategy.setUntilSuccessfulConfiguration(this);
  if (untilSuccessfulStrategy instanceof Initialisable) {
    ((Initialisable)untilSuccessfulStrategy).initialise();
  }
  if (untilSuccessfulStrategy instanceof MuleContextAware) {
    ((MuleContextAware)untilSuccessfulStrategy).setMuleContext(muleContext);
  }
  String flowName=flowConstruct.getName();
  String clusterId=muleContext.getClusterId();
  eventKeyPrefix=flowName + "-" + clusterId+ "-";
}
