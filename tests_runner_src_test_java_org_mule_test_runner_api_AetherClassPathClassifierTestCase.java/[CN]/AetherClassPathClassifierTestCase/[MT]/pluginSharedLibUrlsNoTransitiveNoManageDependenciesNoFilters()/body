{
  when(context.getSharedPluginLibCoordinates()).thenReturn(newArrayList(derbyDriverDep.getArtifact().getGroupId() + ":" + derbyDriverDep.getArtifact().getArtifactId()));
  File derbyDriverFile=temporaryFolder.newFile();
  ArtifactResult artifactResult=mock(ArtifactResult.class);
  Artifact derbyDriverFatArtifact=derbyDriverDep.getArtifact().setFile(derbyDriverFile);
  when(artifactResult.getArtifact()).thenReturn(derbyDriverFatArtifact);
  when(dependencyResolver.resolveArtifact(argThat(equalTo(derbyDriverDep.getArtifact())))).thenReturn(artifactResult);
  ArtifactDescriptorResult defaultArtifactDescriptorResult=noManagedDependencies();
  ArtifactUrlClassification classification=classifier.classify(context);
  assertThat(classification.getApplicationUrls(),is(empty()));
  assertThat(classification.getPluginClassificationUrls(),is(empty()));
  assertThat(classification.getPluginSharedLibUrls(),hasSize(1));
  assertThat(classification.getPluginSharedLibUrls(),hasItem(derbyDriverFile.toURI().toURL()));
  assertThat(classification.getContainerUrls(),is(empty()));
  verify(defaultArtifactDescriptorResult,atLeastOnce()).getManagedDependencies();
  verify(dependencyResolver,atLeastOnce()).readArtifactDescriptor(any(Artifact.class));
  verify(dependencyResolver).resolveArtifact(argThat(equalTo(derbyDriverDep.getArtifact())));
}
