{
  Transformer transformer=exactTransformerCache.get(source.toString() + result.toString());
  if (transformer != null) {
    return transformer;
  }
  List<Transformer> trans=muleContext.getRegistry().lookupTransformers(source,result);
  Transformer compositeTransformer=graphTransformerResolver.resolve(source,result);
  if (compositeTransformer != null) {
    trans=new LinkedList<Transformer>(trans);
    trans.add(compositeTransformer);
  }
  transformer=getNearestTransformerMatch(trans,source.getType(),result.getType());
  Transformer secondPass;
  if (transformer == null) {
    if (result.getType().equals(String.class)) {
      secondPass=objectToString;
    }
 else     if (result.getType().equals(byte[].class)) {
      secondPass=objectToByteArray;
    }
 else {
      return null;
    }
    trans=muleContext.getRegistry().lookupTransformers(source,DataType.OBJECT);
    transformer=getNearestTransformerMatch(trans,source.getType(),result.getType());
    if (transformer != null) {
      transformer=new TransformerChain(transformer,secondPass);
      try {
        muleContext.getRegistry().registerTransformer(transformer);
      }
 catch (      MuleException e) {
        throw new ResolverException(e.getI18nMessage(),e);
      }
    }
  }
  if (transformer != null) {
    exactTransformerCache.put(source.toString() + result.toString(),transformer);
  }
  return transformer;
}
