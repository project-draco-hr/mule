{
  validateAlreadyBuilt();
  checkNotNull(collectionType,"'collectionType' cannot be null.");
  if (!Collection.class.isAssignableFrom(collectionType)) {
    throw new IllegalArgumentException("collectionType " + collectionType.getName() + " is not a Collection type");
  }
  this.typeRef=new WeakReference<>(handleProxy(collectionType));
  if (this.itemTypeBuilder == null) {
    this.itemTypeBuilder=DataType.builder();
  }
  final Class<?> itemType=getCollectionType((Class<? extends Iterable<?>>)typeRef.get());
  if (itemType != null) {
    this.itemTypeBuilder.type(itemType);
  }
  return asCollectionTypeBuilder();
}
