{
  final Properties p=PropertiesUtils.loadProperties(new FileInputStream(descriptor));
  ApplicationDescriptor d=new ApplicationDescriptor();
  d.setName(applicationName);
  d.setEncoding(p.getProperty(PROPERTY_ENCODING));
  d.setConfigurationBuilder(p.getProperty(PROPERTY_CONFIG_BUILDER));
  d.setDomain(p.getProperty(PROPERTY_DOMAIN));
  final String resProps=p.getProperty(PROPERTY_CONFIG_RESOURCES);
  String[] urls;
  if (StringUtils.isBlank(resProps)) {
    urls=new String[]{ApplicationDescriptor.DEFAULT_CONFIGURATION_RESOURCE};
  }
 else {
    urls=resProps.split(",");
  }
  d.setConfigResources(urls);
  String[] absoluteResourcePaths=convertConfigResourcesToAbsolutePatch(urls,applicationName);
  d.setAbsoluteResourcePaths(absoluteResourcePaths);
  d.setConfigResourcesFile(convertConfigResourcesToFile(absoluteResourcePaths));
  d.setRedeploymentEnabled(BooleanUtils.toBoolean(p.getProperty(PROPERTY_REDEPLOYMENT_ENABLED,Boolean.TRUE.toString())));
  final String overrideString=p.getProperty(PROPERTY_LOADER_OVERRIDE);
  if (StringUtils.isNotBlank(overrideString)) {
    Set<String> values=new HashSet<>();
    final String[] overrides=overrideString.split(",");
    Collections.addAll(values,overrides);
    d.setLoaderOverride(values);
  }
  return d;
}
