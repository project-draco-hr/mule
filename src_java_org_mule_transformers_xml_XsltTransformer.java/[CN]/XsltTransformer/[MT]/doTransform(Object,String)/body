{
  try {
    Source sourceDoc=null;
    DocumentResult resultDoc=new DocumentResult();
    DefaultErrorListener errorListener=null;
    if (src instanceof byte[]) {
      sourceDoc=new StreamSource(new ByteArrayInputStream((byte[])src));
    }
 else     if (src instanceof String) {
      String xml=(String)src;
      Document dom4jDoc=DocumentHelper.parseText(xml);
      sourceDoc=new DocumentSource(dom4jDoc);
    }
 else     if (src instanceof DocumentSource) {
      sourceDoc=(DocumentSource)src;
    }
 else     if (src instanceof Document) {
      sourceDoc=new DocumentSource((Document)src);
    }
    assert(sourceDoc != null);
    errorListener=new DefaultErrorListener(this);
    transformer.setErrorListener(errorListener);
    if (logger.isDebugEnabled()) {
      logger.debug("Before transform: " + sourceDoc.toString());
    }
    transformer.transform(sourceDoc,resultDoc);
    if (logger.isDebugEnabled()) {
      logger.debug("After transform: " + resultDoc.toString());
    }
    if (errorListener.isError()) {
      throw errorListener.getException();
    }
    if (Document.class.equals(returnClass)) {
      return resultDoc.getDocument();
    }
 else {
      Document transformedDoc=resultDoc.getDocument();
      return transformedDoc.asXML();
    }
  }
 catch (  Exception e) {
    throw new TransformerException(this,e);
  }
}
