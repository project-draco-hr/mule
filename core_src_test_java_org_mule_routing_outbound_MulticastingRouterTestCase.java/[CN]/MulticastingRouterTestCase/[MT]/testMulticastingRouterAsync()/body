{
  Mock session=MuleTestUtils.getMockSession();
  session.matchAndReturn("getFlowConstruct",getTestService());
  RegExFilter filter=new RegExFilter("(.*) Message");
  OutboundEndpoint endpoint1=getTestOutboundEndpoint("Test1Provider","test://test1",null,filter,null);
  assertNotNull(endpoint1);
  OutboundEndpoint endpoint2=getTestOutboundEndpoint("Test2Provider","test://test2",null,filter,null);
  assertNotNull(endpoint2);
  Mock mockendpoint1=RouterTestUtils.getMockEndpoint(endpoint1);
  Mock mockendpoint2=RouterTestUtils.getMockEndpoint(endpoint2);
  MulticastingRouter router=createObject(MulticastingRouter.class);
  List<MessageProcessor> endpoints=new ArrayList<MessageProcessor>();
  endpoints.add((OutboundEndpoint)mockendpoint1.proxy());
  endpoints.add((OutboundEndpoint)mockendpoint2.proxy());
  router.setRoutes(endpoints);
  MuleMessage message=new DefaultMuleMessage(TEST_MESSAGE,muleContext);
  assertTrue(router.isMatch(message));
  mockendpoint1.expect("process",RouterTestUtils.getArgListCheckerMuleEvent());
  mockendpoint2.expect("process",RouterTestUtils.getArgListCheckerMuleEvent());
  router.route(new OutboundRoutingTestEvent(message,(MuleSession)session.proxy()));
  mockendpoint1.verify();
  mockendpoint2.verify();
}
