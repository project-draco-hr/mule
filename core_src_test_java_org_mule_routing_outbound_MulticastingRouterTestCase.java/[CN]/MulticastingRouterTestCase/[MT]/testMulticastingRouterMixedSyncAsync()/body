{
  Mock session=MuleTestUtils.getMockSession();
  session.matchAndReturn("getFlowConstruct",getTestService());
  OutboundEndpoint endpoint1=getTestOutboundEndpoint("Test1Provider","test://Test1Provider?synchronous=true");
  assertNotNull(endpoint1);
  OutboundEndpoint endpoint2=getTestOutboundEndpoint("Test2Provider","test://Test2Provider?synchronous=false");
  assertNotNull(endpoint2);
  MulticastingRouter router=createObject(MulticastingRouter.class);
  List<OutboundEndpoint> endpoints=new ArrayList<OutboundEndpoint>();
  endpoints.add(endpoint1);
  endpoints.add(endpoint2);
  router.setEndpoints(endpoints);
  MuleMessage message=new DefaultMuleMessage(TEST_MESSAGE,muleContext);
  assertTrue(router.isMatch(message));
  session.expectAndReturn("sendEvent",C.args(new PayloadConstraint(TEST_MESSAGE),C.eq(endpoint1)),message);
  session.expectAndReturn("dispatchEvent",C.args(new PayloadConstraint(TEST_MESSAGE),C.eq(endpoint2)),message);
  MuleMessage result=router.route(message,(MuleSession)session.proxy());
  assertNotNull(result);
  assertEquals(message,result);
  session.verify();
}
