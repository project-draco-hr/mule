{
  UMOEvent[] collectedEvents=events.toArray();
  UMOEvent firstEvent=collectedEvents[0];
  Arrays.sort(collectedEvents,eventComparator);
  ByteArrayOutputStream baos=new ByteArrayOutputStream(DEFAULT_BUFFER_SIZE);
  try {
    for (Iterator iterator=IteratorUtils.arrayIterator(collectedEvents); iterator.hasNext(); ) {
      UMOEvent event=(UMOEvent)iterator.next();
      baos.write(event.getMessageAsBytes());
    }
    UMOMessage message;
    try {
      message=new MuleMessage(SerializationUtils.deserialize(baos.toByteArray()),firstEvent.getMessage());
    }
 catch (    SerializationException e) {
      message=new MuleMessage(baos.toByteArray(),firstEvent.getMessage());
    }
    message.setCorrelationGroupSize(-1);
    message.setCorrelationSequence(-1);
    return message;
  }
 catch (  Exception e) {
    throw new AggregationException(events,firstEvent.getEndpoint(),e);
  }
 finally {
    IOUtils.closeQuietly(baos);
  }
}
