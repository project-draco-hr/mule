{
  try {
    final EndpointURI uri=endpoint.getEndpointURI();
    String filename=getFilename(endpoint,message);
    final FTPClient client;
    try {
      client=this.createFtpClient(endpoint);
    }
 catch (    Exception e) {
      throw new DispatcherConnectException(e,(OutboundEndpoint)endpoint);
    }
    try {
      OutputStream out=client.storeFileStream(filename);
      return new CallbackOutputStream(out,new CallbackOutputStream.Callback(){
        public void onClose() throws Exception {
          try {
            if (!client.completePendingCommand()) {
              client.logout();
              client.disconnect();
              throw new IOException("FTP Stream failed to complete pending request");
            }
          }
  finally {
            releaseFtp(uri,client);
          }
        }
      }
);
    }
 catch (    Exception e) {
      logger.debug("Error getting output stream: ",e);
      releaseFtp(uri,client);
      throw e;
    }
  }
 catch (  ConnectException ce) {
    throw ce;
  }
catch (  Exception e) {
    throw new DispatchException(CoreMessages.streamingFailedNoStream(),message,endpoint,e);
  }
}
