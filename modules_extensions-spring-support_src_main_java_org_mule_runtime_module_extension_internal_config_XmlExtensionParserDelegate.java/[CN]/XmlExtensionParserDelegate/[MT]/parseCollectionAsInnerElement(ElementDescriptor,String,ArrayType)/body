{
  final MetadataType itemsType=collectionType.getType();
  final List<ValueResolver<Object>> resolvers=new LinkedList<>();
  Collection<ElementDescriptor> items=collectionElement.getChildsByName(childElementName);
  items=items.isEmpty() ? collectionElement.getChildsByName(getTopLevelTypeName(itemsType)) : items;
  for (  final ElementDescriptor item : items) {
    itemsType.accept(new MetadataTypeVisitor(){
      @Override protected void defaultVisit(      MetadataType metadataType){
        resolvers.add(getResolverFromValue(item.getAttribute(ATTRIBUTE_NAME_VALUE),itemsType));
      }
      @Override public void visitObject(      ObjectType objectType){
        resolvers.add(new ObjectBuilderValueResolver(createObjectBuilder(objectType,item)));
      }
    }
);
  }
  return CollectionValueResolver.of(getType(collectionType),resolvers);
}
