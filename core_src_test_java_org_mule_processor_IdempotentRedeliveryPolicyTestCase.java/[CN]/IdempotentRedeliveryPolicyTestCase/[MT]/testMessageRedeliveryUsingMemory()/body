{
  Mockito.when(mockMuleContext.getRegistry().get(MuleProperties.OBJECT_STORE_MANAGER)).thenReturn(mockObjectStoreManager);
  Mockito.when(mockObjectStoreManager.getObjectStore(anyString(),anyBoolean(),anyInt(),anyInt(),anyInt())).thenReturn(new InMemoryObjectStore());
  IdempotentRedeliveryPolicy irp=new IdempotentRedeliveryPolicy();
  irp.setMaxRedeliveryCount(MAX_REDELIVERY_COUNT);
  irp.setUseSecureHash(true);
  irp.setFlowConstruct(mock(FlowConstruct.class));
  irp.setMuleContext(mockMuleContext);
  irp.setListener(mockFailingMessageProcessor);
  irp.setDeadLetterQueue(mockDlqMessageProcessor);
  irp.initialise();
  when(message.getPayload()).thenReturn(STRING_MESSAGE);
  when(event.getMessage()).thenReturn(message);
  for (int i=0; i < MAX_REDELIVERY_COUNT; i++) {
    try {
      irp.process(event);
    }
 catch (    Exception e) {
    }
  }
  verify(mockDlqMessageProcessor.getMessageProcessor().process(event),VerificationModeFactory.times(1));
}
