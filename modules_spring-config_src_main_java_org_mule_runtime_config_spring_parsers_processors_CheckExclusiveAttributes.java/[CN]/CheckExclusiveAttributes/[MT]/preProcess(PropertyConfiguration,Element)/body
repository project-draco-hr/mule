{
  Collection<AttributeSet> allMatchingSets=new ArrayList<AttributeSet>(attributeSets);
  boolean atLeastOneAttributeDidMatch=false;
  NamedNodeMap attributes=element.getAttributes();
  int length=attributes.getLength();
  for (int i=0; i < length; i++) {
    String alias=SpringXMLUtils.attributeName((Attr)attributes.item(i));
    if (isOptionalAttribute(alias)) {
      continue;
    }
    allMatchingSets=filterMatchingSets(allMatchingSets,alias);
    atLeastOneAttributeDidMatch=true;
  }
  if (atLeastOneAttributeDidMatch && allMatchingSets.size() == 0) {
    CheckExclusiveAttributesException ex=CheckExclusiveAttributesException.createForDisjunctGroups(element,attributeSets);
    throw ex;
  }
 else   if (atLeastOneAttributeDidMatch && allMatchingSets.size() > 1) {
    CheckExclusiveAttributesException ex=CheckExclusiveAttributesException.createForInsufficientAttributes(element,allMatchingSets);
    throw ex;
  }
}
