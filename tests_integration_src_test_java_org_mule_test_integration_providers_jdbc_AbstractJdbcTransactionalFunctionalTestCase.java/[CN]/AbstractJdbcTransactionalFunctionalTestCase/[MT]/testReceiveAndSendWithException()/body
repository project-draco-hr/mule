{
  final AtomicBoolean called=new AtomicBoolean(false);
  EventCallback callback=new EventCallback(){
    public void eventReceived(    UMOEventContext context,    Object Component) throws Exception {
      try {
        called.set(true);
        currentTx=context.getCurrentTransaction();
        assertNotNull(currentTx);
        assertTrue(currentTx.isBegun());
        currentTx.setRollbackOnly();
      }
  finally {
synchronized (called) {
          called.notifyAll();
        }
      }
    }
  }
;
  initialiseComponent(UMOTransactionConfig.ACTION_ALWAYS_BEGIN,callback);
  MuleManager.getInstance().start();
  execSqlUpdate("INSERT INTO TEST(ID, TYPE, DATA, ACK, RESULT) VALUES (NULL, 1, '" + DEFAULT_MESSAGE + "', NULL, NULL)");
synchronized (called) {
    called.wait(20000);
  }
  assertTrue(called.get());
  Thread.sleep(1000);
  assertNotNull(currentTx);
  assertTrue(currentTx.isRolledBack());
  Object[] obj=execSqlQuery("SELECT COUNT(*) FROM TEST WHERE TYPE = 2");
  assertNotNull(obj);
  assertEquals(1,obj.length);
  assertEquals(Integer.valueOf(0),obj[0]);
  obj=execSqlQuery("SELECT ACK FROM TEST WHERE TYPE = 1");
  assertNotNull(obj);
  assertEquals(1,obj.length);
  assertNull(obj[0]);
}
