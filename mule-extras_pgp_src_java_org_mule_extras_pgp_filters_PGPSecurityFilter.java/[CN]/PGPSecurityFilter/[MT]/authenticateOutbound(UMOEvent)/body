{
  logger.debug("authenticateOutbound:" + event.getId());
  UMOMessage message=event.getMessage();
  UMOAuthentication authentication=event.getSession().getSecurityContext().getAuthentication();
  if ((authentication == null) || !(authentication instanceof PGPAuthentication) || (authentication.getDetails() == null)) {
    if (isAuthenticate()) {
      throw new UnauthorisedException(new org.mule.config.i18n.Message(Messages.AUTH_SET_TO_X_BUT_NO_CONTEXT,strategyName));
    }
 else {
      return;
    }
  }
  KeyBundle userKeyBundle=keyManager.getKeyBundle((String)getCredentialsAccessor().getCredentials(event));
  PGPCryptInfo cryptInfo=new PGPCryptInfo(userKeyBundle,signRequired);
  byte[] msg=null;
  try {
    msg=message.getPayloadAsBytes();
    msg=strategy.encrypt(msg,cryptInfo);
  }
 catch (  Exception e1) {
    throw new UnauthorisedException(new org.mule.config.i18n.Message(Messages.FAILED_TO_READ_PAYLOAD),event.getMessage(),e1);
  }
  try {
    String mesg=new String(msg);
    RequestContext.rewriteEvent(new MuleMessage(mesg,null));
    logger.debug("Message:" + mesg);
  }
 catch (  Exception e2) {
    throw new UnauthorisedException(event.getMessage(),event.getSession().getSecurityContext(),event.getEndpoint(),this);
  }
}
