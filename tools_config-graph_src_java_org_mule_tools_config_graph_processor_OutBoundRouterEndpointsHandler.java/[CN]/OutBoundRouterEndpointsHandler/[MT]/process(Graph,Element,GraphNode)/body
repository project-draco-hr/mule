{
  List epList=currentElement.getChildren(MuleTag.ELEMENT_ENDPOINT);
  int x=1;
  for (Iterator iterator=epList.iterator(); iterator.hasNext(); x++) {
    Element outEndpoint=(Element)iterator.next();
    String url=outEndpoint.getAttributeValue(MuleTag.ATTRIBUTE_ADDRESS);
    if (url != null) {
      GraphNode out=(GraphNode)environment.getEndpointRegistry().getEndpoint(url,componentName);
      if (out == null) {
        out=graph.addNode();
        StringBuffer caption=new StringBuffer();
        appendProperties(outEndpoint,caption);
        appendDescription(outEndpoint,caption);
        out.getInfo().setCaption(caption.toString());
        environment.getEndpointRegistry().addEndpoint(url,out);
        processOutboundFilter(graph,outEndpoint,out,parent);
      }
 else {
        String caption="out";
        if (epList.size() > 1) {
          caption+=" (" + x + " of "+ epList.size()+ ")";
        }
        addEdge(graph,parent,out,caption,isTwoWay(outEndpoint));
      }
    }
    GraphNode[] virtual=environment.getEndpointRegistry().getVirtualEndpoint(componentName);
    if (virtual.length > 0) {
      for (int i=0; i < virtual.length; i++) {
        addEdge(graph,parent,virtual[i],"out (dynamic)",isTwoWay(outEndpoint));
      }
    }
  }
}
