{
  JobDataMap jobDataMap=jobExecutionContext.getJobDetail().getJobDataMap();
  String dispatchEndpoint=jobDataMap.getString(QuartzConnector.PROPERTY_JOB_DISPATCH_ENDPOINT);
  if (dispatchEndpoint == null) {
    throw new JobExecutionException(QuartzMessages.missingJobDetail(QuartzConnector.PROPERTY_JOB_DISPATCH_ENDPOINT).getMessage());
  }
  String receiveEndpoint=jobDataMap.getString(QuartzConnector.PROPERTY_JOB_RECEIVE_ENDPOINT);
  if (receiveEndpoint == null) {
    throw new JobExecutionException(QuartzMessages.missingJobDetail(QuartzConnector.PROPERTY_JOB_RECEIVE_ENDPOINT).getMessage());
  }
  long timeout=5000;
  String timeoutString=jobDataMap.getString(QuartzConnector.PROPERTY_JOB_RECEIVE_TIMEOUT);
  if (timeoutString != null) {
    timeout=Long.parseLong(timeoutString);
  }
  try {
    MuleClient client=new MuleClient();
    logger.debug("Attempting to receive event on: " + receiveEndpoint);
    UMOMessage result=client.request(receiveEndpoint,timeout);
    if (result != null) {
      logger.debug("Received event on: " + receiveEndpoint);
      logger.debug("Dispatching result on: " + dispatchEndpoint);
      result.addProperties(jobDataMap);
      client.dispatch(dispatchEndpoint,result);
    }
  }
 catch (  UMOException e) {
    throw new JobExecutionException(e);
  }
}
