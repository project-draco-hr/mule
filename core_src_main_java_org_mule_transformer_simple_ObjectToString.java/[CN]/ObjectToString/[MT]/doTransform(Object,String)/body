{
  String output="";
  if (src instanceof InputStream) {
    InputStream is=(InputStream)src;
    try {
      ByteArrayOutputStream byteOut=new ByteArrayOutputStream();
      IOUtils.copy(is,byteOut);
      output=new String(byteOut.toByteArray(),encoding);
    }
 catch (    IOException e) {
      throw new TransformerException(CoreMessages.errorReadingStream(),e);
    }
 finally {
      try {
        is.close();
      }
 catch (      IOException e) {
        logger.warn("Could not close stream",e);
      }
    }
  }
 else   if (src instanceof OutputHandler) {
    ByteArrayOutputStream bytes=new ByteArrayOutputStream();
    try {
      ((OutputHandler)src).write(RequestContext.getEvent(),bytes);
      output=new String((byte[])bytes.toByteArray(),encoding);
    }
 catch (    IOException e) {
      throw new TransformerException(this,e);
    }
  }
 else   if (src instanceof byte[]) {
    try {
      output=new String((byte[])src,encoding);
    }
 catch (    UnsupportedEncodingException e) {
      throw new TransformerException(this,e);
    }
  }
 else {
    output=StringMessageUtils.toString(src);
  }
  return output;
}
