{
  TransactionManager mgr=MuleManager.getInstance().getTransactionManager();
  Transaction tx=mgr.getTransaction();
  com.fs.pxe.sfwk.spi.MessageExchange mePxe=null;
  try {
    if (tx == null) {
      mgr.begin();
    }
    DOMResult r=new DOMResult();
    Source source=(Source)eventContext.getTransformedMessage(Source.class);
    TransformerFactory.newInstance().newTransformer().transform(source,r);
    String svcName=endpoint.getServiceName().getLocalPart();
    String port=endpoint.getPortName();
    QName operation=null;
    String op=(String)eventContext.getProperty("bpel.operation");
    if (op != null) {
      operation=parseQName(op);
    }
 else {
      operation=this.operation;
    }
    if (operation == null) {
      throw new NullPointerException("No operation has been set for this event");
    }
    for (Iterator it=this.services.values().iterator(); it.hasNext(); ) {
      ServiceContext service=(ServiceContext)it.next();
      if (svcName.equals(service.getServiceName())) {
        ServicePort svcPort=service.getImport(port);
        if (svcPort != null) {
          mePxe=service.createMessageExchange(svcPort,null,operation.getLocalPart());
          com.fs.pxe.sfwk.spi.Message im=mePxe.createInputMessage();
          im.setMessage(((Document)r.getNode()).getDocumentElement());
          mePxe.input(im);
          break;
        }
      }
    }
  }
  finally {
    if (tx == null) {
      mgr.commit();
    }
    if (eventContext.isSynchronous()) {
      lock=new Latch();
      if (eventContext.getTimeout() == UMOEvent.TIMEOUT_WAIT_FOREVER) {
        lock.lock();
      }
 else {
        lock.tryLock(eventContext.getTimeout(),TimeUnit.MILLISECONDS);
        if (result == null) {
          logger.info("Synchronization either timed out or no result was returned");
        }
      }
    }
    return result;
  }
}
