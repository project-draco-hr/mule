{
  InternalMessage message=InternalMessage.builder().payload("Test Message").build();
  Flow flow=MuleTestUtils.getTestFlow(muleContext);
  Event event=Event.builder(DefaultEventContext.create(flow,TEST_CONNECTOR)).message(message).flow(flow).build();
  SessionHandler handler=new SerializeAndEncodeSessionHandler();
  String string="bar";
  event.getSession().setProperty("fooString",string);
  Date date=new Date(0);
  event.getSession().setProperty("fooDate",date);
  List<String> list=createList();
  event.getSession().setProperty("fooList",list);
  message=handler.storeSessionInfoToMessage(event.getSession(),event.getMessage(),muleContext);
  event=Event.builder(event).message(message).build();
  final Builder builder=Event.builder(event);
  Serializable s=removeProperty(event,builder);
  event=builder.build();
  message=InternalMessage.builder(event.getMessage()).addInboundProperty(MULE_SESSION_PROPERTY,s).build();
  MuleSession session=handler.retrieveSessionInfoFromMessage(message,muleContext);
  Object obj=session.getProperty("fooString");
  assertTrue(obj instanceof String);
  assertEquals(string,obj);
  obj=session.getProperty("fooDate");
  assertTrue("Object should be a Date but is " + obj.getClass().getName(),obj instanceof Date);
  assertEquals(date,obj);
  obj=session.getProperty("fooList");
  assertTrue("Object should be a List but is " + obj.getClass().getName(),obj instanceof List);
  assertEquals(list,obj);
}
