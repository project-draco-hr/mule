{
  if (resourceName == null) {
    throw new IllegalArgumentException(new Message(Messages.X_IS_NULL,"Resource name").getMessage());
  }
  InputStream is=null;
  if (tryAsFile) {
    try {
      File file=new File(resourceName);
      if (file.exists()) {
        is=new FileInputStream(file);
      }
 else {
        logger.debug("Unable to load resource from the file system: " + file.getAbsolutePath());
      }
    }
 catch (    Exception e) {
      logger.debug("Unable to load resource from the file system: " + e.getMessage());
    }
  }
  if ((is == null) && tryAsUrl) {
    try {
      URL url=new URL(resourceName);
      is=url.openStream();
      if (is == null) {
        logger.debug("Unable to load resource as a URL");
      }
    }
 catch (    Exception e) {
      logger.debug("Unable to load resource as a URL: " + e.getMessage());
    }
  }
  if (is == null) {
    try {
      is=(InputStream)AccessController.doPrivileged(new PrivilegedAction(){
        public Object run(){
          URL url=ClassUtils.getResource(resourceName,callingClass);
          try {
            return (url != null) ? url.openStream() : null;
          }
 catch (          IOException e) {
            return null;
          }
        }
      }
);
      if (is == null) {
        logger.debug("Unable to load resource from the classpath");
      }
    }
 catch (    Exception e) {
      logger.debug("Unable to load resource from the classpath: " + e.getMessage());
    }
  }
  return is;
}
