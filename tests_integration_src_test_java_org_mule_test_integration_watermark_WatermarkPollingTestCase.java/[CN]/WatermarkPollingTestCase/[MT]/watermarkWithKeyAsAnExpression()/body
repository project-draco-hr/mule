{
  getDefaultObjectStore().store(OS_KEY4,PRE_EXISTENT_OS_VALUE);
  executePollOf("watermarkWithKeyAsAnExpression");
  prober.check(new ObjectStoreProbe(getDefaultObjectStore()){
    @Override boolean evaluate(    ObjectStore<Serializable> os) throws ObjectStoreException {
      return os.contains(OS_KEY4) && MODIFIED_KEY_VALUE.equals(os.retrieve(OS_KEY4));
    }
    @Override public String describeFailure(){
      return "The object store does not contain the key " + OS_KEY4;
    }
  }
);
}
