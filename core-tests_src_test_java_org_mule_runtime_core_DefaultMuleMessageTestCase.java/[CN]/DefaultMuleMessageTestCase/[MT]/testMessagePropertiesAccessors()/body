{
  Map<String,Serializable> properties=createMessageProperties();
  properties.put("number","24");
  properties.put("decimal","24.3");
  properties.put("boolean","true");
  Apple apple=new Apple(true);
  properties.put("apple",apple);
  InternalMessage message=InternalMessage.builder().payload(TEST_MESSAGE).outboundProperties(properties).build();
  assertTrue(message.getOutboundProperty("boolean",false));
  assertEquals(new Integer(24),message.getOutboundProperty("number",0));
  assertEquals(new Byte((byte)24),message.getOutboundProperty("number",(byte)0));
  assertEquals(new Long(24),message.getOutboundProperty("number",0l));
  assertEquals(new Float(24.3),message.getOutboundProperty("decimal",0f));
  Double d=message.getOutboundProperty("decimal",0d);
  assertEquals(new Double(24.3),d);
  assertEquals("true",message.getOutboundProperty("boolean",""));
  assertEquals(apple,message.getOutboundProperty("apple"));
  try {
    message.getOutboundProperty("apple",new Orange());
    fail("Orange is not assignable to Apple");
  }
 catch (  IllegalArgumentException e) {
  }
  assertNull(message.getOutboundProperty("banana"));
  assertNull(message.getOutboundProperty("blah"));
  assertEquals(new Float(24.3),message.getOutboundProperty("blah",24.3f));
}
