{
  if (StringUtils.isBlank(propertyName)) {
    logger.warn("No property name was specified");
    return false;
  }
  if (expression == null && pattern == null) {
    logger.warn("Either no expression or pattern was specified");
    return false;
  }
  if (message.getPayload() instanceof javax.jms.Message) {
    try {
      Message m=(javax.jms.Message)message.getPayload();
      if (StringUtils.isBlank(propertyClass)) {
        Object object=m.getObjectProperty(propertyName);
        if (object == null)         return false;
        String value=object.toString();
        if (pattern != null) {
          return pattern.matcher(value).find();
        }
 else {
          return value.equals(expression.toString());
        }
      }
 else       if (propertyClass.equals("java.lang.String")) {
        String value=m.getStringProperty(propertyName);
        if (value == null)         return false;
        if (pattern != null) {
          return pattern.matcher(value).find();
        }
 else {
          return value.equals(expression.toString());
        }
      }
    }
 catch (    Exception e) {
      logger.warn("Error filtering on property " + propertyName + ": "+ e.toString());
    }
  }
 else {
    logger.warn("Expected a payload of javax.jms.Message but instead received " + message.getPayload().getClass().getName());
  }
  return false;
}
