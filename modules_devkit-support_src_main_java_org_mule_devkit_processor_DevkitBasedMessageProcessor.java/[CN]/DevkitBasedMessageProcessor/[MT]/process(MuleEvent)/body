{
  try {
    return this.doProcess(event);
  }
 catch (  MessagingException messagingException) {
    messagingException.setProcessedEvent(event);
    throw messagingException;
  }
catch (  NotAuthorizedException e) {
    Object policyAwareCandidate=evaluateIfExpression(event,moduleObject);
    checkArgument(policyAwareCandidate instanceof OnNoTokenPolicyAware,String.format("Was expecting config to be an instance of %s but it's a %s instead",OnNoTokenPolicyAware.class.getName(),policyAwareCandidate.getClass().getName()));
    try {
      return this.handleNotAuthorized((OnNoTokenPolicyAware)policyAwareCandidate,e,event);
    }
 catch (    Exception ne) {
      this.handleException(event,ne);
    }
  }
catch (  MuleException e) {
    throw e;
  }
catch (  Exception e) {
    this.handleException(event,e);
  }
  return event;
}
