{
  UMOModel model=managementContext.getRegistry().lookupModel(MuleProperties.OBJECT_SYSTEM_MODEL);
  if (model == null) {
    model=new SedaModel();
    model.setName(MuleProperties.OBJECT_SYSTEM_MODEL);
    managementContext.getRegistry().registerModel(model);
  }
  UMODescriptor descriptor=managementContext.getRegistry().lookupService(EVENT_MULTICASTER_DESCRIPTOR_NAME);
  if (descriptor != null) {
    model.unregisterComponent(descriptor);
  }
  descriptor=new MuleDescriptor(EVENT_MULTICASTER_DESCRIPTOR_NAME);
  if (subscriptions == null) {
    logger.info("No receive endpoints have been set, using default '*'");
    descriptor.getInboundRouter().addEndpoint(new MuleEndpoint("vm://*",true));
  }
 else {
    UMOInboundRouterCollection messageRouter=descriptor.getInboundRouter();
    for (int i=0; i < subscriptions.length; i++) {
      String subscription=subscriptions[i];
      UMOEndpointURI endpointUri=new MuleEndpointURI(subscription);
      UMOEndpoint endpoint=managementContext.getRegistry().getOrCreateEndpointForUri(endpointUri,UMOEndpoint.ENDPOINT_TYPE_RECEIVER);
      if (!asynchronous) {
        endpoint.setSynchronous(true);
      }
      messageRouter.addEndpoint(endpoint);
    }
  }
  descriptor.setServiceFactory(new SimpleObjectFactory(MuleEventMulticaster.class));
  return descriptor;
}
