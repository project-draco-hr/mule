{
  UMOModel model=managementContext.getRegistry().lookupModel(MuleProperties.OBJECT_SYSTEM_MODEL);
  if (model == null) {
    model=new SedaModel();
    model.setName(MuleProperties.OBJECT_SYSTEM_MODEL);
    managementContext.getRegistry().registerModel(model);
  }
  UMOComponent component=managementContext.getRegistry().lookupComponent(EVENT_MULTICASTER_DESCRIPTOR_NAME);
  if (component != null) {
    managementContext.getRegistry().unregisterComponent(component.getName());
  }
  component=new SedaComponent();
  component.setName(EVENT_MULTICASTER_DESCRIPTOR_NAME);
  if (subscriptions == null) {
    logger.info("No receive endpoints have been set, using default '*'");
    component.getInboundRouter().addEndpoint(managementContext.getRegistry().lookupEndpointFactory().createInboundEndpoint("vm://*",managementContext));
  }
 else {
    UMOInboundRouterCollection messageRouter=component.getInboundRouter();
    for (int i=0; i < subscriptions.length; i++) {
      String subscription=subscriptions[i];
      UMOImmutableEndpoint endpoint=managementContext.getRegistry().lookupInboundEndpoint(subscription,managementContext);
      if (!asynchronous) {
        ((UMOEndpoint)endpoint).setSynchronous(true);
      }
      messageRouter.addEndpoint(endpoint);
    }
  }
  component.setServiceFactory(new SimpleObjectFactory(MuleEventMulticaster.class));
  return component;
}
