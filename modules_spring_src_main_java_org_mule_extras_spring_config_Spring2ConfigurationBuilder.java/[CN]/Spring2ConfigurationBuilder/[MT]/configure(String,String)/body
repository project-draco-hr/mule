{
  if (StringUtils.isNotBlank(startupPropertiesFile)) {
    try {
      startupPropertiesFile=StringUtils.trimToEmpty(startupPropertiesFile);
      Properties startupProperties=PropertiesUtils.loadProperties(startupPropertiesFile,getClass());
      ((MuleManager)MuleManager.getInstance()).addProperties(startupProperties);
    }
 catch (    IOException e) {
      throw new ConfigurationException(new Message(Messages.FAILED_TO_START_X,"Mule server from builder"),e);
    }
  }
  if (configResource == null) {
    throw new ConfigurationException(new Message(Messages.X_IS_NULL,"Configuration Resource"));
  }
  String[] resources=org.springframework.util.StringUtils.tokenizeToStringArray(configResource,",;",true,true);
  MuleManager.getConfiguration().setConfigResources(resources);
  new Mule2ApplicationContext(resources);
  try {
    if (System.getProperty(MuleProperties.MULE_START_AFTER_CONFIG_SYSTEM_PROPERTY,"true").equalsIgnoreCase("true")) {
      MuleManager.getInstance().start();
    }
  }
 catch (  UMOException e) {
    throw new ConfigurationException(new Message(Messages.FAILED_TO_START_X,"Mule server from builder"),e);
  }
  return MuleManager.getInstance();
}
