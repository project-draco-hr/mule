{
  if (object instanceof DeserializationPostInitialisable) {
    try {
      final Method m=object.getClass().getDeclaredMethod("initAfterDeserialisation",MuleContext.class);
      Object o=AccessController.doPrivileged(new PrivilegedAction(){
        public Object run(){
          try {
            m.setAccessible(true);
            m.invoke(object,muleContext);
            return null;
          }
 catch (          Exception e) {
            return e;
          }
        }
      }
);
      if (o != null) {
        throw (Exception)o;
      }
    }
 catch (    NoSuchMethodException e) {
      throw new IllegalArgumentException("Object " + object.getClass() + " implements "+ DeserializationPostInitialisable.class+ " but does not have a method "+ "private void initAfterDeserialisation(MuleContext) defined",e);
    }
  }
}
