{
  int defaultMaxBufferSize=42;
  int defaultMaxThreadsActive=16;
  int defaultMaxThreadsIdle=3;
  int defaultThreadPoolExhaustedAction=ThreadingProfile.WHEN_EXHAUSTED_WAIT;
  int defaultThreadTTL=60001;
  int connectorMaxBufferSize=2;
  int componentMaxBufferSize=6;
  int componentMaxThreadsActive=12;
  int componentMaxThreadsIdle=6;
  int componentThreadPoolExhaustedAction=ThreadingProfile.WHEN_EXHAUSTED_DISCARD;
  ThreadingProfile tp=RegistryContext.getConfiguration().getDefaultThreadingProfile();
  assertEquals(defaultMaxBufferSize,tp.getMaxBufferSize());
  assertEquals(defaultMaxThreadsActive,tp.getMaxThreadsActive());
  assertEquals(defaultMaxThreadsIdle,tp.getMaxThreadsIdle());
  assertEquals(defaultThreadPoolExhaustedAction,tp.getPoolExhaustedAction());
  assertEquals(defaultThreadTTL,tp.getThreadTTL());
  tp=RegistryContext.getConfiguration().getDefaultComponentThreadingProfile();
  assertEquals(defaultMaxBufferSize,tp.getMaxBufferSize());
  assertEquals(defaultMaxThreadsActive,tp.getMaxThreadsActive());
  assertEquals(defaultMaxThreadsIdle,tp.getMaxThreadsIdle());
  assertEquals(defaultThreadPoolExhaustedAction,tp.getPoolExhaustedAction());
  assertEquals(defaultThreadTTL,tp.getThreadTTL());
  AbstractConnector c=(AbstractConnector)managementContext.getRegistry().lookupConnector("dummyConnector");
  tp=c.getDispatcherThreadingProfile();
  assertEquals(connectorMaxBufferSize,tp.getMaxBufferSize());
  assertEquals(defaultMaxThreadsActive,tp.getMaxThreadsActive());
  assertEquals(defaultMaxThreadsIdle,tp.getMaxThreadsIdle());
  assertEquals(defaultThreadPoolExhaustedAction,tp.getPoolExhaustedAction());
  assertEquals(defaultThreadTTL,tp.getThreadTTL());
  UMOComponent component=managementContext.getRegistry().lookupComponent("appleComponent2");
  assertTrue("component must be SedaComponent to get threading profile",component instanceof SedaComponent);
  tp=((SedaComponent)component).getThreadingProfile();
  assertEquals(componentMaxBufferSize,tp.getMaxBufferSize());
  assertEquals(componentMaxThreadsActive,tp.getMaxThreadsActive());
  assertEquals(componentMaxThreadsIdle,tp.getMaxThreadsIdle());
  assertEquals(componentThreadPoolExhaustedAction,tp.getPoolExhaustedAction());
  assertEquals(defaultThreadTTL,tp.getThreadTTL());
}
