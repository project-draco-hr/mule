{
  List recipients=this.getRecipients(message);
  List results=new ArrayList();
  if (enableCorrelation != ENABLE_CORRELATION_NEVER) {
    boolean correlationSet=message.getCorrelationGroupSize() != -1;
    if (correlationSet && (enableCorrelation == ENABLE_CORRELATION_IF_NOT_SET)) {
      logger.debug("CorrelationId is already set, not setting Correlation group size");
    }
 else {
      message.setCorrelationGroupSize(recipients.size());
    }
  }
  MuleMessage result=null;
  OutboundEndpoint endpoint;
  MuleMessage request;
  for (Iterator iterator=recipients.iterator(); iterator.hasNext(); ) {
    Object recipient=iterator.next();
    request=new DefaultMuleMessage(message.getPayload(),message);
    endpoint=this.getRecipientEndpoint(request,recipient);
    boolean sync=(this.synchronous == null ? endpoint.isSynchronous() : this.synchronous.booleanValue());
    try {
      if (sync) {
        result=this.send(session,request,endpoint);
        if (result != null) {
          results.add(result);
        }
 else {
          if (logger.isDebugEnabled()) {
            logger.debug("No result was returned for sync call to: " + endpoint.getEndpointURI());
          }
        }
      }
 else {
        this.dispatch(session,request,endpoint);
      }
    }
 catch (    MuleException e) {
      throw new CouldNotRouteOutboundMessageException(request,endpoint,e);
    }
  }
  if (results.size() == 0) {
    return null;
  }
 else   if (results.size() == 1) {
    return new DefaultMuleMessage(results.get(0),result);
  }
 else {
    DefaultMessageCollection collection=new DefaultMessageCollection();
    collection.addMessages(results);
    return collection;
  }
}
