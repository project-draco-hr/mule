{
  MuleMessage message=event.getMessage();
  MuleSession session=event.getSession();
  List recipients=this.getRecipients(message);
  List<MuleEvent> results=new ArrayList<MuleEvent>();
  if (enableCorrelation != ENABLE_CORRELATION_NEVER) {
    boolean correlationSet=message.getCorrelationGroupSize() != -1;
    if (correlationSet && (enableCorrelation == ENABLE_CORRELATION_IF_NOT_SET)) {
      logger.debug("CorrelationId is already set, not setting Correlation group size");
    }
 else {
      message.setCorrelationGroupSize(recipients.size());
    }
  }
  MuleMessage result;
  OutboundEndpoint endpoint;
  MuleMessage request;
  for (Iterator iterator=recipients.iterator(); iterator.hasNext(); ) {
    Object recipient=iterator.next();
    request=new DefaultMuleMessage(message.getPayload(),message,muleContext);
    endpoint=getRecipientEndpoint(request,recipient);
    boolean sync=(this.synchronous == null ? endpoint.isSynchronous() : this.synchronous.booleanValue());
    try {
      if (sync) {
        results.add(sendRequest(session,request,endpoint,true));
      }
 else {
        sendRequest(session,request,endpoint,false);
      }
    }
 catch (    MuleException e) {
      throw new CouldNotRouteOutboundMessageException(request,endpoint,e);
    }
  }
  return resultsHandler.aggregateResults(results,event,muleContext);
}
