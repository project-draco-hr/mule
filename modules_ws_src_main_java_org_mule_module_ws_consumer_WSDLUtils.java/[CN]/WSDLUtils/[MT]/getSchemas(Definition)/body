{
  Map<String,String> wsdlNamespaces=wsdlDefinition.getNamespaces();
  List<String> schemas=new ArrayList<String>();
  List<Types> typesList=new ArrayList<Types>();
  if (wsdlDefinition.getTypes() != null) {
    typesList.add(wsdlDefinition.getTypes());
  }
  for (  Types types : typesList) {
    for (    Object o : types.getExtensibilityElements()) {
      if (o instanceof javax.wsdl.extensions.schema.Schema) {
        Schema schema=(Schema)o;
        for (        Map.Entry<String,String> entry : wsdlNamespaces.entrySet()) {
          boolean isDefault=StringUtils.isEmpty(entry.getKey());
          boolean containsNamespace=schema.getElement().hasAttribute(XML_NS_PREFIX + entry.getKey());
          if (!isDefault && !containsNamespace) {
            schema.getElement().setAttribute(XML_NS_PREFIX + entry.getKey(),entry.getValue());
          }
        }
        fixSchemaLocations(schema);
        schemas.add(schemaToString(schema));
      }
    }
  }
  for (  Object wsdlImportList : wsdlDefinition.getImports().values()) {
    for (    Import wsdlImport : (List<Import>)wsdlImportList) {
      schemas.addAll(getSchemas(wsdlImport.getDefinition()));
    }
  }
  return schemas;
}
