{
  final int N=100;
  final CountDownLatch start=new CountDownLatch(1);
  final CountDownLatch end=new CountDownLatch(N);
  final AtomicInteger errors=new AtomicInteger(0);
  for (int i=0; i < N; i++) {
    new Thread(new Runnable(){
      @Override public void run(){
        try {
          start.await();
          testEvaluateString();
        }
 catch (        Exception e) {
          e.printStackTrace();
          errors.incrementAndGet();
        }
 finally {
          end.countDown();
        }
      }
    }
,"thread-eval-" + i).start();
  }
  start.countDown();
  end.await();
  if (errors.get() > 0) {
    fail();
  }
}
