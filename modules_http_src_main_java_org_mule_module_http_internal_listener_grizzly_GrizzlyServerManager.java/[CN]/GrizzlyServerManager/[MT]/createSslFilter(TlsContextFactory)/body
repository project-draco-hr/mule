{
  try {
    boolean clientAuth=tlsContextFactory.isTrustStoreConfigured();
    final SSLEngineConfigurator serverConfig=new SSLEngineConfigurator(tlsContextFactory.createSslContext(),false,clientAuth,false);
    final String[] enabledProtocols=tlsContextFactory.getEnabledProtocols();
    if (enabledProtocols != null) {
      serverConfig.setEnabledProtocols(enabledProtocols);
    }
    final String[] enabledCipherSuites=tlsContextFactory.getEnabledCipherSuites();
    if (enabledCipherSuites != null) {
      serverConfig.setEnabledCipherSuites(enabledCipherSuites);
    }
    final SSLEngineConfigurator clientConfig=serverConfig.copy().setClientMode(true);
    final SSLFilter sslBaseFilter=new SSLFilter(serverConfig,clientConfig){
      @Override public NextAction handleRead(      FilterChainContext ctx) throws IOException {
        ctx.getAttributes().setAttribute(HTTPS.getScheme(),true);
        return super.handleRead(ctx);
      }
    }
;
    return sslBaseFilter;
  }
 catch (  Exception e) {
    throw new MuleRuntimeException(e);
  }
}
