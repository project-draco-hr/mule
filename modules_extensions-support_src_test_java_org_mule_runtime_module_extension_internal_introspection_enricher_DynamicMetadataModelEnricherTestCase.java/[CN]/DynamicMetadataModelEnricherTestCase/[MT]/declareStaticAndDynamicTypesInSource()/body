{
  List<SourceDeclaration> messageSources=declaration.getConfigurations().get(0).getMessageSources();
  SourceDeclaration sourceDynamicAttributes=getDeclaration(messageSources,"MetadataSource");
  assertOutputType(sourceDynamicAttributes.getOutput(),TYPE_BUILDER.dictionaryType().id(Map.class.getName()).ofKey(TYPE_BUILDER.stringType().id(String.class.getName())).ofValue(TYPE_BUILDER.objectType().id("java.lang.Object").with(new ClassInformationAnnotation(Object.class,null)).with(new TypeAliasAnnotation(Object.class.getSimpleName()))).build(),true);
  assertOutputType(sourceDynamicAttributes.getOutputAttributes(),toMetadataType(StringAttributes.class),false);
  assertParameterType(getDeclaration(sourceDynamicAttributes.getParameters(),"type"),toMetadataType(String.class),false);
  messageSources=declaration.getMessageSources();
  SourceDeclaration sourceStaticAttributes=getDeclaration(messageSources,"MetadataSourceWithMultilevel");
  assertOutputType(sourceStaticAttributes.getOutput(),TYPE_BUILDER.dictionaryType().id(Map.class.getName()).ofKey(TYPE_BUILDER.stringType().id(String.class.getName())).ofValue(TYPE_BUILDER.objectType().id("java.lang.Object").with(new ClassInformationAnnotation(Object.class,null)).with(new TypeAliasAnnotation(Object.class.getSimpleName()))).build(),true);
  assertOutputType(sourceStaticAttributes.getOutputAttributes(),toMetadataType(StringAttributes.class),false);
  List<ParameterDeclaration> locationKey=sourceStaticAttributes.getParameters();
  assertParameterType(getDeclaration(locationKey,"continent"),toMetadataType(String.class),false);
  assertParameterType(getDeclaration(locationKey,"country"),toMetadataType(String.class),false);
  assertParameterType(getDeclaration(locationKey,"city"),toMetadataType(String.class),false);
}
