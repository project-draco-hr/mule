{
  String payloadParam=message.getOutboundProperty(AbstractReceiverServlet.PAYLOAD_PARAMETER_NAME,AbstractReceiverServlet.DEFAULT_PAYLOAD_PARAMETER_NAME);
  String payload=message.getInboundProperty(payloadParam);
  if (payload == null) {
    String contentType=message.getOutboundProperty(ServletConnector.CONTENT_TYPE_PROPERTY_KEY);
    if ((contentType == null) || contentType.startsWith("text/")) {
      try {
        InputStream is=(InputStream)message.getPayload();
        String characterEncoding=message.getOutboundProperty(ServletConnector.CHARACTER_ENCODING_PROPERTY_KEY);
        BufferedReader reader;
        if (characterEncoding != null) {
          reader=new BufferedReader(new InputStreamReader(is,characterEncoding));
        }
 else {
          reader=new BufferedReader(new InputStreamReader(is));
        }
        StringBuilder buffer=new StringBuilder(8192);
        String line=reader.readLine();
        while (line != null) {
          buffer.append(line);
          line=reader.readLine();
          if (line != null)           buffer.append(SystemUtils.LINE_SEPARATOR);
        }
        payload=buffer.toString();
      }
 catch (      IOException e) {
        throw new TransformerException(this,e);
      }
    }
 else     if (contentType.equals("application/x-www-form-urlencoded")) {
      InputStream is=(InputStream)message.getPayload();
      Properties props=new Properties();
      try {
        props.load(is);
      }
 catch (      IOException e) {
        throw new TransformerException(this,e);
      }
 finally {
        try {
          is.close();
        }
 catch (        IOException e2) {
          throw new TransformerException(this,e2);
        }
      }
      return props.get(payloadParam);
    }
  }
  return payload;
}
