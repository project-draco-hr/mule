{
  Session session;
  AdtMessage message;
  XMLType xmltype;
  try {
    if (endpoint.getTransactionConfig().isTransacted() == false) {
      throw new TransformerException(Message.createStaticMessage("This transformer may only be used with a transacted endpoint.  Refer to http://mule.codehaus.org/display/MULE/Transaction+Management for more information."),this);
    }
    session=((JmsConnector)endpoint.getConnector()).getSessionFromTransaction();
    if (session == null) {
      throw new TransformerException(Message.createStaticMessage("No JMS session associated with this endpoint."),this);
    }
    if ((session instanceof AQjmsSession) == false) {
      throw new TransformerException(Message.createStaticMessage("Endpoint must be an OracleAQ session."),this);
    }
    String xml;
    if (src instanceof byte[]) {
      xml=new String((byte[])src,encoding);
    }
 else     if (src instanceof String) {
      xml=(String)src;
    }
 else     throw new TransformerException(Message.createStaticMessage("Object to transform is not one of the supported types for this transformer."),this);
    logger.debug("Creating an Oracle XMLType based on the following XML:\n" + StringMessageUtils.truncate(xml,200,false));
    CLOB clob=CLOB.createTemporary(((AQjmsSession)session).getDBConnection(),true,CLOB.DURATION_SESSION);
    try {
      Writer clobStream=clob.getCharacterOutputStream();
      try {
        clobStream.write(xml);
      }
  finally {
        clobStream.close();
      }
      xmltype=XMLType.createXML(((AQjmsSession)session).getDBConnection(),clob);
      message=((AQjmsSession)session).createAdtMessage();
      message.setAdtPayload(xmltype);
      return message;
    }
  finally {
    }
  }
 catch (  JMSException e) {
    throw new TransformerException(this,e);
  }
catch (  SQLException e) {
    throw new TransformerException(this,e);
  }
catch (  IOException e) {
    throw new TransformerException(this,e);
  }
}
