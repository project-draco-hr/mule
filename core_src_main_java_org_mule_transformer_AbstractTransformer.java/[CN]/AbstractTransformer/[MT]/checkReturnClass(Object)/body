{
  if (returnType != null) {
    DataType dt;
    if (object instanceof Collection) {
      dt=new CollectionDataType((Class<? extends Collection>)object.getClass(),DataType.ANY_MIME_TYPE);
    }
 else {
      dt=new SimpleDataType(object.getClass(),DataType.ANY_MIME_TYPE);
    }
    if (!returnType.isCompatibleWith(dt)) {
      throw new TransformerException(CoreMessages.transformUnexpectedType(dt,returnType),this);
    }
  }
  if (logger.isDebugEnabled()) {
    logger.debug("The transformed object is of expected type. Type is: " + ClassUtils.getSimpleName(object.getClass()));
  }
  return object;
}
