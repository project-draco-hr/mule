{
  Object master=request.getPayload();
  Object property=response.getPayload();
  List methods=null;
  try {
    methods=ClassHelper.getSatisfiableMethods(master.getClass(),new Class[]{property.getClass()},true,true,false);
  }
 catch (  Exception e) {
    throw new MessageBuilderException(request,e);
  }
  if (methods.size() == 0) {
    throw new MessageBuilderException(new Message(Messages.NO_MATCHING_METHODS_FOR_X_ON_X,property.getClass().getName(),master.getClass().getName()),request);
  }
 else   if (methods.size() > 1) {
    throw new MessageBuilderException(new Message(Messages.TOO_MANY_MATCHING_METHODS_FOR_X_ON_X,property.getClass().getName(),master.getClass().getName()),request);
  }
 else {
    Method m=(Method)methods.get(0);
    try {
      m.invoke(master,(property.getClass().isArray() ? (Object[])property : new Object[]{property}));
    }
 catch (    Exception e) {
      throw new MessageBuilderException(new Message(Messages.FAILED_TO_INVOKE_X,m.getName() + " on " + master.getClass().getName()),request);
    }
  }
  return master;
}
