{
  if (log.isDebugEnabled()) {
    log.debug(String.format("Invoking %s with event %s",this,event));
  }
  if (event == null) {
    return null;
  }
  final List<AroundPolicy> activePolicies=policies.list();
  MuleEvent result;
  if (!activePolicies.isEmpty()) {
    PolicyInvocation invocation=new PolicyInvocation(event,activePolicies,new MessageProcessor(){
      public MuleEvent process(      MuleEvent event) throws MuleException {
        return doProcess(event);
      }
    }
);
    final AroundPolicy entryPoint=activePolicies.get(0);
    result=entryPoint.invoke(invocation);
  }
 else {
    result=doProcess(event);
  }
  return processNext(result);
}
