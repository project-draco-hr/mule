{
  if (logger.isDebugEnabled()) {
    logger.debug(new StringBuffer(128).append("Thread ").append(Thread.currentThread()).append(flags == TMNOFLAGS ? " starts" : flags == TMJOIN ? " joins" : " resumes").append(" work on behalf of transaction branch ").append(xid).toString());
  }
  if (this.localContext != null) {
    throw new XAException(XAException.XAER_PROTO);
  }
  if (this.localXid != null) {
    throw new XAException(XAException.XAER_PROTO);
  }
switch (flags) {
case TMNOFLAGS:
case TMJOIN:
default :
    try {
      localContext=resourceManager.createTransactionContext(this);
      resourceManager.beginTransaction(localContext);
    }
 catch (    Exception e) {
      logger.error("Could not create new transactional resource",e);
      throw (XAException)new XAException(e.getMessage()).initCause(e);
    }
  break;
case TMRESUME:
localContext=resourceManager.getSuspendedTransactionalResource(xid);
if (localContext == null) {
throw new XAException(XAException.XAER_NOTA);
}
resourceManager.removeSuspendedTransactionalResource(xid);
break;
}
localXid=xid;
resourceManager.addActiveTransactionalResource(localXid,localContext);
}
