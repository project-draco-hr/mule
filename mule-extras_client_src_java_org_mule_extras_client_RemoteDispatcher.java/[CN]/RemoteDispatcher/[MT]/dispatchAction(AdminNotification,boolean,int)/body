{
  String xml=xstream.toXML(action);
  UMOMessage message=new MuleMessage(xml,(action.getMessage() == null ? null : action.getMessage().getProperties()));
  message.addProperties(action.getProperties());
  UMOEndpoint endpoint=ConnectorFactory.createEndpoint(serverEndpoint,UMOEndpoint.ENDPOINT_TYPE_SENDER);
  endpoint.setRemoteSync(synchronous);
  UMOSession session=new MuleSession();
  UMOEvent event=new MuleEvent(message,endpoint,session,true);
  event.setTimeout(timeout);
  if (logger.isDebugEnabled()) {
    logger.debug("MuleClient sending remote call to: " + action.getResourceIdentifier() + ". At "+ serverEndpoint.toString()+ " .Event is: "+ event);
  }
  UMOMessageDispatcher dispatcher=endpoint.getConnector().getDispatcher(serverEndpoint.getAddress());
  UMOMessage result=null;
  try {
    if (synchronous) {
      result=dispatcher.send(event);
    }
 else {
      dispatcher.dispatch(event);
      return null;
    }
    if (result != null) {
      String resultXml=result.getPayloadAsString();
      if (resultXml != null && resultXml.length() > 0) {
        Object obj=xstream.fromXML(resultXml);
        if (obj instanceof AdminNotification) {
          result=((AdminNotification)obj).getMessage();
        }
 else {
          result=(UMOMessage)obj;
        }
      }
 else {
        return null;
      }
    }
  }
 catch (  Exception e) {
    throw new DispatchException(event.getMessage(),event.getEndpoint(),e);
  }
  if (logger.isDebugEnabled()) {
    logger.debug("Result of MuleClient remote call is: " + (result == null ? "null" : result.getPayload()));
  }
  return result;
}
