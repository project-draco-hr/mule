{
  String sep;
  if (requestBodyBuffer == null) {
    sep=getSeparator(url.toString());
  }
 else   if (requestBodyBuffer.length() > 0) {
    sep="&";
  }
 else {
    sep=StringUtils.EMPTY;
  }
  for (Iterator iterator=args.entrySet().iterator(); iterator.hasNext(); ) {
    Map.Entry entry=(Map.Entry)iterator.next();
    String name=(String)entry.getKey();
    String exp=(String)entry.getValue();
    Object value=null;
    if (muleContext.getExpressionManager().isExpression(exp)) {
      ValidationResult validation=muleContext.getExpressionManager().validate(exp);
      if (!validation.isSuccess()) {
        throw new InvalidExpressionException(exp,validation.errorMessage().orElse(""));
      }
      value=muleContext.getExpressionManager().evaluate(exp,event,flowConstruct).getValue();
    }
 else {
      value=exp;
    }
    if (value == null) {
      if (!optional) {
        throw new IllegalArgumentException(CoreMessages.propertyIsNotSetOnEvent(exp).toString());
      }
    }
 else     if (requestBodyBuffer != null) {
      requestBodyBuffer.append(sep);
      requestBodyBuffer.append(name).append('=').append(value);
    }
 else {
      url.append(sep);
      url.append(name).append('=').append(value);
    }
    sep=updateSeparator(sep);
  }
  if (!optional && payloadParameterNames != null) {
    if (body instanceof Object[]) {
      Object[] requestArray=(Object[])body;
      for (int i=0; i < payloadParameterNames.size(); i++) {
        if (requestBodyBuffer != null) {
          requestBodyBuffer.append(sep).append(payloadParameterNames.get(i)).append('=').append(requestArray[i].toString());
        }
 else {
          url.append(sep).append(payloadParameterNames.get(i)).append('=').append(requestArray[i].toString());
        }
        sep=updateSeparator(sep);
      }
    }
 else {
      if (payloadParameterNames.get(0) != null) {
        if (requestBodyBuffer != null) {
          requestBodyBuffer.append(payloadParameterNames.get(0)).append('=').append(body.toString());
        }
 else {
          url.append(sep).append(payloadParameterNames.get(0)).append('=').append(body.toString());
        }
      }
    }
  }
}
