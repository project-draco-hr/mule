{
  String expr=getFullExpression();
  if (delegateFilter != null) {
    boolean result=delegateFilter.accept(message);
    if (logger.isDebugEnabled()) {
      logger.debug(MessageFormat.format("Result of expression filter: {0} is: {1}",expr,result));
    }
    return result;
  }
  ClassLoader originalContextClassLoader=Thread.currentThread().getContextClassLoader();
  try {
    Thread.currentThread().setContextClassLoader(expressionEvaluationClassLoader);
    Map<String,Object> flowVars=new HashMap<>();
    for (    String var : message.getInvocationPropertyNames()) {
      flowVars.put(var,message.getInvocationProperty(var));
    }
    MuleEvent event=new DefaultMuleEvent(message,MessageExchangePattern.ONE_WAY,new Flow("",muleContext));
    for (    Map.Entry<String,Object> var : flowVars.entrySet()) {
      event.setFlowVariable(var.getKey(),var.getValue());
    }
    return muleContext.getExpressionManager().evaluateBoolean(expr,event,nullReturnsTrue,!nullReturnsTrue);
  }
  finally {
    Thread.currentThread().setContextClassLoader(originalContextClassLoader);
  }
}
