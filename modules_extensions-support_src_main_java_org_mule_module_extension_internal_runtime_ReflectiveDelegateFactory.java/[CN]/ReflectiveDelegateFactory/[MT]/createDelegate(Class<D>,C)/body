{
  Set<Constructor> suitableConstructors=getConstructors(delegateType,withModifier(Modifier.PUBLIC),withParametersCount(1),withParametersAssignableTo(configurationInstance.getClass()));
  if (suitableConstructors.isEmpty()) {
    throw new IllegalArgumentException(format("Class %s was expected to have one public constructor with one argument of type %s but it was not found. Add such constructor in order" + "to execute those operations with a configuration of that type",delegateType.getName(),configurationInstance.getClass().getName()));
  }
  D delegate;
  try {
    delegate=(D)suitableConstructors.iterator().next().newInstance(configurationInstance);
  }
 catch (  Exception e) {
    throw new MuleRuntimeException(createStaticMessage(format("Could not create instance of class %s using configuration of type %s",delegateType.getName(),configurationInstance.getClass().getName())),e);
  }
  return delegate;
}
