{
  if (name.equalsIgnoreCase(NOW_FUNCTION)) {
    return new Timestamp(System.currentTimeMillis());
  }
 else   if (name.equalsIgnoreCase(DATE_FUNCTION)) {
    return new Date(System.currentTimeMillis());
  }
 else   if (name.toLowerCase().startsWith(DATESTAMP_FUNCTION)) {
    String temp=name.substring(DATESTAMP_FUNCTION.length());
    if (temp.length() == 0) {
      return DateUtils.getTimeStamp(DEFAULT_DATE_FORMAT);
    }
 else {
      temp=temp.substring(1);
      return DateUtils.getTimeStamp(temp);
    }
  }
 else   if (name.equalsIgnoreCase(UUID_FUNCTION)) {
    return UUID.getUUID();
  }
 else   if (name.equalsIgnoreCase(SYSTIME_FUNCTION)) {
    return System.currentTimeMillis();
  }
 else   if (name.equalsIgnoreCase(HOSTNAME_FUNCTION)) {
    try {
      return InetAddress.getLocalHost().getHostName();
    }
 catch (    UnknownHostException e) {
      throw new MuleRuntimeException(CoreMessages.failedToProcessExtractorFunction(name),e);
    }
  }
 else   if (name.equalsIgnoreCase(IP_FUNCTION)) {
    try {
      return InetAddress.getLocalHost().getHostAddress();
    }
 catch (    UnknownHostException e) {
      throw new MuleRuntimeException(CoreMessages.failedToProcessExtractorFunction(name),e);
    }
  }
 else   if (name.equalsIgnoreCase(COUNT_FUNCTION)) {
    return count.getAndIncrement();
  }
 else   if (name.equalsIgnoreCase(PAYLOAD_CLASS_FUNCTION)) {
    return message.getPayload().getClass().getName();
  }
 else   if (name.equalsIgnoreCase(SHORT_PAYLOAD_CLASS_FUNCTION)) {
    return ClassUtils.getClassName(message.getPayload().getClass());
  }
 else {
    throw new IllegalArgumentException(name);
  }
}
