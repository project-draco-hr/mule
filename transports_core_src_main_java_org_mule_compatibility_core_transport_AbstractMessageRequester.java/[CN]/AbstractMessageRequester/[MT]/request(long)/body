{
  try {
    EndpointMessageNotification beginNotification=null;
    if (connector.isEnableMessageEvents()) {
      beginNotification=new EndpointMessageNotification(InternalMessage.builder().nullPayload().build(),endpoint,null,MESSAGE_REQUEST_BEGIN);
    }
    connect();
    InternalMessage result=doRequest(timeout);
    MuleCompatibilityMessageBuilder builder;
    if (result != null) {
      builder=new MuleCompatibilityMessageBuilder(result);
    }
 else {
      builder=new MuleCompatibilityMessageBuilder(InternalMessage.builder().nullPayload().build());
    }
    if (result != null) {
      String rootId=result.getInboundProperty(MULE_ROOT_MESSAGE_ID_PROPERTY);
      if (rootId != null) {
        builder.correlationId(rootId);
        builder.removeInboundProperty(MULE_ROOT_MESSAGE_ID_PROPERTY);
      }
      result=builder.build();
      if (!endpoint.isDisableTransportTransformer()) {
        result=applyInboundTransformers(result);
      }
      if (beginNotification != null) {
        connector.fireNotification(beginNotification);
        connector.fireNotification(new EndpointMessageNotification(result,endpoint,null,MESSAGE_REQUEST_END));
      }
    }
    return result;
  }
 catch (  ReceiveException e) {
    disposeAndLogException();
    throw e;
  }
catch (  Exception e) {
    disposeAndLogException();
    throw new ReceiveException(endpoint,timeout,e);
  }
}
