{
  List results=new ArrayList();
  RecordLocation pos=null;
  logger.info("Journal Recovery Started.");
  try {
synchronized (markLock) {
      while ((pos=journal.getNextRecordLocation(pos)) != null) {
        Packet packet=journal.read(pos);
        byte[] buffer=packet.sliceAsBytes();
        if (buffer[0] == DELETE_BYTE) {
          UUID id=new UUID(buffer,1);
          results.remove(id);
          unusedMarks.add(pos);
          RecordLocation loc=(RecordLocation)marks.remove(id);
          if (loc != null) {
            pendingMarks.remove(loc);
            unusedMarks.add(loc);
          }
          markLock.notify();
        }
 else {
          Object obj=readStorePacket(buffer);
          UUID id=getId(obj);
          results.add(id);
          objects.put(id,obj);
          marks.put(id,pos);
          pendingMarks.add(pos);
        }
      }
    }
  }
 catch (  IOException e) {
    throw e;
  }
catch (  Exception e) {
    throw (IOException)new IOException().initCause(e);
  }
  logger.info("Journal Recovered: " + results.size() + " message(s) in transactions recovered.");
  return results;
}
