{
  String location=SpiUtils.SERVICE_ROOT + MODEL_SERVICE_PATH;
  InputStream is=SpiUtils.findServiceDescriptor(MODEL_SERVICE_PATH,type,ConnectorFactory.class);
  try {
    if (is != null) {
      Properties props=new Properties();
      props.load(is);
      String clazz=props.getProperty("model");
      try {
        UMOModel model=(UMOModel)ClassUtils.instanciateClass(clazz,ClassUtils.NO_ARGS,ModelFactory.class);
        BeanUtils.populateWithoutFail(model,props,false);
        return model;
      }
 catch (      Exception e) {
        throw new ModelServiceNotFoundException(location + "/" + type,e);
      }
    }
 else {
      throw new ModelServiceNotFoundException(location + "/" + type);
    }
  }
 catch (  IOException e) {
    throw new ModelServiceNotFoundException(location + "/" + type,e);
  }
}
