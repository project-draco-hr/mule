{
  final AtomicReference<RequestHandler> requestHandlerRef=new AtomicReference<>();
  when(mockHttpListenerConfig.addRequestHandler(any(ListenerRequestMatcher.class),any(RequestHandler.class))).then(new Answer<RequestHandlerManager>(){
    @Override public RequestHandlerManager answer(    InvocationOnMock invocation) throws Throwable {
      requestHandlerRef.set((RequestHandler)invocation.getArguments()[1]);
      return null;
    }
  }
);
  useInvalidPath("/");
  assertThat(getCurrentEvent(),is(nullValue()));
  requestHandlerRef.get().handleRequest(mock(HttpRequestContext.class),mock(HttpResponseReadyCallback.class));
  assertThat(getCurrentEvent(),is(nullValue()));
}
