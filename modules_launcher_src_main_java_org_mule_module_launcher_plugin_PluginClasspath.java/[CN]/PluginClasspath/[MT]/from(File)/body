{
  if (!pluginDir.exists()) {
    throw new IllegalArgumentException("Can't read from the temporary plugin directory: " + pluginDir);
  }
  final PluginClasspath cp=new PluginClasspath();
  try {
    cp.setRuntimeClassesDir(new File(pluginDir,"classes").toURI().toURL());
    final File libDir=new File(pluginDir,"lib");
    if (libDir.exists()) {
      final File[] jars=libDir.listFiles((FilenameFilter)new SuffixFileFilter(".jar"));
      URL[] urls=new URL[jars.length];
      for (int i=0; i < jars.length; i++) {
        urls[i]=jars[i].toURI().toURL();
      }
      cp.setRuntimeLibs(urls);
    }
  }
 catch (  MalformedURLException e) {
    throw new IllegalArgumentException("Failed to getDomainClassLoader plugin classpath " + pluginDir);
  }
  return cp;
}
