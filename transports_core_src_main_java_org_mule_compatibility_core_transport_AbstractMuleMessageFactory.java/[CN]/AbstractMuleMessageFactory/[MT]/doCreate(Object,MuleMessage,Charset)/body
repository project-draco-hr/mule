{
  if (transportMessage == null) {
    return new DefaultMuleMessage(NullPayload.getInstance());
  }
  if (!isTransportMessageTypeSupported(transportMessage)) {
    throw new MessageTypeNotSupportedException(transportMessage,getClass());
  }
  Object payload=extractPayload(transportMessage,encoding);
  DataTypeParamsBuilder dataTypeBuilder=DataType.builder().type((Class)(payload == null ? Object.class : payload.getClass())).charset(encoding);
  String mimeType=getMimeType(transportMessage);
  if (StringUtils.isNotEmpty(mimeType)) {
    dataTypeBuilder=dataTypeBuilder.mediaType(mimeType);
  }
  final DataType dataType=dataTypeBuilder.build();
  MutableMuleMessage message;
  if (previousMessage != null) {
    message=new DefaultMuleMessage(payload,previousMessage,dataType);
  }
 else {
    message=new DefaultMuleMessage(payload,dataType);
  }
  message=addProperties(message,transportMessage);
  message=addAttachments(message,transportMessage);
  return message;
}
