{
  if (transportMessage == null) {
    return MuleMessage.builder().payload(NullPayload.getInstance()).build();
  }
  if (!isTransportMessageTypeSupported(transportMessage)) {
    throw new MessageTypeNotSupportedException(transportMessage,getClass());
  }
  Object payload=extractPayload(transportMessage,encoding);
  DataTypeParamsBuilder dataTypeBuilder=DataType.builder().type((Class)(payload == null ? Object.class : payload.getClass())).charset(encoding);
  String mimeType=getMimeType(transportMessage);
  if (StringUtils.isNotEmpty(mimeType)) {
    dataTypeBuilder=dataTypeBuilder.mediaType(mimeType);
  }
  final DataType dataType=dataTypeBuilder.build();
  MuleMessage.Builder messageBuilder;
  if (previousMessage != null) {
    messageBuilder=MuleMessage.builder(previousMessage).payload(payload);
  }
 else   if (payload instanceof MuleMessage) {
    messageBuilder=MuleMessage.builder((MuleMessage)payload);
  }
 else   if (payload == null) {
    messageBuilder=MuleMessage.builder().payload(NullPayload.getInstance());
  }
 else {
    messageBuilder=MuleMessage.builder().payload(payload);
  }
  messageBuilder.mediaType(dataType.getMediaType());
  addProperties(messageBuilder,transportMessage);
  addAttachments(messageBuilder,transportMessage);
  return messageBuilder.build();
}
