{
  MuleEvent event=null;
  Object pojoService=null;
  MuleProxy proxy=null;
  QueueSession queueSession=muleContext.getQueueManager().getQueueSession();
  while (!stopped.get()) {
    try {
      paused.whenFalse(null);
      if (stopping.get()) {
        if (queueSession == null || getQueueSize() <= 0) {
          stopping.set(false);
          break;
        }
      }
      event=(MuleEvent)dequeue();
      if (event != null) {
        if (stats.isEnabled()) {
          stats.decQueuedEvent();
        }
        if (logger.isDebugEnabled()) {
          logger.debug("Component: " + name + " dequeued event on: "+ event.getEndpoint().getEndpointURI());
        }
        pojoService=getOrCreateService();
        proxy=createComponentProxy(pojoService);
        proxy.onEvent(queueSession,event);
        workManager.scheduleWork(proxy,WorkManager.INDEFINITE,null,this);
      }
    }
 catch (    Exception e) {
      if (isStopped() || isStopping()) {
        break;
      }
      try {
        if (serviceFactory != null) {
          serviceFactory.release(pojoService);
        }
      }
 catch (      Exception e2) {
        logger.warn(e2);
      }
      if (e instanceof InterruptedException) {
        stopping.set(false);
        break;
      }
 else       if (e instanceof NoSuchElementException) {
        handleException(new ComponentException(CoreMessages.proxyPoolTimedOut(),(event == null ? null : event.getMessage()),this,e));
      }
 else       if (e instanceof UMOException) {
        handleException(e);
      }
 else       if (e instanceof WorkException) {
        handleException(new ComponentException(CoreMessages.eventProcessingFailedFor(name),(event == null ? null : event.getMessage()),this,e));
      }
 else {
        handleException(new ComponentException(CoreMessages.failedToGetPooledObject(),(event == null ? null : event.getMessage()),this,e));
      }
    }
 finally {
      stopping.set(false);
    }
  }
}
