{
  final TestSedaService testSedaService=(TestSedaService)muleContext.getRegistry().lookupService("testService");
  FunctionalTestComponent testComponent=(FunctionalTestComponent)getComponent(testSedaService);
  assertNotNull(testComponent);
  EventCallback callback=new EventCallback(){
    public void eventReceived(    final MuleEventContext context,    final Object component) throws Exception {
      MuleMessage msg=context.getMessage();
      assertEquals("BAR",msg.getProperty("FOO"));
      assertNull(msg.getProperty("clientClass"));
    }
  }
;
  testComponent.setEventCallback(callback);
  MuleClient client=new MuleClient();
  Map<String,Object> props=new HashMap<String,Object>();
  props.put("operation","greetMe");
  props.put("FOO","BAR");
  MuleMessage result=client.send("clientEndpoint","Dan",props);
  assertEquals("Hello Dan Received",result.getPayload());
  GreeterImpl impl=getGreeter();
  assertEquals(1,impl.getInvocationCount());
}
