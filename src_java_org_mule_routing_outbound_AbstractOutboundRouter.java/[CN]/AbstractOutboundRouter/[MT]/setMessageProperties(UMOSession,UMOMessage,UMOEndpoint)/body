{
  if (replyTo != null) {
    message.setReplyTo(replyTo);
    message.setProperty(MuleProperties.MULE_REPLY_TO_REQUESTOR_PROPERTY,session.getComponent().getDescriptor().getName());
    if (logger.isDebugEnabled())     logger.debug("Setting replyTo=" + replyTo + " for outbound endpoint: "+ endpoint.getEndpointURI());
  }
  if (correlationId) {
    String correlation=null;
    if (correlationIdExtractor == null) {
      correlation=message.getUniqueId();
    }
 else {
      Object o=correlationIdExtractor.getPropertry(MuleProperties.MULE_CORRELATION_ID_PROPERTY,message);
      if (logger.isDebugEnabled())       logger.debug("Extracted correlation Id as: " + o);
      correlation=o.toString();
    }
    int seq=1;
    if (correlationSequenceExtractor != null) {
      Object o=correlationSequenceExtractor.getPropertry(MuleProperties.MULE_CORRELATION_SEQUENCE_PROPERTY,message);
      if (logger.isDebugEnabled())       logger.debug("Extracted correlation sequence as: " + o);
      if (o != null) {
        try {
          seq=Integer.parseInt(o.toString());
        }
 catch (        NumberFormatException e) {
          if (logger.isDebugEnabled())           logger.debug("Invalid Correlation sequence value: " + o.toString() + ". Defaulting to 1");
          seq=1;
        }
      }
    }
    int group=1;
    if (correlationGroupExtractor != null) {
      Object o=correlationGroupExtractor.getPropertry(MuleProperties.MULE_CORRELATION_GROUP_SIZE_PROPERTY,message);
      if (logger.isDebugEnabled())       logger.debug("Extracted correlation Group size as: " + o);
      if (o != null) {
        try {
          group=Integer.parseInt(o.toString());
        }
 catch (        NumberFormatException e) {
          if (logger.isDebugEnabled())           logger.debug("Invalid Correlation group value: " + o.toString() + ". Defaulting to 1");
          group=1;
        }
      }
    }
    if (logger.isDebugEnabled()) {
      StringBuffer buf=new StringBuffer();
      buf.append("Setting Correlation info form Outbound router for endpoint: ").append(endpoint.getEndpointURI());
      buf.append("\n").append("Id=").append(correlation);
      buf.append(", ").append("Seq=").append(seq);
      buf.append(", ").append("Group Size=").append(group);
      logger.debug(buf.toString());
    }
    message.setCorrelationId(correlation);
    message.setCorrelationGroupSize(group);
    message.setCorrelationSequence(seq);
  }
}
