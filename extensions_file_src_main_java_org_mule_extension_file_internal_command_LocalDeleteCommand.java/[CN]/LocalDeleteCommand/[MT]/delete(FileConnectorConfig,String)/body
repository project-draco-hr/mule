{
  Path path=resolveExistingPath(config,filePath);
  if (LOGGER.isDebugEnabled()) {
    LOGGER.debug("Preparing to delete '{}'",path);
  }
  try {
    if (isDirectory(path)) {
      walkFileTree(path,new SimpleFileVisitor<Path>(){
        @Override public FileVisitResult visitFile(        Path file,        BasicFileAttributes attrs) throws IOException {
          doDelete(file);
          return CONTINUE;
        }
        @Override public FileVisitResult postVisitDirectory(        Path dir,        IOException exc) throws IOException {
          if (super.postVisitDirectory(dir,exc) == CONTINUE) {
            doDelete(dir);
          }
          return CONTINUE;
        }
      }
);
    }
 else {
      doDelete(path);
    }
  }
 catch (  AccessDeniedException e) {
    throw exception(format("Could not delete file '%s' because access was denied by the operating system",path),e);
  }
catch (  IOException e) {
    throw exception(format("Could not delete '%s'",path),e);
  }
}
