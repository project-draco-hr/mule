{
  MuleClient client=new MuleClient();
  while (client.request(DESTINATION,1000) != null) {
    logger.warn("Destination " + DESTINATION + " isn't empty, draining it");
  }
  FunctionalTestComponent ftc=getFunctionalTestComponent("Bouncer");
  final Latch mrexFired=new Latch();
  muleContext.registerListener(new ExceptionNotificationListener<ExceptionNotification>(){
    public void onNotification(    ExceptionNotification notification){
      if (notification.getException() instanceof MessageRedeliveredException) {
        mrexFired.countDown();
      }
    }
  }
);
  final CounterCallback callback=new CounterCallback(){
    @Override public void eventReceived(    MuleEventContext context,    Object Component) throws Exception {
      final int count=incCallbackCount();
      logger.info("Message Delivery Count is: " + count);
      throw new FunctionalTestException();
    }
  }
;
  ftc.setEventCallback(callback);
  client.dispatch(DESTINATION,"test",null);
  mrexFired.await(timeout,TimeUnit.MILLISECONDS);
  assertEquals("MessageRedeliveredException never fired.",0,mrexFired.getCount());
  assertEquals("Wrong number of delivery attempts",4,callback.getCallbackCount());
}
