{
  if (message instanceof HttpServletRequest) {
    setPayload((HttpServletRequest)message);
    setContentEncoding((HttpServletRequest)message);
    Map headers=new HashMap();
    final Map parameterMap=request.getParameterMap();
    if (parameterMap != null && parameterMap.size() > 0) {
      for (Iterator iterator=parameterMap.entrySet().iterator(); iterator.hasNext(); ) {
        Map.Entry entry=(Map.Entry)iterator.next();
        String key=(String)entry.getKey();
        Object value=entry.getValue();
        if (value != null) {
          if (value.getClass().isArray() && ((Object[])value).length == 1) {
            headers.put(key,((Object[])value)[0]);
          }
 else {
            headers.put(key,value);
          }
        }
      }
    }
    String key;
    for (Enumeration e=request.getAttributeNames(); e.hasMoreElements(); ) {
      key=(String)e.nextElement();
      headers.put(key,request.getAttribute(key));
    }
    String realKey;
    for (Enumeration e=request.getHeaderNames(); e.hasMoreElements(); ) {
      key=(String)e.nextElement();
      realKey=key;
      if (key.startsWith(HttpConstants.X_PROPERTY_PREFIX)) {
        realKey=key.substring(2);
      }
      String value=request.getHeader(key);
      if (HttpConstants.HEADER_HOST.equalsIgnoreCase(key)) {
        realKey=HttpConstants.HEADER_HOST;
        int port=request.getLocalPort();
        if (!value.contains(":") && port != 80 && port != 443) {
          value=value + ":" + port;
        }
      }
      headers.put(realKey,value);
    }
    addInboundProperties(headers);
    if ("GET".equalsIgnoreCase(request.getMethod())) {
      payload=getProperty(HttpConnector.HTTP_REQUEST_PROPERTY);
    }
  }
 else {
    throw new MessageTypeNotSupportedException(message,getClass());
  }
}
