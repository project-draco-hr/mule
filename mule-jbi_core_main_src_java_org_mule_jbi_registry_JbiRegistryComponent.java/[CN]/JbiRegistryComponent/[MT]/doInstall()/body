{
  JbiDocument.Jbi jbi=((JbiDocument.Jbi)getDescriptor().getConfiguration());
  com.sun.java.xml.ns.jbi.ComponentDocument.Component.SharedLibrary[] libs=jbi.getComponent().getSharedLibraryArray();
  for (int i=0; i < libs.length; i++) {
    String libName=libs[i].getDomNode().getFirstChild().getNodeValue();
    Library library=getRegistry().getLibrary(libName);
    if (library == null) {
      throw new RegistryException("Component requires a missing shared library: " + libName);
    }
    library.addComponent(this);
  }
  this.classPathElements=Arrays.asList(jbi.getComponent().getComponentClassPath().getPathElementArray());
  this.isClassLoaderParentFirst=!com.sun.java.xml.ns.jbi.ComponentDocument.Component.ComponentClassLoaderDelegation.SELF_FIRST.equals(jbi.getComponent().getComponentClassLoaderDelegation());
  this.componentClassName=jbi.getComponent().getComponentClassName().getDomNode().getFirstChild().getNodeValue();
}
