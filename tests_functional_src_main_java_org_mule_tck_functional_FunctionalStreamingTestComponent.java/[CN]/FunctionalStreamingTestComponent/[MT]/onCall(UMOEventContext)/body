{
  InputStream in=(InputStream)context.getMessage().getPayload(InputStream.class);
  try {
    logger.debug("arrived at " + toString());
    byte[] startData=new byte[STREAM_SAMPLE_SIZE];
    int startDataSize=0;
    byte[] endData=new byte[STREAM_SAMPLE_SIZE];
    int endDataSize=0;
    int endRingPointer=0;
    long streamLength=0;
    byte[] buffer=new byte[STREAM_BUFFER_SIZE];
    int bytesRead=0;
    while (bytesRead >= 0) {
      bytesRead=read(in,buffer);
      if (bytesRead > 0) {
        if (logger.isDebugEnabled()) {
          logger.debug("read " + bytesRead + " bytes");
        }
        streamLength+=bytesRead;
        int startOfEndBytes=0;
        for (int i=0; startDataSize < STREAM_SAMPLE_SIZE && i < bytesRead; ++i) {
          startData[startDataSize++]=buffer[i];
          ++startOfEndBytes;
        }
        startOfEndBytes=Math.max(startOfEndBytes,bytesRead - STREAM_SAMPLE_SIZE);
        for (int i=startOfEndBytes; i < bytesRead; ++i) {
          ++endDataSize;
          endData[endRingPointer++ % STREAM_SAMPLE_SIZE]=buffer[i];
        }
        if (streamLength >= targetSize) {
          doCallback(startData,startDataSize,endData,endDataSize,endRingPointer,streamLength,context);
        }
      }
    }
    in.close();
  }
 catch (  Exception e) {
    in.close();
    e.printStackTrace();
    if (logger.isDebugEnabled()) {
      logger.debug(e);
    }
    throw e;
  }
  return null;
}
