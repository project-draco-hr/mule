{
  ClassLoader parent=getParentClassLoader(descriptor);
  List<URL> urls=new LinkedList<>();
  try {
    urls.add(MuleFoldersUtil.getAppClassesFolder(descriptor.getName()).toURI().toURL());
    urls.addAll(findJars(descriptor.getName(),MuleFoldersUtil.getAppLibFolder(descriptor.getName()),true));
    urls.addAll(findJars(descriptor.getName(),MuleFoldersUtil.getMulePerAppLibFolder(),true));
  }
 catch (  IOException e) {
    throw new RuntimeException("Unable to create classloader for application",e);
  }
  return new MuleApplicationClassLoader(descriptor.getName(),parent,descriptor.getLoaderOverrides(),nativeLibraryFinderFactory.create(descriptor.getName()),urls);
}
