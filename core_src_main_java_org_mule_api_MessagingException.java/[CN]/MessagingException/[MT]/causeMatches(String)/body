{
  if (regex == null) {
    throw new IllegalArgumentException("regex cannot be null");
  }
  return (ExceptionHelper.traverseCauseHierarchy(this,new ExceptionHelper.ExceptionEvaluator<Object>(){
    @Override public Object evaluate(    Throwable e){
      WildcardFilter wildcardFilter=new WildcardFilter(regex);
      if (wildcardFilter.accept(e.getClass().getName())) {
        return e;
      }
      try {
        RegExFilter regExFilter=new RegExFilter(regex);
        if (regExFilter.accept(e.getClass().getName())) {
          return e;
        }
      }
 catch (      Exception regexEx) {
      }
      return null;
    }
  }
)) != null;
}
