{
  wireMockRule.stubFor(get(urlMatching(AUTHORIZE_PATH + ".*")).willReturn(aResponse().withStatus(200)));
  final String expectedState=(state == null ? "" : state) + ":resourceOwnerId=" + userId;
  final ImmutableMap.Builder localAuthorizationUrlParametersBuilder=new ImmutableMap.Builder().put("userId",userId);
  if (state != NO_STATE) {
    localAuthorizationUrlParametersBuilder.put("state",state);
  }
  Request.Get(localAuthorizationUrl.getValue() + "?" + HttpParser.encodeQueryString(localAuthorizationUrlParametersBuilder.build())).connectTimeout(REQUEST_TIMEOUT).socketTimeout(REQUEST_TIMEOUT).execute();
  AuthorizationRequestAsserter.create((findAll(getRequestedFor(urlMatching(AUTHORIZE_PATH + ".*"))).get(0))).assertStateIs(expectedState);
  wireMockRule.stubFor(post(urlEqualTo(TOKEN_PATH)).willReturn(aResponse().withBody("{" + "\"" + OAuthConstants.ACCESS_TOKEN_PARAMETER + "\":\""+ accessToken+ "\","+ "\""+ OAuthConstants.EXPIRES_IN_PARAMETER+ "\":"+ EXPIRES_IN+ ","+ "\""+ OAuthConstants.REFRESH_TOKEN_PARAMETER+ "\":\""+ REFRESH_TOKEN+ "\"}")));
  final String redirectUrlQueryParams=HttpParser.encodeQueryString(new ImmutableMap.Builder().put(OAuthConstants.CODE_PARAMETER,AUTHENTICATION_CODE).put(OAuthConstants.STATE_PARAMETER,expectedState).build());
  Request.Get(redirectUrl.getValue() + "?" + redirectUrlQueryParams).connectTimeout(REQUEST_TIMEOUT).socketTimeout(REQUEST_TIMEOUT).execute();
}
