{
  assertNotNull(connector);
  MuleDescriptor d=getTestDescriptor("anApple",Apple.class.getName());
  d.setModelName(model.getName());
  managementContext.getRegistry().registerService(d,managementContext);
  UMOComponent component=model.getComponent(d.getName());
  UMOEndpoint endpoint=managementContext.getRegistry().createEndpointFromUri(new MuleEndpointURI(getTestEndpointURI()),UMOEndpoint.ENDPOINT_TYPE_SENDER,managementContext);
  try {
    connector.registerListener(null,null);
    fail("cannot register null");
  }
 catch (  Exception e) {
  }
  try {
    connector.registerListener(null,endpoint);
    fail("cannot register null");
  }
 catch (  Exception e) {
  }
  try {
    connector.registerListener(component,null);
    fail("cannot register null");
  }
 catch (  Exception e) {
  }
  connector.registerListener(component,endpoint);
  connector.unregisterListener(component,endpoint);
  try {
    connector.unregisterListener(null,null);
    fail("cannot unregister null");
  }
 catch (  Exception e) {
  }
  try {
    connector.unregisterListener(component,null);
    fail("cannot unregister null");
  }
 catch (  Exception e) {
  }
  try {
    connector.unregisterListener(null,endpoint);
    fail("cannot unregister null");
  }
 catch (  Exception e) {
  }
  connector.unregisterListener(component,endpoint);
  model.unregisterComponent(d);
}
