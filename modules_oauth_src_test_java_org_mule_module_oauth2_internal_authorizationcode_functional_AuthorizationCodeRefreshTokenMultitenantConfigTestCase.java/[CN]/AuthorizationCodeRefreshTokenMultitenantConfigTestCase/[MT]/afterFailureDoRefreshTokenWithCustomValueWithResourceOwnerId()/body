{
  final TokenManagerConfig tokenManagerConfig=muleContext.getRegistry().lookupObject(MULTITENANT_OAUTH_CONFIG);
  final ConfigOAuthContext configOAuthContext=tokenManagerConfig.getConfigOAuthContext();
  final ResourceOwnerOAuthContext contextForResourceOwnerTony=configOAuthContext.getContextForResourceOwner(USER_ID_TONY);
  contextForResourceOwnerTony.setAccessToken(TONY_ACCESS_TOKEN);
  configOAuthContext.updateResourceOwnerOAuthContext(contextForResourceOwnerTony);
  final ResourceOwnerOAuthContext contextForResourceOwnerJohn=configOAuthContext.getContextForResourceOwner(USER_ID_JOHN);
  contextForResourceOwnerJohn.setAccessToken(JOHN_ACCESS_TOKEN);
  configOAuthContext.updateResourceOwnerOAuthContext(contextForResourceOwnerJohn);
  executeRefreshToken("testMultitenantFlow",MULTITENANT_OAUTH_CONFIG,multitenantUser.getValue(),500);
  OAuthContextFunctionAsserter.createFrom(muleContext.getExpressionLanguage(),MULTITENANT_OAUTH_CONFIG,USER_ID_JOHN).assertAccessTokenIs(REFRESHED_ACCESS_TOKEN).assertState(null);
  OAuthContextFunctionAsserter.createFrom(muleContext.getExpressionLanguage(),MULTITENANT_OAUTH_CONFIG,USER_ID_TONY).assertAccessTokenIs(TONY_ACCESS_TOKEN).assertState(null);
}
