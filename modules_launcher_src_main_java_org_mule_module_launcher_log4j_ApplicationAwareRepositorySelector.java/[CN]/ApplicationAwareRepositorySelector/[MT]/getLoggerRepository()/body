{
  final ClassLoader ccl=Thread.currentThread().getContextClassLoader();
  LoggerRepository repository=this.repository.get(ccl.hashCode());
  if (repository == null) {
    final RootLogger root=new RootLogger(Level.INFO);
    repository=new Hierarchy(root);
    try {
      String logName;
      if (ccl instanceof MuleApplicationClassLoader) {
        MuleApplicationClassLoader muleCL=(MuleApplicationClassLoader)ccl;
        logName="-app-" + muleCL.getAppName();
        File logDir=new File(MuleContainerBootstrapUtils.getMuleHome(),"logs");
        File logFile=new File(logDir,"mule" + logName + ".log");
        RollingFileAppender fileAppender=new RollingFileAppender(new PatternLayout(PATTERN_LAYOUT),logFile.getAbsolutePath(),true);
        fileAppender.setMaxBackupIndex(1);
        fileAppender.setMaximumFileSize(1000000);
        fileAppender.activateOptions();
        root.addAppender(fileAppender);
      }
 else {
        final ConsoleAppender appender=new ConsoleAppender(new PatternLayout(PATTERN_LAYOUT));
        appender.activateOptions();
        root.addAppender(appender);
      }
      final LoggerRepository previous=this.repository.putIfAbsent(ccl.hashCode(),repository);
      if (previous != null) {
        repository=previous;
      }
    }
 catch (    IOException e) {
      throw new RuntimeException(e);
    }
  }
  return repository;
}
