{
  UMOMessage result=null;
  if (endpoints == null || endpoints.size() == 0) {
    throw new RoutePathNotFoundException(new Message(Messages.NO_ENDPOINTS_FOR_ROUTER),message,null);
  }
  if (enableCorrelation != ENABLE_CORRELATION_NEVER) {
    boolean correlationSet=message.getCorrelationId() != null;
    if (correlationSet && (enableCorrelation == ENABLE_CORRELATION_IF_NOT_SET)) {
      logger.debug("CorrelationId is already set, not setting Correlation group size");
    }
 else {
      message.setCorrelationGroupSize(endpoints.size());
    }
  }
  UMOEndpoint endpoint;
  boolean success=false;
synchronized (endpoints) {
    for (int i=0; i < endpoints.size(); i++) {
      endpoint=(UMOEndpoint)endpoints.get(i);
      if (synchronous) {
        if (result == null) {
          try {
            result=send(session,message,endpoint);
            success=true;
            break;
          }
 catch (          UMOException e) {
            logger.info("Failed to send to endpoint: " + endpoint.getEndpointURI().toString() + ". Error was: "+ e.getMessage()+ ". Trying next endpoint");
          }
        }
 else {
          String def=(String)endpoint.getProperties().get("default");
          if (def != null) {
            try {
              result=send(session,message,endpoint);
              success=true;
              break;
            }
 catch (            UMOException e) {
              logger.info("Failed to send to endpoint: " + endpoint.getEndpointURI().toString() + ". Error was: "+ e.getMessage()+ ". Trying next endpoint");
            }
          }
 else {
            try {
              send(session,message,endpoint);
              success=true;
              break;
            }
 catch (            UMOException e) {
              logger.info("Failed to send to endpoint: " + endpoint.getEndpointURI().toString() + ". Error was: "+ e.getMessage()+ ". Trying next endpoint");
            }
          }
        }
      }
 else {
        try {
          dispatch(session,message,endpoint);
          success=true;
          break;
        }
 catch (        UMOException e) {
          logger.info("Failed to disparch to endpoint: " + endpoint.getEndpointURI().toString() + ". Error was: "+ e.getMessage()+ ". Trying next endpoint");
        }
      }
    }
  }
  if (!success) {
    throw new CouldNotRouteOutboundMessageException(message,(UMOEndpoint)endpoints.get(0));
  }
  return result;
}
