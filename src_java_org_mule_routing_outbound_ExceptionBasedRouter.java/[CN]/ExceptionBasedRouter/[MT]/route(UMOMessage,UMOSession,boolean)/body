{
  UMOMessage result=null;
  final int endpointsCount=endpoints.size();
  if (endpoints == null || endpointsCount == 0) {
    throw new RoutePathNotFoundException(new Message(Messages.NO_ENDPOINTS_FOR_ROUTER),message,null);
  }
  if (enableCorrelation != ENABLE_CORRELATION_NEVER) {
    boolean correlationSet=message.getCorrelationId() != null;
    if (correlationSet && (enableCorrelation == ENABLE_CORRELATION_IF_NOT_SET)) {
      logger.debug("CorrelationId is already set, not setting Correlation group size");
    }
 else {
      message.setCorrelationGroupSize(endpointsCount);
    }
  }
  UMOEndpoint endpoint=null;
  boolean success=false;
synchronized (endpoints) {
    for (int i=0; i < endpointsCount; i++) {
      endpoint=getEndpoint(i,message);
      boolean lastEndpoint=(i == endpointsCount - 1);
      if (!lastEndpoint) {
        logger.info("Sync mode will be forced for " + endpoint.getEndpointURI() + ", as there are more endpoints available.");
      }
      if (!lastEndpoint || synchronous) {
        try {
          result=send(session,message,endpoint);
          success=true;
          break;
        }
 catch (        UMOException e) {
          logger.info("Failed to send to endpoint: " + endpoint.getEndpointURI().toString() + ". Error was: "+ e.getMessage()+ ". Trying next endpoint");
        }
      }
 else {
        try {
          dispatch(session,message,endpoint);
          success=true;
          break;
        }
 catch (        UMOException e) {
          logger.info("Failed to dispatch to endpoint: " + endpoint.getEndpointURI().toString() + ". Error was: "+ e.getMessage()+ ". Trying next endpoint");
        }
      }
    }
  }
  if (!success) {
    throw new CouldNotRouteOutboundMessageException(message,endpoint);
  }
  return result;
}
