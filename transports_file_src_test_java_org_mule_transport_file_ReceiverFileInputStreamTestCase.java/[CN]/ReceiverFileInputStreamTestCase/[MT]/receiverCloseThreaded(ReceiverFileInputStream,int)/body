{
  final CountDownLatch latch=new CountDownLatch(numberThreads);
  ExecutorService pool=Executors.newFixedThreadPool(numberThreads);
  Callable<Void> receiverCloseRunnable=new Callable<Void>(){
    @Override public Void call() throws Exception {
      latch.countDown();
      latch.await();
      receiver.close();
      return null;
    }
  }
;
  try {
    List<Future> futures=new ArrayList<Future>(numberThreads);
    for (int i=0; i < numberThreads; i++) {
      futures.add(pool.submit(receiverCloseRunnable));
    }
    for (    Future future : futures) {
      future.get();
    }
  }
  finally {
    pool.shutdown();
  }
}
