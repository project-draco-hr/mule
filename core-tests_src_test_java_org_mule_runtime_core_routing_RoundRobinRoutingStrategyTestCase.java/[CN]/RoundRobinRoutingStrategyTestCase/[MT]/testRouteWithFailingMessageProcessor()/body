{
  List<Processor> messageProcessors=getMessageProcessorsListWithFailingMessageProcessor();
  Event eventToRoute=getEventWithId(ID_1);
  assertEquals(LETTER_A,getPayloadAsString(roundRobinRoutingStrategy.route(eventToRoute,messageProcessors).getMessage()));
  try {
    roundRobinRoutingStrategy.route(eventToRoute,messageProcessors);
    fail("Exception was expected");
  }
 catch (  RoutingFailedException fe) {
    assertEquals(EXCEPTION_MESSAGE,fe.getCause().getMessage());
  }
  assertEquals(LETTER_B,getPayloadAsString(roundRobinRoutingStrategy.route(eventToRoute,messageProcessors).getMessage()));
  assertEquals(LETTER_A,getPayloadAsString(roundRobinRoutingStrategy.route(eventToRoute,messageProcessors).getMessage()));
}
