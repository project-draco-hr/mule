{
  Element providerElement=new TopLevelElement();
  providerElement.setName(providerModel.getName());
  providerElement.setSubstitutionGroup(MULE_EXTENSION_CONNECTION_PROVIDER_ELEMENT);
  LocalComplexType complexType=new LocalComplexType();
  providerElement.setComplexType(complexType);
  ExtensionType providerType=new ExtensionType();
  providerType.setBase(MULE_EXTENSION_CONNECTION_PROVIDER_TYPE);
  ComplexContent complexContent=new ComplexContent();
  complexContent.setExtension(providerType);
  complexType.setComplexContent(complexContent);
  builder.getSchema().getSimpleTypeOrComplexTypeOrGroup().add(providerElement);
  final ExplicitGroup choice=new ExplicitGroup();
  choice.setMinOccurs(ZERO);
  choice.setMaxOccurs(UNBOUNDED);
  ConnectionManagementType managementType=providerModel.getConnectionManagementType();
  if (managementType == POOLING || managementType == CACHED) {
    addValidationFlag(providerType);
    builder.addRetryPolicy(choice);
  }
  if (managementType == POOLING) {
    addConnectionProviderPoolingProfile(choice);
  }
  builder.registerParameters(providerType,choice,providerModel.getParameterModels());
}
