{
  CxfMessageReceiver cxfReceiver=(CxfMessageReceiver)receiver;
  Server server=cxfReceiver.getServer();
  uriToServer.put(server.getEndpoint().getEndpointInfo().getAddress(),server);
  SedaService c=new SedaService();
  c.setName(CXF_SERVICE_COMPONENT_NAME + server.getEndpoint().getService().getName() + c.hashCode());
  c.setModel(muleContext.getRegistry().lookupSystemModel());
  CxfServiceComponent svcComponent=new CxfServiceComponent(this,(CxfMessageReceiver)receiver);
  svcComponent.setBus(bus);
  c.setComponent(new DefaultJavaComponent(new SingletonObjectFactory(svcComponent)));
  String endpoint=receiver.getEndpointURI().getAddress();
  String scheme=ep.getScheme().toLowerCase();
  boolean sync=receiver.getEndpoint().isSynchronous();
  if (scheme.equals("http") || scheme.equals("https") || scheme.equals("ssl")|| scheme.equals("tcp")|| scheme.equals("servlet")) {
    receiver.getEndpoint().getProperties().put(HttpConnector.HTTP_METHOD_PROPERTY,"POST");
    receiver.getEndpoint().getProperties().put(HttpConstants.HEADER_CONTENT_TYPE,"text/xml");
  }
  QName serviceName=server.getEndpoint().getEndpointInfo().getName();
  EndpointBuilder serviceEndpointbuilder=new EndpointURIEndpointBuilder(endpoint,muleContext);
  serviceEndpointbuilder.setSynchronous(sync);
  serviceEndpointbuilder.setName(ep.getScheme() + ":" + serviceName.getLocalPart());
  c.setInboundRouter(new DefaultInboundRouterCollection());
  c.getInboundRouter().addEndpoint(muleContext.getRegistry().lookupEndpointFactory().getInboundEndpoint(serviceEndpointbuilder));
  services.add(c);
}
