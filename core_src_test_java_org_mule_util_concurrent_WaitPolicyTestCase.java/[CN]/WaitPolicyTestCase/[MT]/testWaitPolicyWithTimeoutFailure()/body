{
  assertEquals(0,SleepyTask.activeTasks.get());
  long failureInterval=100L;
  LastRejectedWaitPolicy policy=new LastRejectedWaitPolicy(failureInterval,TimeUnit.MILLISECONDS);
  executor.setRejectedExecutionHandler(policy);
  List tasks=new ArrayList();
  tasks.add(new SleepyTask("hans",1000));
  tasks.add(new SleepyTask("franz",1000));
  Runnable failedTask=new SleepyTask("tweety",1000);
  tasks.add(failedTask);
  LinkedList submitters=this.execute(tasks);
  assertFalse(submitters.isEmpty());
  Thread.sleep(failureInterval * 2);
  LinkedList exceptions=threadGroup.collectedExceptions();
  assertEquals(1,exceptions.size());
  Map.Entry threadFailure=(Map.Entry)((Map)(exceptions.getFirst())).entrySet().iterator().next();
  assertEquals(submitters.getLast(),threadFailure.getKey());
  assertEquals(RejectedExecutionException.class,threadFailure.getValue().getClass());
  executor.shutdown();
  assertTrue(executor.awaitTermination(2500,TimeUnit.MILLISECONDS));
  assertSame(failedTask,policy.lastRejectedRunnable());
  assertEquals(0,SleepyTask.activeTasks.get());
}
