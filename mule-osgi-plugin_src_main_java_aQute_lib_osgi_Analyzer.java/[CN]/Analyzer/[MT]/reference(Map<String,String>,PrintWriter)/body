{
  Collection<String> dynamic=split(info.get(COMPONENT_DYNAMIC));
  Collection<String> optional=split(info.get(COMPONENT_OPTIONAL));
  Collection<String> multiple=split(info.get(COMPONENT_MULTIPLE));
  for (Iterator<Map.Entry<String,String>> r=info.entrySet().iterator(); r.hasNext(); ) {
    Map.Entry<String,String> ref=r.next();
    String referenceName=(String)ref.getKey();
    String target=null;
    String interfaceName=(String)ref.getValue();
    if (interfaceName == null || interfaceName.length() == 0) {
      error("Invalid Interface Name for references in Service Component: " + referenceName + "="+ interfaceName);
    }
    char c=interfaceName.charAt(interfaceName.length() - 1);
    if ("?+*~".indexOf(c) >= 0) {
      if (c == '?' || c == '*' || c == '~')       optional.add(referenceName);
      if (c == '+' || c == '*')       multiple.add(referenceName);
      if (c == '+' || c == '*' || c == '?')       dynamic.add(referenceName);
      interfaceName=interfaceName.substring(0,interfaceName.length() - 1);
    }
    if (referenceName.endsWith(":")) {
      if (!SET_COMPONENT_DIRECTIVES.contains(referenceName))       error("Unrecognized directive in Service-Component header: " + referenceName);
      continue;
    }
    Matcher m=REFERENCE.matcher(interfaceName);
    if (m.matches()) {
      interfaceName=m.group(1);
      target=m.group(2);
    }
    if (!checkClass(interfaceName))     error("Component definition refers to a class that is neither imported nor contained: " + interfaceName);
    pw.print("  <reference name='" + referenceName + "' interface='"+ interfaceName+ "'");
    String cardinality=optional.contains(referenceName) ? "0" : "1";
    cardinality+="..";
    cardinality+=multiple.contains(referenceName) ? "n" : "1";
    if (!cardinality.equals("1..1"))     pw.print(" cardinality='" + cardinality + "'");
    if (Character.isLowerCase(referenceName.charAt(0))) {
      String z=referenceName.substring(0,1).toUpperCase() + referenceName.substring(1);
      pw.print(" bind='set" + z + "'");
      pw.print(" unbind='unset" + z + "'");
    }
    if (dynamic.contains(referenceName)) {
      pw.print(" policy='dynamic'");
    }
    if (target != null) {
      Filter filter=new Filter(target);
      if (filter.verify() == null)       pw.print(" target='" + filter.toString() + "'");
 else       error("Target for " + referenceName + " is not a correct filter: "+ target+ " "+ filter.verify());
    }
    pw.println("/>");
  }
}
