{
  for (  String packageName : imports.keySet()) {
    setProperty(CURRENT_PACKAGE,packageName);
    try {
      Map<String,String> importAttributes=imports.get(packageName);
      Map<String,String> exporterAttributes=classpathExports.get(packageName);
      if (exporterAttributes == null)       exporterAttributes=exports.get(packageName);
      if (exporterAttributes != null) {
        augmentVersion(importAttributes,exporterAttributes);
        augmentMandatory(importAttributes,exporterAttributes);
        if (exporterAttributes.containsKey(IMPORT_DIRECTIVE))         importAttributes.put(IMPORT_DIRECTIVE,exporterAttributes.get(IMPORT_DIRECTIVE));
      }
      for (      String key : importAttributes.keySet()) {
        String value=importAttributes.get(key);
        if (value.indexOf('$') >= 0) {
          value=getReplacer().process(value);
          importAttributes.put(key,value);
        }
      }
      String remove=importAttributes.remove(REMOVE_ATTRIBUTE_DIRECTIVE);
      Instruction removeInstr=null;
      if (remove != null)       removeInstr=Instruction.getPattern(remove);
      for (Iterator<Map.Entry<String,String>> i=importAttributes.entrySet().iterator(); i.hasNext(); ) {
        Map.Entry<String,String> entry=i.next();
        if (entry.getValue().equals("!"))         i.remove();
 else         if (removeInstr != null && removeInstr.matches((String)entry.getKey()))         i.remove();
 else {
        }
      }
    }
  finally {
      unsetProperty(CURRENT_PACKAGE);
    }
  }
}
