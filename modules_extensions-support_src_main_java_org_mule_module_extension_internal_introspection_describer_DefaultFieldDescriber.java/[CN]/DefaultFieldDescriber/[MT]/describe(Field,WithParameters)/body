{
  Optional optional=field.getAnnotation(Optional.class);
  String parameterName=MuleExtensionAnnotationParser.getAliasName(field);
  ParameterDescriptor parameterDescriptor;
  DataType dataType=IntrospectionUtils.getFieldDataType(field);
  if (optional == null) {
    parameterDescriptor=with.requiredParameter(parameterName);
  }
 else {
    parameterDescriptor=with.optionalParameter(parameterName).defaultingTo(getDefaultValue(optional));
  }
  parameterDescriptor.ofType(dataType);
  parameterDescriptor.withExpressionSupport(getExpressionSupport(field));
  parameterDescriptor.withModelProperty(DeclaringMemberModelProperty.KEY,new DeclaringMemberModelProperty(field));
  parseDisplayAnnotations(field,parameterDescriptor);
  return parameterDescriptor;
}
