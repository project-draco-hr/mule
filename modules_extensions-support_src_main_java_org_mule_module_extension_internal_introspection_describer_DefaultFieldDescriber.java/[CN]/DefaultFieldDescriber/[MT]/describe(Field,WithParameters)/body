{
  Optional optional=field.getAnnotation(Optional.class);
  String parameterName=MuleExtensionAnnotationParser.getAliasName(field);
  ParameterDescriptor parameterDescriptor;
  MetadataType dataType=IntrospectionUtils.getFieldMetadataType(field,typeLoader);
  if (optional == null) {
    parameterDescriptor=with.requiredParameter(parameterName);
  }
 else {
    parameterDescriptor=with.optionalParameter(parameterName).defaultingTo(getDefaultValue(optional));
  }
  parameterDescriptor.ofType(dataType);
  parameterDescriptor.withExpressionSupport(IntrospectionUtils.getExpressionSupport(field));
  parameterDescriptor.withModelProperty(DeclaringMemberModelProperty.KEY,new DeclaringMemberModelProperty(field));
  DisplayModelProperty displayModelProperty=parseDisplayAnnotations(field,field.getName());
  if (displayModelProperty != null) {
    parameterDescriptor.withModelProperty(DisplayModelProperty.KEY,displayModelProperty);
  }
  return parameterDescriptor;
}
