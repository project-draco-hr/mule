{
  OASISCatalogManager catalogs=OASISCatalogManager.getCatalogManager(bus);
  Collection<List<?>> imports=CastUtils.cast((Collection<?>)def.getImports().values());
  for (  List<?> lst : imports) {
    List<Import> impLst=CastUtils.cast(lst);
    for (    Import imp : impLst) {
      String start=imp.getLocationURI();
      String decodedStart=null;
      try {
        decodedStart=URLDecoder.decode(start,"utf-8");
      }
 catch (      UnsupportedEncodingException e) {
        throw new WSDLQueryException(new org.apache.cxf.common.i18n.Message("COULD_NOT_PROVIDE_WSDL",LOG,start),e);
      }
      String resolvedSchemaLocation=resolveWithCatalogs(catalogs,start,base);
      if (resolvedSchemaLocation == null) {
        try {
          new URL(start);
        }
 catch (        MalformedURLException e) {
          if (done.put(decodedStart,imp.getDefinition()) == null) {
            updateDefinition(imp.getDefinition(),done,doneSchemas,base,ei);
          }
        }
      }
 else {
        if (done.put(decodedStart,imp.getDefinition()) == null) {
          done.put(resolvedSchemaLocation,imp.getDefinition());
          updateDefinition(imp.getDefinition(),done,doneSchemas,base,ei);
        }
      }
    }
  }
  Types types=def.getTypes();
  if (types != null) {
    for (    ExtensibilityElement el : CastUtils.cast(types.getExtensibilityElements(),ExtensibilityElement.class)) {
      if (el instanceof Schema) {
        Schema see=(Schema)el;
        updateSchemaImports(see,doneSchemas,base);
      }
    }
  }
}
