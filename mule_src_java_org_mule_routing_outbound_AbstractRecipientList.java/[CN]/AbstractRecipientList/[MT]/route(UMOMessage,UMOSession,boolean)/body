{
  List list=getRecipients(message);
  List results=new ArrayList();
  try {
    message.setCorrelationId(message.getUniqueId());
    message.setCorrelationGroupSize(list.size());
    logger.debug("set correlationId to: " + message.getCorrelationId());
  }
 catch (  UniqueIdNotSupportedException e) {
    throw new RoutingException("Cannot use recipientList router with transports that do not support a unique id",e,message);
  }
  UMOMessage result=null;
  UMOEndpoint endpoint;
  for (Iterator iterator=list.iterator(); iterator.hasNext(); ) {
    String recipient=(String)iterator.next();
    endpoint=getRecipientEndpoint(message,recipient);
    try {
      if (synchronous) {
        result=send(session,message,endpoint);
        if (result != null) {
          results.add(result.getPayload());
        }
 else {
          logger.debug("No result was returned for sync call to: " + endpoint.getEndpointURI());
        }
      }
 else {
        dispatch(session,message,endpoint);
      }
    }
 catch (    UMOException e) {
      throw new CouldNotRouteOutboundMessageException(e.getMessage(),e,message);
    }
  }
  if (results != null && results.size() == 1) {
    return new MuleMessage(results.get(0),((UMOMessage)result).getProperties());
  }
 else   if (results.size() == 0) {
    return null;
  }
 else {
    return new MuleMessage(results,(result == null ? null : result.getProperties()));
  }
}
