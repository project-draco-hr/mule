{
  ResolverSet resolverSet=new ResolverSet();
  for (  ParameterModel parameterModel : parameterModels) {
    List<MessageProcessor> nestedProcessors=nestedOperations.get(parameterModel.getName());
    if (!CollectionUtils.isEmpty(nestedProcessors)) {
      addNestedProcessorResolver(resolverSet,parameterModel,nestedProcessors);
    }
 else {
      ValueResolver<?> resolver=getValueResolver(element,parameterModel);
      if (resolver.isDynamic() && parameterModel.getExpressionSupport() == ExpressionSupport.NOT_SUPPORTED) {
        throw new ConfigurationException(createStaticMessage(String.format("An expression value was given for parameter '%s' but it doesn't support expressions",parameterModel.getName())));
      }
      if (!resolver.isDynamic() && parameterModel.getExpressionSupport() == ExpressionSupport.REQUIRED && parameterModel.isRequired()) {
        throw new ConfigurationException(createStaticMessage(String.format("A fixed value was given for parameter '%s' but it only supports expressions",parameterModel.getName())));
      }
      resolverSet.add(parameterModel,resolver);
    }
  }
  return resolverSet;
}
