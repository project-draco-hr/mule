{
  if (isExpression(value,parser)) {
    return new TypeSafeExpressionValueResolver((String)value,expectedDataType);
  }
  if (value != null) {
    final ValueHolder<ValueResolver> resolverValueHolder=new ValueHolder<>();
    DataQualifierVisitor visitor=new SimpleTypeDataQualifierVisitor(){
      @Override protected void onSimpleType(){
        if (conversionService.canConvert(value.getClass(),expectedDataType.getRawType())) {
          resolverValueHolder.set(new StaticValueResolver(conversionService.convert(value,expectedDataType.getRawType())));
        }
 else {
          defaultOperation();
        }
      }
      @Override protected void defaultOperation(){
        resolverValueHolder.set(new RegistryLookupValueResolver(value.toString()));
      }
    }
;
    expectedDataType.getQualifier().accept(visitor);
    return resolverValueHolder.get();
  }
  return null;
}
