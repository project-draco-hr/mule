{
  MuleMessage returnMessage=null;
  try {
    MuleMessage message=createMuleMessage(packet,endpoint.getEncoding());
    final SocketAddress clientAddress=socket.getRemoteSocketAddress();
    if (clientAddress != null) {
      message.setProperty(MuleProperties.MULE_REMOTE_CLIENT_ADDRESS,clientAddress,PropertyScope.INBOUND);
    }
    MuleEvent event=routeMessage(message);
    returnMessage=event == null ? null : event.getMessage();
    if (returnMessage != null) {
      byte[] data;
      if (responseTransformers != null) {
        returnMessage.applyTransformers(event,responseTransformers);
        Object response=returnMessage.getPayload();
        if (response instanceof byte[]) {
          data=(byte[])response;
        }
 else {
          data=response.toString().getBytes();
        }
      }
 else {
        data=returnMessage.getPayloadAsBytes();
      }
      DatagramPacket result=new DatagramPacket(data,data.length,packet.getAddress(),packet.getPort());
      socket.send(result);
    }
  }
 catch (  Exception e) {
    if (!disposing.get()) {
      getConnector().getMuleContext().getExceptionListener().handleException(e);
    }
  }
 finally {
    dispose();
  }
}
