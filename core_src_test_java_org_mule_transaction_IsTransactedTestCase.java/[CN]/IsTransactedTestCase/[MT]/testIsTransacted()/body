{
  MuleTransactionConfig cfg=new MuleTransactionConfig();
  TestTransaction testTx=new TestTransaction(null);
  cfg.setAction(TransactionConfig.ACTION_NEVER);
  assertFalse(cfg.isTransacted());
  cfg.setAction(TransactionConfig.ACTION_NEVER);
  assertFalse(cfg.isTransacted());
  cfg.setFactory(new TransactedFactory());
  cfg.setAction(TransactionConfig.ACTION_ALWAYS_BEGIN);
  assertTrue(cfg.isTransacted());
  cfg.setAction(TransactionConfig.ACTION_ALWAYS_JOIN);
  assertTrue(cfg.isTransacted());
  cfg.setAction(TransactionConfig.ACTION_BEGIN_OR_JOIN);
  assertTrue(cfg.isTransacted());
  cfg.setAction(TransactionConfig.ACTION_JOIN_IF_POSSIBLE);
  assertFalse(cfg.isTransacted());
  TransactionCoordination.getInstance().bindTransaction(testTx);
  assertTrue(cfg.isTransacted());
  TransactionCoordination.getInstance().unbindTransaction(testTx);
  cfg.setAction(TransactionConfig.ACTION_INDIFFERENT);
  assertFalse(cfg.isTransacted());
  TransactionCoordination.getInstance().bindTransaction(testTx);
  assertTrue(cfg.isTransacted());
  TransactionCoordination.getInstance().unbindTransaction(testTx);
  cfg.setFactory(new NonTransactedFactory());
  cfg.setAction(TransactionConfig.ACTION_ALWAYS_BEGIN);
  assertFalse(cfg.isTransacted());
  cfg.setAction(TransactionConfig.ACTION_ALWAYS_JOIN);
  assertFalse(cfg.isTransacted());
  cfg.setAction(TransactionConfig.ACTION_BEGIN_OR_JOIN);
  assertFalse(cfg.isTransacted());
  cfg.setAction(TransactionConfig.ACTION_JOIN_IF_POSSIBLE);
  assertFalse(cfg.isTransacted());
  TransactionCoordination.getInstance().bindTransaction(testTx);
  assertFalse(cfg.isTransacted());
  TransactionCoordination.getInstance().unbindTransaction(testTx);
  cfg.setAction(TransactionConfig.ACTION_INDIFFERENT);
  assertFalse(cfg.isTransacted());
  TransactionCoordination.getInstance().bindTransaction(testTx);
  assertFalse(cfg.isTransacted());
  TransactionCoordination.getInstance().unbindTransaction(testTx);
}
