{
  if (configurationModel.getExtensionModel().getConnectionProviders().isEmpty()) {
    builder.addConstructorArgValue(new StaticValueResolver<>(null));
    return;
  }
  String providerReference=getConnectionProviderReference(element);
  if (!StringUtils.isEmpty(providerReference)) {
    builder.addConstructorArgReference(providerReference);
    return;
  }
  for (  Element childElement : DomUtils.getChildElements(element)) {
    if (childElement.getSchemaTypeInfo().isDerivedFrom(MULE_EXTENSION_NAMESPACE,MULE_EXTENSION_CONNECTION_PROVIDER_TYPE.getLocalPart(),DERIVATION_EXTENSION)) {
      NamespaceHandler namespaceHandler=parserContext.getReaderContext().getNamespaceHandlerResolver().resolve(parserContext.getDelegate().getNamespaceURI(element));
      if (!(namespaceHandler instanceof ExtensionNamespaceHandler)) {
        continue;
      }
      BeanDefinitionParser providerParser=((ExtensionNamespaceHandler)namespaceHandler).getParser(parserContext.getDelegate().getLocalName(childElement));
      if (providerParser == null) {
        continue;
      }
      builder.addConstructorArgValue(providerParser.parse(childElement,parserContext));
      return;
    }
  }
  builder.addConstructorArgValue(new ImplicitConnectionProviderValueResolver(configName,configurationModel.getExtensionModel()));
}
