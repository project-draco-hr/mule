{
  Throwable th=ExceptionHelper.getRootException(jmsException);
  if (th == null)   th=jmsException;
  String errMsg=th.getMessage();
  if (errMsg.contains("Channel is full :")) {
    if (logger.isWarnEnabled()) {
      StringBuffer msg=new StringBuffer("MuleMQJmsConnector.onException() received exception: ");
      msg.append(th.getMessage());
      msg.append("Older Messages will be discarded by MULE MQ.To prevent message loss use transacted outbound-endpoint");
      msg.append("Refer to 'Queue Capacity' at http://www.mulesoft.org/display/MQ/Configuring+Mule+MQ#ConfiguringMuleMQ-ConfiguringQueues");
      logger.warn(msg.toString(),th);
    }
  }
 else   if (this.isInCluster() && errMsg.contains("Disconnected from :")) {
    StringBuffer msg=new StringBuffer("MuleMQJmsConnector.onException() received exception: ");
    msg.append(th.getMessage());
    msg.append("If using Mule MQ in a cluster Mule ESB will reconnect automatically in a few seconds");
    logger.warn(msg.toString(),th);
  }
 else   if (this.isInCluster() && errMsg.contains("Reconnected to :")) {
    StringBuffer msg=new StringBuffer("MuleMQJmsConnector.onException() received exception: ");
    msg.append(th.getMessage());
    msg.append("If using Mule MQ in a cluster Mule ESB will reconnect automatically in a few seconds");
    logger.warn(msg.toString(),th);
  }
 else {
    super.onException(jmsException);
  }
}
