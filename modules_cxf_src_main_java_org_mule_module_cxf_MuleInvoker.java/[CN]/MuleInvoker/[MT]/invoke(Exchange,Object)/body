{
  MuleEvent event=(MuleEvent)exchange.get(CxfConstants.MULE_EVENT);
  MuleEvent responseEvent=null;
  try {
    MuleMessage reqMsg=event.getMessage();
    reqMsg.setPayload(extractPayload(exchange.getInMessage()));
    BindingOperationInfo bop=exchange.get(BindingOperationInfo.class);
    Service svc=exchange.get(Service.class);
    if (!cxfMmessageProcessor.isProxy()) {
      MethodDispatcher md=(MethodDispatcher)svc.get(MethodDispatcher.class.getName());
      Method m=md.getMethod(bop);
      if (targetClass != null) {
        m=matchMethod(m,targetClass);
      }
      reqMsg.setProperty(MuleProperties.MULE_METHOD_PROPERTY,m,PropertyScope.INVOCATION);
    }
    if (bop != null) {
      reqMsg.setProperty(CxfConstants.INBOUND_OPERATION,bop.getOperationInfo().getName(),PropertyScope.INVOCATION);
      reqMsg.setProperty(CxfConstants.INBOUND_SERVICE,svc.getName(),PropertyScope.INVOCATION);
    }
    responseEvent=cxfMmessageProcessor.processNext(event);
  }
 catch (  MuleException e) {
    exchange.put(CxfConstants.MULE_EVENT,event);
    throw new Fault(e);
  }
catch (  RuntimeException e) {
    exchange.put(CxfConstants.MULE_EVENT,event);
    throw new Fault(e);
  }
  if (!event.getEndpoint().getExchangePattern().hasResponse()) {
    responseEvent=null;
  }
  if (responseEvent != null) {
    exchange.put(CxfConstants.MULE_EVENT,responseEvent);
    MuleMessage resMessage=responseEvent.getMessage();
    if (resMessage.getExceptionPayload() != null) {
      Throwable cause=resMessage.getExceptionPayload().getException();
      if (cause instanceof ComponentException) {
        cause=cause.getCause();
      }
      exchange.getInMessage().put(FaultMode.class,FaultMode.UNCHECKED_APPLICATION_FAULT);
      if (cause instanceof Fault) {
        throw (Fault)cause;
      }
      throw new Fault(cause);
    }
 else     if (resMessage.getPayload() instanceof NullPayload) {
      return new MessageContentsList((Object)null);
    }
 else     if (cxfMmessageProcessor.isProxy()) {
      resMessage.getPayload();
      return new Object[]{resMessage};
    }
 else {
      return new Object[]{resMessage.getPayload()};
    }
  }
 else {
    exchange.getInMessage().getInterceptorChain().abort();
    if (exchange.getOutMessage() != null) {
      exchange.getOutMessage().getInterceptorChain().abort();
    }
    exchange.put(CxfConstants.MULE_EVENT,null);
    return null;
  }
}
