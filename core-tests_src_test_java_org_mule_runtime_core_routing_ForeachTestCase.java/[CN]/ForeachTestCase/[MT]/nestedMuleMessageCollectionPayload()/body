{
  List<MuleMessage> parentList=new ArrayList<>();
  List<MuleMessage> list1=new ArrayList<>();
  List<MuleMessage> list2=new ArrayList<>();
  list1.add(MuleMessage.builder().payload("a1").build());
  list1.add(MuleMessage.builder().payload("a2").build());
  list1.add(MuleMessage.builder().payload("a3").build());
  list2.add(MuleMessage.builder().payload("b1").build());
  list2.add(MuleMessage.builder().payload("b2").build());
  list2.add(MuleMessage.builder().payload("c1").build());
  parentList.add(MuleMessage.builder().payload(list1).build());
  parentList.add(MuleMessage.builder().payload(list2).build());
  MuleMessage parentCollection=MuleMessage.builder().payload(parentList).build();
  nestedForeach.process(getTestEvent(parentCollection));
  assertNestedProcessedMessages();
}
