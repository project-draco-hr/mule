{
  List<InternalMessage> parentList=new ArrayList<>();
  List<InternalMessage> list1=new ArrayList<>();
  List<InternalMessage> list2=new ArrayList<>();
  list1.add(InternalMessage.builder().payload("a1").build());
  list1.add(InternalMessage.builder().payload("a2").build());
  list1.add(InternalMessage.builder().payload("a3").build());
  list2.add(InternalMessage.builder().payload("b1").build());
  list2.add(InternalMessage.builder().payload("b2").build());
  list2.add(InternalMessage.builder().payload("c1").build());
  parentList.add(InternalMessage.builder().payload(list1).build());
  parentList.add(InternalMessage.builder().payload(list2).build());
  InternalMessage parentCollection=InternalMessage.builder().payload(parentList).build();
  nestedForeach.process(eventBuilder().message(parentCollection).build());
  assertNestedProcessedMessages();
}
