{
  MuleMessage message=event.getMessage();
  MuleEvent result;
  boolean matchfound=false;
  for (Iterator<MatchableMessageProcessor> iterator=matchableRoutes.iterator(); iterator.hasNext(); ) {
    MatchableMessageProcessor outboundRouter=iterator.next();
    final MuleEvent eventToRoute;
    boolean copyEvent=false;
    if (iterator.hasNext()) {
      if (isMatchAll()) {
        copyEvent=true;
      }
 else       if (outboundRouter instanceof TransformingMatchable) {
        copyEvent=((TransformingMatchable)outboundRouter).isTransformBeforeMatch();
      }
    }
    if (copyEvent) {
      if (isConsumable(message.getPayload().getClass())) {
        throw new MessagingException(CoreMessages.cannotCopyStreamPayload(message.getPayload().getClass().getName()),event,this);
      }
      eventToRoute=OptimizedRequestContext.criticalSetEvent(event);
    }
 else {
      eventToRoute=event;
    }
    if (outboundRouter.isMatch(eventToRoute.getMessage())) {
      matchfound=true;
      result=outboundRouter.process(event);
      if (!isMatchAll()) {
        return result;
      }
    }
  }
  if (!matchfound && defaultRoute != null) {
    if (logger.isDebugEnabled()) {
      logger.debug("Message did not match any routers on: " + event.getFlowConstruct().getName() + " invoking catch all strategy");
    }
    return processDefaultRoute(event);
  }
 else   if (!matchfound) {
    logger.warn("Message did not match any routers on: " + event.getFlowConstruct().getName() + " and there is no catch all strategy configured on this router.  Disposing message "+ message);
  }
  return event;
}
