{
  checkNotNull(rootArtifact,"rootArtifact has to be set");
  checkNotNull(classPathUrlProvider,"classPathUrlProvider has to be set");
  checkNotNull(classPathClassifier,"classPathClassifier has to be set");
  ClassPathClassifierContext context;
  try {
    context=new ClassPathClassifierContext(rootArtifact,pluginResourcesFolder,classPathUrlProvider.getURLs(),excludedArtifacts,extraBootPackages,providedExclusions,providedInclusions,testExclusions,testInclusions,pluginCoordinates,sharedPluginLibCoordinates,exportPluginClasses,extensionMetadataGenerationEnabled);
  }
 catch (  IOException e) {
    throw new RuntimeException("Error while creating the classification context",e);
  }
  ArtifactsUrlClassification artifactsUrlClassification=classPathClassifier.classify(context);
  return isolatedClassLoaderFactory.createArtifactClassLoader(context.getExtraBootPackages(),artifactsUrlClassification);
}
