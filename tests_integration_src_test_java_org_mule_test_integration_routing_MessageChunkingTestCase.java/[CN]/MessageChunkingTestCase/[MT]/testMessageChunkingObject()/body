{
  final AtomicInteger messagePartsCount=new AtomicInteger(0);
  final Latch chunkingReceiverLatch=new Latch();
  final TestObject testObject=new TestObject("Test String",true,99);
  final int parts=(int)Math.ceil((SerializationUtils.serialize(testObject).length / (double)2));
  MuleManager.getInstance().registerListener(new FunctionalTestNotificationListener(){
    public void onNotification(    UMOServerNotification notification){
      assertEquals("ChunkingReceiver",notification.getResourceIdentifier());
      Object reply=((FunctionalTestNotification)notification).getEventContext().getMessage().getPayload();
      assertTrue(reply instanceof TestObject);
      TestObject replyTestObject=(TestObject)reply;
      assertEquals(testObject.b,replyTestObject.b);
      assertEquals(testObject.i,replyTestObject.i);
      assertEquals(testObject.s,replyTestObject.s);
      chunkingReceiverLatch.countDown();
    }
  }
,"ChunkingReceiver");
  MuleManager.getInstance().registerListener(new MessageNotificationListener(){
    public void onNotification(    UMOServerNotification notification){
      if (notification.getAction() == MessageNotification.MESSAGE_RECEIVED) {
        messagePartsCount.getAndIncrement();
      }
      assertEquals("ChunkingReceiver",notification.getResourceIdentifier());
    }
  }
,"ChunkingReceiver");
  MuleClient client=new MuleClient();
  client.dispatch("vm://inbound.channel",testObject,null);
  assertTrue(chunkingReceiverLatch.await(20L,TimeUnit.SECONDS));
  assertEquals(parts,messagePartsCount.get());
}
