{
  MuleEvent responseEvent=flowRunner("configRetriever").withPayload("").run();
  assertThat(responseEvent.getMessage().getPayload(),instanceOf(SubTypesMappingConnector.class));
  SubTypesMappingConnector payload=(SubTypesMappingConnector)responseEvent.getMessage().getPayload();
  assertThat(payload.getAbstractShape(),instanceOf(Square.class));
  assertThat(payload.getAbstractShape().getArea(),is(1));
  assertThat(payload.getExplicitSquare(),instanceOf(Square.class));
  assertThat(payload.getExplicitSquare().getArea(),is(4));
  assertThat(payload.getDoorInterface(),instanceOf(CarDoor.class));
  assertThat(payload.getFinalPojo(),instanceOf(FinalPojo.class));
  assertThat(payload.getRicin(),instanceOf(Ricin.class));
  assertThat(payload.getTriangle(),instanceOf(Triangle.class));
  assertThat(payload.getPojoListOne(),is(notNullValue()));
  assertThat(payload.getPojoListOne(),hasSize(1));
  assertThat(payload.getPojoListOne().get(0),instanceOf(PojoForList.class));
  assertThat(payload.getPojoListOne().get(0).getId(),is("inner"));
  assertThat(payload.getWeaponList(),is(notNullValue()));
  assertThat(payload.getWeaponList(),hasSize(4));
  assertRevolver(payload.getWeaponList().get(0),6);
  assertRicin(payload.getWeaponList().get(1),10L,"Krazy-8");
  assertRicin(payload.getWeaponList().get(2),20L,"Lidia");
  assertRevolver(payload.getWeaponList().get(3),0);
  assertThat(payload.getWeaponMap(),is(notNullValue()));
  assertThat(payload.getWeaponMap().entrySet(),hasSize(4));
  assertRicin(payload.getWeaponMap().get("ricinChild"),20L,"Lidia");
  assertRevolver(payload.getWeaponMap().get("revolverChild"),1);
  assertRevolver(payload.getWeaponMap().get("revolverRef"),6);
  assertRevolver(payload.getWeaponMap().get("revolverMEL"),0);
}
