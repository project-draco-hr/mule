{
  MuleEvent responseEvent=flowRunner("configRetriever").withPayload("").run();
  assertThat(responseEvent.getMessage().getPayload(),instanceOf(SubTypesMappingConnector.class));
  SubTypesMappingConnector payload=(SubTypesMappingConnector)responseEvent.getMessage().getPayload();
  assertThat(payload.getAbstractShape(),instanceOf(Square.class));
  assertThat(payload.getAbstractShape().getArea(),is(1));
  assertThat(payload.getExplicitSquare(),instanceOf(Square.class));
  assertThat(payload.getExplicitSquare().getArea(),is(4));
  assertThat(payload.getDoorInterface(),instanceOf(CarDoor.class));
  assertThat(payload.getFinalPojo(),instanceOf(FinalPojo.class));
  assertThat(payload.getRicin(),instanceOf(Ricin.class));
  assertThat(payload.getTriangle(),instanceOf(Triangle.class));
  assertThat(payload.getPojoListOne(),is(notNullValue()));
  assertThat(payload.getPojoListOne(),hasSize(1));
  assertThat(payload.getPojoListOne().get(0),instanceOf(PojoForList.class));
  assertThat(payload.getPojoListOne().get(0).getId(),is("inner"));
  assertThat(payload.getWeaponList(),is(notNullValue()));
  assertThat(payload.getWeaponList(),hasSize(4));
  assertThat(payload.getWeaponList().get(0),instanceOf(Revolver.class));
  assertThat(((Revolver)payload.getWeaponList().get(0)).getBullets(),is(6));
  assertThat(payload.getWeaponList().get(1),instanceOf(Ricin.class));
  assertThat(((Ricin)payload.getWeaponList().get(1)).getMicrogramsPerKilo(),is(10L));
  assertThat(((Ricin)payload.getWeaponList().get(1)).getDestination(),is(notNullValue()));
  assertThat(((Ricin)payload.getWeaponList().get(1)).getDestination().getVictim(),is("Krazy-8"));
  assertThat(payload.getWeaponList().get(1),instanceOf(Ricin.class));
  assertThat(((Ricin)payload.getWeaponList().get(2)).getMicrogramsPerKilo(),is(20L));
  assertThat(((Ricin)payload.getWeaponList().get(2)).getDestination(),is(notNullValue()));
  assertThat(((Ricin)payload.getWeaponList().get(2)).getDestination().getVictim(),is("Lidia"));
  assertThat(payload.getWeaponList().get(3),instanceOf(Revolver.class));
  assertThat(((Revolver)payload.getWeaponList().get(3)).getBullets(),is(0));
}
