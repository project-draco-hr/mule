{
  final ClassLoaderLookupStrategy lookupStrategy=lookupPolicy.getLookupStrategy(name);
  Class<?> result;
  final List<ClassNotFoundException> exceptions=new ArrayList<>(classLoaders.size() + 1);
  if (lookupStrategy == PARENT_ONLY) {
    result=getParent().loadClass(name);
  }
 else   if (lookupStrategy == PARENT_FIRST) {
    try {
      result=getParent().loadClass(name);
    }
 catch (    ClassNotFoundException e) {
      exceptions.add(e);
      result=doLoadClass(name,exceptions);
    }
  }
 else {
    result=doLoadClass(name,exceptions);
    if (result == null) {
      result=getParent().loadClass(name);
    }
  }
  if (result != null) {
    if (resolve) {
      resolveClass(result);
    }
    return result;
  }
  throw new CompositeClassNotFoundException(name,lookupStrategy,exceptions);
}
