{
  UMOConnector connector;
  String scheme=url.getSchemeMetaInfo();
  TransportServiceDescriptor sd=(TransportServiceDescriptor)MuleManager.getInstance().lookupServiceDescriptor(ServiceDescriptorFactory.PROVIDER_SERVICE_TYPE,scheme,null);
  try {
    connector=sd.createConnector();
    if (connector != null) {
      if (connector instanceof AbstractConnector) {
        ((AbstractConnector)connector).initialiseFromUrl(url);
      }
    }
 else {
      throw new TransportFactoryException(new Message(Messages.X_NOT_SET_IN_SERVICE_X,"Connector",scheme));
    }
  }
 catch (  TransportFactoryException e) {
    throw e;
  }
catch (  Exception e) {
    throw new TransportFactoryException(new Message(Messages.FAILED_TO_CREATE_X_WITH_X,"Endpoint",url),e);
  }
  connector.setName(ObjectNameHelper.getConnectorName(connector));
  Map props=new HashMap();
  PropertiesUtils.getPropertiesWithPrefix(MuleManager.getInstance().getProperties(),connector.getProtocol().toLowerCase(),props);
  if (props.size() > 0) {
    props=PropertiesUtils.removeNamespaces(props);
    BeanUtils.populateWithoutFail(connector,props,true);
  }
  return connector;
}
