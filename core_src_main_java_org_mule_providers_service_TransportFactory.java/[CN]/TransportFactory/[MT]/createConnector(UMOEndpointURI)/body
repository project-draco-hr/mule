{
  try {
    UMOConnector connector;
    String scheme=url.getSchemeMetaInfo();
    TransportServiceDescriptor sd=(TransportServiceDescriptor)RegistryContext.getRegistry().lookupServiceDescriptor(ServiceDescriptorFactory.PROVIDER_SERVICE_TYPE,scheme,null);
    if (sd == null) {
      throw new ServiceException(Message.createStaticMessage("No service descriptor found for transport: " + scheme + ".  This transport does not appear to be installed."));
    }
    connector=sd.createConnector();
    if (connector != null) {
      if (connector instanceof AbstractConnector) {
        ((AbstractConnector)connector).initialiseFromUrl(url);
      }
    }
 else {
      throw new TransportFactoryException(new Message(Messages.X_NOT_SET_IN_SERVICE_X,"Connector",scheme));
    }
    connector.setName(ObjectNameHelper.getConnectorName(connector));
    Map props=new HashMap();
    PropertiesUtils.getPropertiesWithPrefix(RegistryContext.getRegistry().lookupProperties(),connector.getProtocol().toLowerCase(),props);
    if (props.size() > 0) {
      props=PropertiesUtils.removeNamespaces(props);
      BeanUtils.populateWithoutFail(connector,props,true);
    }
    RegistryContext.getRegistry().registerConnector(connector);
    return connector;
  }
 catch (  Exception e) {
    throw new TransportFactoryException(new Message(Messages.FAILED_TO_CREATE_X_WITH_X,"Endpoint",url),e);
  }
}
