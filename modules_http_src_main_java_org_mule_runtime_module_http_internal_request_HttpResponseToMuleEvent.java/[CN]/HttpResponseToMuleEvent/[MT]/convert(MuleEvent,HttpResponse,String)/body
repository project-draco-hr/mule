{
  MuleEvent.Builder eventBuilder=MuleEvent.builder(muleEvent);
  String responseContentType=response.getHeaderValueIgnoreCase(CONTENT_TYPE);
  DataType dataType=muleEvent.getMessage().getDataType();
  if (StringUtils.isEmpty(responseContentType) && !MediaType.ANY.matches(dataType.getMediaType())) {
    responseContentType=dataType.getMediaType().toRfcString();
  }
  InputStream responseInputStream=((InputStreamHttpEntity)response.getEntity()).getInputStream();
  Charset encoding=getMediaType(responseContentType,getDefaultEncoding(muleContext)).getCharset().get();
  Map<String,Serializable> inboundProperties=getInboundProperties(response);
  Object payload=responseInputStream;
  if (responseContentType != null && parseResponse.resolveBooleanValue(muleEvent)) {
    if (responseContentType.startsWith(MULTI_PART_PREFIX)) {
      try {
        payload=multiPartPayloadForAttachments(responseContentType,responseInputStream);
      }
 catch (      IOException e) {
        throw new MessagingException(muleEvent,e);
      }
    }
 else     if (responseContentType.startsWith(APPLICATION_X_WWW_FORM_URLENCODED.toRfcString())) {
      payload=HttpParser.decodeString(IOUtils.toString(responseInputStream),encoding);
    }
  }
  final Builder builder=MuleMessage.builder().payload(muleEvent.getMessage().getPayload()).inboundProperties(inboundProperties);
  if (StringUtils.isEmpty(responseContentType)) {
    builder.mediaType(muleEvent.getMessage().getDataType().getMediaType());
  }
 else {
    builder.mediaType(MediaType.parse(responseContentType));
  }
  eventBuilder.message(builder.build());
  setResponsePayload(payload,eventBuilder.build(),eventBuilder);
  if (requester.getConfig().isEnableCookies()) {
    processCookies(response,uri);
  }
  return eventBuilder.build();
}
