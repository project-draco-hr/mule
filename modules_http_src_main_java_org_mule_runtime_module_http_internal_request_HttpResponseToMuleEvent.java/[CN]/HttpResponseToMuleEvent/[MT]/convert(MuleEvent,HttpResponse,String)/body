{
  String responseContentType=response.getHeaderValueIgnoreCase(CONTENT_TYPE);
  DataType<?> dataType=muleEvent.getMessage().getDataType();
  if (StringUtils.isEmpty(responseContentType) && !MediaType.ANY.matches(dataType.getMediaType())) {
    responseContentType=dataType.getMediaType().toString();
  }
  InputStream responseInputStream=((InputStreamHttpEntity)response.getEntity()).getInputStream();
  Charset encoding=buildContentTypeDataType(responseContentType,getDefaultEncoding(muleContext)).getMediaType().getCharset().get();
  Map<String,Serializable> inboundProperties=getInboundProperties(response);
  Map<String,DataHandler> inboundAttachments=null;
  Object payload=responseInputStream;
  if (responseContentType != null && parseResponse.resolveBooleanValue(muleEvent)) {
    if (responseContentType.startsWith(MULTI_PART_PREFIX)) {
      try {
        inboundAttachments=getInboundAttachments(responseInputStream,responseContentType);
        payload=NullPayload.getInstance();
      }
 catch (      IOException e) {
        throw new MessagingException(muleEvent,e);
      }
    }
 else     if (responseContentType.startsWith(APPLICATION_X_WWW_FORM_URLENCODED.toString())) {
      payload=HttpParser.decodeString(IOUtils.toString(responseInputStream),encoding);
    }
  }
  String requestMessageId=muleEvent.getMessage().getUniqueId();
  String requestMessageRootId=muleEvent.getMessage().getMessageRootId();
  DefaultMuleMessage message=new DefaultMuleMessage(muleEvent.getMessage().getPayload(),inboundProperties,null,inboundAttachments,muleEvent.getMessage().getDataType());
  message.setUniqueId(requestMessageId);
  message.setMessageRootId(requestMessageRootId);
  muleEvent.setMessage(message);
  setResponsePayload(payload,muleEvent);
  if (requester.getConfig().isEnableCookies()) {
    processCookies(response,uri);
  }
}
