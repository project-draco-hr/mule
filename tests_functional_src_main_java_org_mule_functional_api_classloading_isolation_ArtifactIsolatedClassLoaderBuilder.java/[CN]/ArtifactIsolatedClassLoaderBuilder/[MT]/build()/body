{
  checkNotNull(rootArtifactClassesFolder,"rootArtifactClassesFolder has to be set");
  checkNotNull(rootArtifactTestClassesFolder,"rootArtifactTestClassesFolder has to be set");
  checkNotNull(classPathUrlProvider,"classPathUrlProvider has to be set");
  checkNotNull(mavenDependenciesResolver,"mavenDependenciesResolver has to be set");
  checkNotNull(mavenMultiModuleArtifactMapping,"mavenMultiModuleArtifactMapping has to be set");
  ClassPathClassifierContext context;
  try {
    context=new ClassPathClassifierContext(rootArtifactClassesFolder,rootArtifactTestClassesFolder,classPathUrlProvider.getURLs(),mavenDependenciesResolver.buildDependencies(),mavenMultiModuleArtifactMapping,exclusions,extraBootPackages,extensionBasePackages,exportClasses);
  }
 catch (  IOException e) {
    throw new RuntimeException("Error while creating the classification context",e);
  }
  ArtifactUrlClassification artifactUrlClassification=classPathClassifier.classify(context);
  return isolatedClassLoaderFactory.createArtifactClassLoader(context.getExtraBootPackages(),artifactUrlClassification);
}
