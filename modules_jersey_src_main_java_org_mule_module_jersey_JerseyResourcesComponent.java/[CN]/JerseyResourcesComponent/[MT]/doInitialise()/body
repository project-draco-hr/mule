{
  super.doInitialise();
  final Set<Class<?>> resources=new HashSet<>();
  if (components == null) {
    throw new IllegalStateException("There must be at least one component in the Jersey resources.");
  }
  initializeOtherResources(exceptionMappers,resources);
  initializeOtherResources(contextResolvers,resources);
  try {
    application=createApplication(resources);
    ServerRuntime serverRuntime=ClassUtils.getFieldValue(application,"runtime",false);
    backgroundScheduler=ClassUtils.getFieldValue(serverRuntime,"backgroundScheduler",false);
  }
 catch (  Exception e) {
    throw new InitialisationException(e,this);
  }
}
