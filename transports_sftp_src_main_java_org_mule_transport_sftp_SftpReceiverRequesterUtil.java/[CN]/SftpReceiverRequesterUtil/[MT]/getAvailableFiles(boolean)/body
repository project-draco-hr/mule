{
  if (logger.isDebugEnabled()) {
    logger.debug("Checking files at endpoint " + endpoint.getEndpointURI());
  }
  SftpClient client=null;
  try {
    client=connector.createSftpClient(endpoint);
    long fileAge=connector.getFileAge();
    boolean checkFileAge=connector.getCheckFileAge();
    if (endpoint.getProperty(SftpConnector.PROPERTY_FILE_AGE) != null) {
      checkFileAge=true;
      fileAge=Long.valueOf((String)endpoint.getProperty(SftpConnector.PROPERTY_FILE_AGE));
    }
    logger.debug("fileAge : " + fileAge);
    long sizeCheckDelayMs=sftpUtil.getSizeCheckWaitTime();
    String[] files=client.listFiles();
    List<String> completedFiles=new ArrayList<String>(files.length);
    for (    String file : files) {
      if (filenameFilter != null && !filenameFilter.accept(null,file)) {
        continue;
      }
      if (checkFileAge || sizeCheckDelayMs >= 0) {
        if (!hasChanged(file,client,fileAge,sizeCheckDelayMs)) {
          completedFiles.add(file);
          if (onlyGetTheFirstOne) {
            break;
          }
        }
      }
 else {
        completedFiles.add(file);
        if (onlyGetTheFirstOne) {
          break;
        }
      }
    }
    return completedFiles.toArray(new String[completedFiles.size()]);
  }
  finally {
    if (client != null) {
      connector.releaseClient(endpoint,client);
    }
  }
}
