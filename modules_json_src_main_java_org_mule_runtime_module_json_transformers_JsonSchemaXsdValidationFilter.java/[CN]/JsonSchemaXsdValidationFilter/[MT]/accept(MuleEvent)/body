{
  String jsonString=null;
  MuleMessage msg=event.getMessage();
  try {
    if (isReturnResult()) {
      TransformerInputs transformerInputs=new TransformerInputs(null,msg.getPayload());
      Writer jsonWriter=new StringWriter();
      if (transformerInputs.getInputStream() != null) {
        jsonWriter=new StringWriter();
        IOUtils.copy(transformerInputs.getInputStream(),jsonWriter,msg.getDataType().getMediaType().getCharset().orElse(getDefaultEncoding(muleContext)));
      }
 else {
        IOUtils.copy(transformerInputs.getReader(),jsonWriter);
      }
      jsonString=jsonWriter.toString();
      msg=MuleMessage.builder(msg).payload(jsonString).build();
      event.setMessage(msg);
    }
    String xmlString=(String)jToX.transform(msg.getPayload(),msg.getDataType().getMediaType().getCharset().orElse(getDefaultEncoding(muleContext)));
    MuleMessage xmlMessage=MuleMessage.builder().payload(xmlString).build();
    boolean accepted=super.accept(new DefaultMuleEvent(event.getExecutionContext(),xmlMessage,event.getFlowConstruct()));
    if (jsonString != null) {
      msg=MuleMessage.builder(msg).payload(jsonString).build();
      event.setMessage(msg);
    }
    return accepted;
  }
 catch (  Exception ex) {
    logger.warn("Exception validating json.",ex);
    return false;
  }
}
