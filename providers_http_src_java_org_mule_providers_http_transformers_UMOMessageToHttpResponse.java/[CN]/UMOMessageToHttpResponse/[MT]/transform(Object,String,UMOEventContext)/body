{
  if (src instanceof NullPayload)   src=Utility.EMPTY_STRING;
  try {
    HttpResponse response=null;
    if (src instanceof HttpResponse) {
      response=(HttpResponse)src;
    }
 else {
      response=createResponse(src,context);
    }
    if (!response.containsHeader(HttpConstants.HEADER_CONTENT_TYPE)) {
      response.addHeader(new Header(HttpConstants.HEADER_CONTENT_TYPE,HttpConstants.DEFAULT_CONTENT_TYPE));
    }
    if (!response.containsHeader(HttpConstants.HEADER_CONTENT_LENGTH) && !response.containsHeader(HttpConstants.HEADER_TRANSFER_ENCODING)) {
      InputStream content=response.getBody();
      if (content != null) {
        long len=response.getContentLength();
        if (len < 0) {
          if (response.getHttpVersion().lessEquals(HttpVersion.HTTP_1_0)) {
            throw new IOException("Chunked encoding not supported for HTTP version " + response.getHttpVersion());
          }
          Header header=new Header(HttpConstants.HEADER_TRANSFER_ENCODING,"chunked");
          response.addHeader(header);
        }
 else {
          Header header=new Header(HttpConstants.HEADER_CONTENT_LENGTH,Long.toString(len));
          response.setHeader(header);
        }
      }
 else {
        Header header=new Header(HttpConstants.HEADER_CONTENT_LENGTH,"0");
        response.addHeader(header);
      }
    }
    if (!response.containsHeader(HttpConstants.HEADER_CONNECTION)) {
      String connHeader=context.getStringProperty(HttpConstants.HEADER_CONNECTION);
      if (connHeader != null) {
        if (connHeader.equalsIgnoreCase("keep-alive")) {
          Header header=new Header(HttpConstants.HEADER_CONNECTION,"keep-alive");
          response.addHeader(header);
          response.setKeepAlive(true);
        }
        if (connHeader.equalsIgnoreCase("close")) {
          Header header=new Header(HttpConstants.HEADER_CONNECTION,"close");
          response.addHeader(header);
          response.setKeepAlive(false);
        }
      }
 else {
        if (response.getHttpVersion().greaterEquals(HttpVersion.HTTP_1_1)) {
          response.setKeepAlive(true);
        }
 else {
          response.setKeepAlive(false);
        }
      }
    }
    if ("HEAD".equalsIgnoreCase(context.getStringProperty(HttpConnector.HTTP_METHOD_PROPERTY))) {
      response.setBody(null);
    }
    return response;
  }
 catch (  IOException e) {
    throw new TransformerException(this,e);
  }
}
