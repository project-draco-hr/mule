{
  Project project=new Project();
  DefaultLogger consoleLogger=new DefaultLogger();
  consoleLogger.setErrorPrintStream(System.err);
  consoleLogger.setOutputPrintStream(System.out);
  consoleLogger.setMessageOutputLevel(Project.MSG_INFO);
  project.addBuildListener(consoleLogger);
  Path path=new Path(project);
  File[] jars=new File(ACTIVEMQ_HOME + "\\lib").listFiles(new FilenameWildcardFilter("*.jar"));
  path.add(new Path(project,new File(ACTIVEMQ_HOME,"\\conf").getAbsolutePath()));
  for (int i=0; i < jars.length; i++) {
    path.add(new Path(project,jars[i].getAbsolutePath()));
  }
  jars=new File(ACTIVEMQ_HOME + "\\lib\\optional").listFiles(new FilenameWildcardFilter("*.jar"));
  for (int i=0; i < jars.length; i++) {
    path.add(new Path(project,jars[i].getAbsolutePath()));
  }
  final JavaTask java=new JavaTask();
  java.setProject(project);
  java.setClasspath(path);
  java.setClassname("org.activemq.spring.Main");
  java.setFork(true);
  java.setDir(new File(ACTIVEMQ_HOME));
  java.addSysproperty(createVar("activemq.home",new File(ACTIVEMQ_HOME).getAbsolutePath()));
  java.addSysproperty(createVar("derby.system.home",new File(ACTIVEMQ_HOME,"\\var").getAbsolutePath()));
  java.createWatchdog();
  new Thread(){
    public void run(){
      java.execute();
    }
  }
.start();
  activemq=java.watchDog;
}
