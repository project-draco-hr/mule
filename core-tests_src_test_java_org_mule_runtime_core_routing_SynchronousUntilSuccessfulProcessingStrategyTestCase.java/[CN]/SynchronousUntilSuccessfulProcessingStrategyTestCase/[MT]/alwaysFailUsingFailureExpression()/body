{
  when(mockRoute.process(any(Event.class))).thenReturn(getTestEvent(TEST_DATA));
  when(mockUntilSuccessfulConfiguration.getFailureExpressionFilter()).thenReturn(mockAlwaysTrueFailureExpressionFilter);
  SynchronousUntilSuccessfulProcessingStrategy processingStrategy=createProcessingStrategy();
  try {
    processingStrategy.route(event,getTestFlow());
    fail("processing should throw exception");
  }
 catch (  RoutingException e) {
    verify(mockRoute,times(DEFAULT_RETRIES + 1)).process(any(Event.class));
    verify(mockAlwaysTrueFailureExpressionFilter,times(DEFAULT_RETRIES + 1)).accept(any(Event.class),any(Event.Builder.class));
  }
}
