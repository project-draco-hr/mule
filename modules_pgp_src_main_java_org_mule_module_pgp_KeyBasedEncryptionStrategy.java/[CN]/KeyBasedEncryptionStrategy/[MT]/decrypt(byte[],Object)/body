{
  try {
    ByteArrayInputStream in=new ByteArrayInputStream(data);
    MessageFactory mf=MessageFactory.getInstance("OpenPGP");
    Collection<?> msgs=mf.generateMessages(in);
    Message msg=(Message)msgs.iterator().next();
    if (msg instanceof EncryptedMessage) {
      EncryptedMessage encryptedMessage=(EncryptedMessage)msg;
      KeyBundle secretKeyBundle=keyManager.getSecretKeyBundle();
      char[] passphrase=keyManager.getSecretPassphrase().toCharArray();
      msg=encryptedMessage.decrypt(secretKeyBundle,passphrase);
      applyStrongEncryptionWorkaround(msg);
      return new PGPArmouredMessage(msg).getEncoded();
    }
  }
 catch (  Exception e) {
    throw new CryptoFailureException(this,e);
  }
  return data;
}
