{
  MuleClient client=new MuleClient();
  OutputHandler handler=new OutputHandler(){
    public void write(    UMOEvent event,    OutputStream out) throws IOException {
      try {
        Attachments atts=message.getAttachments();
        if (atts != null && atts.size() > 0) {
          atts.write(out);
        }
 else {
          XMLStreamWriter writer=STAXUtils.createXMLStreamWriter(out,message.getEncoding(),context);
          message.getSerializer().writeMessage(message,writer,context);
          try {
            writer.flush();
          }
 catch (          XMLStreamException e) {
            logger.error(e);
            throw new XFireException("Couldn't send message.",e);
          }
        }
      }
 catch (      XFireException e) {
        logger.error("Couldn't send message.",e);
        throw new IOException(e.getMessage());
      }
    }
  }
;
  StreamMessageAdapter sp=new StreamMessageAdapter(handler);
  sp.setProperty(HttpConnector.HTTP_METHOD_PROPERTY,HttpConstants.METHOD_POST);
  client.sendStream(getUri(),sp);
  if (sp.hasResponse()) {
    InMessage inMessage;
    String ct=(String)sp.getProperty(HttpConstants.HEADER_CONTENT_TYPE,"text/xml");
    InputStream in=sp.getResponse();
    if (ct.toLowerCase().indexOf("multipart/related") != -1) {
      try {
        Attachments atts=new JavaMailAttachments(in,ct);
        InputStream msgIs=atts.getSoapMessage().getDataHandler().getInputStream();
        inMessage=new InMessage(STAXUtils.createXMLStreamReader(msgIs,message.getEncoding(),context),getUri());
        inMessage.setAttachments(atts);
      }
 catch (      MessagingException e) {
        throw new IOException(e.getMessage());
      }
    }
 else {
      inMessage=new InMessage(STAXUtils.createXMLStreamReader(in,message.getEncoding(),context),getUri());
    }
    getEndpoint().onReceive(context,inMessage);
  }
}
