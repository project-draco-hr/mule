{
  MuleClient client=new MuleClient();
  OutputHandler handler=new OutputHandler(){
    public void write(    UMOEvent event,    OutputStream out) throws IOException {
      try {
        Attachments atts=message.getAttachments();
        if (atts != null && atts.size() > 0) {
          atts.write(out);
        }
 else {
          XMLStreamWriter writer=STAXUtils.createXMLStreamWriter(out,message.getEncoding(),context);
          message.getSerializer().writeMessage(message,writer,context);
          try {
            writer.flush();
          }
 catch (          XMLStreamException e) {
            logger.error(e);
            throw new XFireException("Couldn't send message.",e);
          }
        }
      }
 catch (      XFireException e) {
        logger.error("Couldn't send message.",e);
        throw new IOException(e.getMessage());
      }
    }
    public Map getHeaders(    UMOEvent event){
      Map headers=new HashMap();
      headers.put(HttpConstants.HEADER_CONTENT_TYPE,getSoapMimeType(message));
      headers.put(SoapConstants.SOAP_ACTION,message.getProperty(SoapConstants.SOAP_ACTION));
      for (Iterator iterator=event.getMessage().getPropertyNames().iterator(); iterator.hasNext(); ) {
        String headerName=(String)iterator.next();
        Object headerValue=event.getMessage().getStringProperty(headerName,null);
        if ((!headerName.startsWith(MuleProperties.PROPERTY_PREFIX) || (MuleProperties.MULE_USER_PROPERTY.compareTo(headerName) == 0)) && (!headerName.equals("Content-Type")) && (!headerName.equals("Content-Length"))) {
          headers.put(headerName,headerValue);
        }
      }
      return headers;
    }
  }
;
  StreamMessageAdapter sp=new StreamMessageAdapter(handler);
  sp.setProperty(HttpConnector.HTTP_METHOD_PROPERTY,HttpConstants.METHOD_POST);
  UMOMessage msg=RequestContext.getEvent().getMessage();
  for (Iterator i=msg.getPropertyNames().iterator(); i.hasNext(); ) {
    String propertyName=(String)i.next();
    sp.setProperty(propertyName,msg.getProperty(propertyName));
  }
  client.sendStream(getUri(),sp);
  if (sp.hasResponse()) {
    InMessage inMessage;
    String ct=(String)sp.getProperty(HttpConstants.HEADER_CONTENT_TYPE,"text/xml");
    InputStream in=sp.getResponse();
    if (ct.toLowerCase().indexOf("multipart/related") != -1) {
      try {
        Attachments atts=new JavaMailAttachments(in,ct);
        InputStream msgIs=atts.getSoapMessage().getDataHandler().getInputStream();
        inMessage=new InMessage(STAXUtils.createXMLStreamReader(msgIs,message.getEncoding(),context),getUri());
        inMessage.setAttachments(atts);
      }
 catch (      MessagingException e) {
        throw new IOException(e.getMessage());
      }
    }
 else {
      inMessage=new InMessage(STAXUtils.createXMLStreamReader(in,message.getEncoding(),context),getUri());
    }
    getEndpoint().onReceive(context,inMessage);
  }
}
