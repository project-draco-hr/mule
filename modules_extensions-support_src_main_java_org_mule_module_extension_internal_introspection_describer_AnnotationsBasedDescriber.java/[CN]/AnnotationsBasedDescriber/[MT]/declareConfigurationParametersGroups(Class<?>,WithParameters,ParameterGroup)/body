{
  List<ParameterGroup> groups=new LinkedList<>();
  for (  Field field : getParameterGroupFields(annotatedType)) {
    if (field.isAnnotationPresent(Optional.class)) {
      throw new IllegalParameterModelDefinitionException(String.format("@%s can not be applied along with @%s. Affected field [%s] in [%s].",Optional.class.getSimpleName(),org.mule.extension.api.annotation.ParameterGroup.class.getSimpleName(),field.getName(),annotatedType));
    }
    Set<ParameterDescriptor> parameters=declareSingleParameters(getExposedFields(field.getType()),with);
    if (!parameters.isEmpty()) {
      ParameterGroup group=new ParameterGroup(field.getType(),field);
      groups.add(group);
      for (      ParameterDescriptor descriptor : parameters) {
        ParameterDeclaration parameter=inheritGroupParentDisplayProperties(parent,field,group,descriptor);
        group.addParameter(parameter.getName(),getField(field.getType(),getMemberName(parameter,parameter.getName()),getType(parameter.getType())));
      }
      List<ParameterGroup> childGroups=declareConfigurationParametersGroups(field.getType(),with,group);
      if (!CollectionUtils.isEmpty(childGroups)) {
        group.addModelProperty(new ParameterGroupModelProperty(childGroups));
      }
    }
  }
  return groups;
}
