{
  Mock session=MuleTestUtils.getMockSession();
  session.matchAndReturn("getFlowConstruct",getTestService());
  OutboundEndpoint endpoint1=getTestOutboundEndpoint("Test1Provider","test://Test1Provider?synchronous=true");
  assertNotNull(endpoint1);
  Mock mockEndpoint=RouterTestUtils.getMockEndpoint(endpoint1);
  FilteringOutboundRouter router=new FilteringOutboundRouter();
  PayloadTypeFilter filter=new PayloadTypeFilter(String.class);
  router.setFilter(filter);
  List<OutboundEndpoint> endpoints=new ArrayList<OutboundEndpoint>();
  endpoints.add((OutboundEndpoint)mockEndpoint.proxy());
  router.setEndpoints(endpoints);
  assertTrue(router.isUseTemplates());
  assertEquals(filter,router.getFilter());
  MuleMessage message=new DefaultMuleMessage("test event",muleContext);
  MuleEvent event=new OutboundRoutingTestEvent(message,null);
  mockEndpoint.expectAndReturn("process",RouterTestUtils.getArgListCheckerMuleEvent(),event);
  MuleMessage result=router.route(new OutboundRoutingTestEvent(message,(MuleSession)session.proxy()));
  assertNotNull(result);
  assertEquals(message,result);
  session.verify();
}
