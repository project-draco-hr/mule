{
  OutboundEndpoint endpoint1=getTestOutboundEndpoint("Test1Provider","test://Test1Provider?exchangePattern=request-response");
  assertNotNull(endpoint1);
  Mock mockEndpoint=RouterTestUtils.getMockEndpoint(endpoint1);
  FilteringOutboundRouter router=new FilteringOutboundRouter();
  PayloadTypeFilter filter=new PayloadTypeFilter(String.class);
  router.setFilter(filter);
  List<OutboundEndpoint> endpoints=new ArrayList<OutboundEndpoint>();
  endpoints.add((OutboundEndpoint)mockEndpoint.proxy());
  router.setRoutes(new ArrayList<MessageProcessor>(endpoints));
  assertTrue(router.isUseTemplates());
  assertEquals(filter,router.getFilter());
  MuleMessage message=new DefaultMuleMessage("test event",muleContext);
  MuleEvent event=new OutboundRoutingTestEvent(message,null,muleContext);
  mockEndpoint.expectAndReturn("process",RouterTestUtils.getArgListCheckerMuleEvent(),event);
  MuleSession session=mock(MuleSession.class);
  MuleEvent result=router.route(new OutboundRoutingTestEvent(message,session,muleContext));
  assertNotNull(result);
  assertEquals(message,result.getMessage());
}
