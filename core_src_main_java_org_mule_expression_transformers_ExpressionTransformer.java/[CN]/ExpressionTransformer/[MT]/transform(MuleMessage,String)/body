{
  Object results[]=new Object[arguments.size()];
  int i=0;
  for (Iterator<ExpressionArgument> iterator=arguments.iterator(); iterator.hasNext(); i++) {
    ExpressionArgument argument=iterator.next();
    try {
      results[i]=argument.evaluate(message);
    }
 catch (    RequiredValueException e) {
      if (!argument.isOptional()) {
        throw e;
      }
      logger.warn(e.getMessage());
    }
catch (    ExpressionRuntimeException e) {
      throw new TransformerException(message,this,e);
    }
    if (!argument.isOptional() && results[i] == null) {
      throw new TransformerException(CoreMessages.expressionEvaluatorReturnedNull(argument.getExpressionConfig().getEvaluator(),argument.getExpressionConfig().getExpression()),message,this);
    }
  }
  if (isReturnSourceIfNull() && checkIfAllAreNull(results)) {
    return message;
  }
  if (results.length == 1) {
    return results[0];
  }
 else {
    return results;
  }
}
