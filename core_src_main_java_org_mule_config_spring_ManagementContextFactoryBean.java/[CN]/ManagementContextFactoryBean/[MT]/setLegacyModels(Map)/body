{
  if (models == null) {
    return;
  }
  UMOModel model;
  if (models.size() > 1) {
    throw new IllegalArgumentException("Legacy configuration could only support onr model");
  }
 else   if (models.size() == 0) {
    model=ModelHelper.getFirstUserModel();
    if (model == null) {
      throw new IllegalArgumentException("There is no component model set");
    }
  }
 else {
    model=(UMOModel)models.values().iterator().next();
    registry.registerModel(model);
  }
  Map components=context.getBeansOfType(UMODescriptor.class,true,false);
  UMODescriptor d;
  for (Iterator iterator=components.values().iterator(); iterator.hasNext(); ) {
    d=(UMODescriptor)iterator.next();
    model.registerComponent(d);
  }
}
