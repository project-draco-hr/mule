{
  this.context=applicationContext;
  SpringContainerContext container=new SpringContainerContext();
  container.setBeanFactory(context);
  container.setName("spring-registry");
  if (registry == null) {
    Map m=applicationContext.getBeansOfType(RegistryFacade.class);
    if (m.size() > 0) {
      registry=(RegistryFacade)m.values().iterator().next();
    }
 else {
      registry=createDefaultRegistry();
      logger.debug("no registry has been defined in context. Created default Registry: " + registry.getClass().getName());
    }
    RegistryContext.setRegistry(registry);
  }
  managementContext.setRegistry(registry);
  try {
    registry.registerContainerContext(container);
  }
 catch (  UMOException e) {
    throw new BeanCreationException("failed to register default spring container",e);
  }
  RegistryContext.setRegistry(registry);
}
