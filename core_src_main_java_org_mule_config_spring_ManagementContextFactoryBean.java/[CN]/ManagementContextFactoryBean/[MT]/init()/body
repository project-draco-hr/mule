{
  try {
    boolean legacy=false;
    Map temp=context.getBeansOfType(AutowireUMOManagerFactoryBean.LegacyManager.class);
    if (temp.size() > 0) {
      legacy=true;
      registry.getConfiguration().setId(((AutowireUMOManagerFactoryBean.LegacyManager)temp.values().iterator().next()).getManagerId());
      try {
        setLegacyProperties((Map)context.getBean("muleEnvironmentProperties",Map.class));
      }
 catch (      BeansException e) {
      }
    }
    temp=context.getBeansOfType(UMOTransactionManagerFactory.class,true,false);
    if (temp.size() > 0) {
      transactionManager=(((UMOTransactionManagerFactory)temp.values().iterator().next()).create());
    }
 else {
      temp=context.getBeansOfType(TransactionManager.class,true,false);
      if (temp.size() > 0) {
        transactionManager=(((TransactionManager)temp.values().iterator().next()));
      }
    }
    temp=context.getBeansOfType(UMOSecurityManager.class,true,false);
    if (temp.size() > 0) {
      securityManager=((UMOSecurityManager)temp.values().iterator().next());
    }
    temp=context.getBeansOfType(ServerNotificationManager.class,true,false);
    if (temp.size() > 0) {
      notificationManager=((ServerNotificationManager)temp.values().iterator().next());
    }
    temp=context.getBeansOfType(UMOWorkManager.class,true,false);
    if (temp.size() > 0) {
      workManager=((UMOWorkManager)temp.values().iterator().next());
    }
    temp=context.getBeansOfType(QueueManager.class,true,false);
    if (temp.size() > 0) {
      queueManager=((QueueManager)temp.values().iterator().next());
    }
  }
 catch (  Exception e) {
    throw new BeanInitializationException("Failed to wire MuleManager together: " + e.getMessage(),e);
  }
}
