{
  try {
    boolean legacy=false;
    Map temp=context.getBeansOfType(AutowireUMOManagerFactoryBean.LegacyManager.class);
    if (temp.size() > 0) {
      legacy=true;
      registry.getConfiguration().setId(((AutowireUMOManagerFactoryBean.LegacyManager)temp.values().iterator().next()).getManagerId());
      setLegacyProperties((Map)context.getBean("muleEnvironmentProperties",Map.class));
    }
    Map containers=context.getBeansOfType(UMOContainerContext.class,true,false);
    setContainerContext(containers);
    temp=context.getBeansOfType(UMOTransactionManagerFactory.class,true,false);
    if (temp.size() > 0) {
      managementContext.setTransactionManager(((UMOTransactionManagerFactory)temp.values().iterator().next()).create());
    }
 else {
      temp=context.getBeansOfType(TransactionManager.class,true,false);
      if (temp.size() > 0) {
        managementContext.setTransactionManager(((TransactionManager)temp.values().iterator().next()));
      }
    }
    temp=context.getBeansOfType(UMOSecurityManager.class,true,false);
    if (temp.size() > 0) {
      managementContext.setSecurityManager((UMOSecurityManager)temp.values().iterator().next());
    }
  }
 catch (  Exception e) {
    throw new BeanInitializationException("Failed to wire MuleManager together: " + e.getMessage(),e);
  }
}
