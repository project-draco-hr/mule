{
  checkDisposed();
  if (!started && pojoService instanceof Startable) {
    try {
      return LifecycleLogic.startAll((Startable)pojoService,((Startable)pojoService).start(),new LifecycleLogic.Closure(){
        public LifecycleTransitionResult doContinue(){
          started=true;
          return LifecycleTransitionResult.OK;
        }
      }
);
    }
 catch (    Exception e) {
      throw new ModelException(CoreMessages.failedToStart("Service '" + service.getName() + "'"),e);
    }
  }
 else {
    return LifecycleTransitionResult.OK;
  }
}
