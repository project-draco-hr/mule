{
  final String accessTokenUrl="accessTokenUrl";
  when(adapter.getAccessTokenUrl()).thenReturn(accessTokenUrl);
  final String oauthVerifier="oauthVerifier";
  final String consumerKey="consumerKey";
  final String consumerSecret="consumerSecret";
  final String response="response";
  final String requestBody="grant_type=refresh_token&client_id=consumerKey&client_secret=consumerSecret&refresh_token=refreshToken";
  final Pattern accessTokenPattern=Pattern.compile(".");
  final Pattern expirationPattern=Pattern.compile(".");
  final Pattern refreshTokenPattern=Pattern.compile(".");
  final String accessToken="accessToken";
  final String refreshToken="refreshToken";
  final Date expiration=new Date();
  when(adapter.getOauthVerifier()).thenReturn(oauthVerifier);
  when(adapter.getConsumerKey()).thenReturn(consumerKey);
  when(adapter.getConsumerSecret()).thenReturn(consumerSecret);
  when(adapter.getAccessCodePattern()).thenReturn(accessTokenPattern);
  when(adapter.getRefreshTokenPattern()).thenReturn(refreshTokenPattern);
  when(adapter.getExpirationTimePattern()).thenReturn(expirationPattern);
  when(adapter.getRefreshToken()).thenReturn(refreshToken);
  when(httpUtil.post(manager.getDefaultUnauthorizedConnector().getAccessTokenUrl(),requestBody)).thenReturn(response);
  when(oauthResponseParser.extractAccessCode(accessTokenPattern,response)).thenReturn(accessToken);
  when(oauthResponseParser.extractExpirationTime(expirationPattern,response)).thenReturn(expiration);
  when(oauthResponseParser.extractRefreshToken(refreshTokenPattern,response)).thenReturn(refreshToken);
  manager.refreshAccessToken(adapter,accessToken);
  verify(adapter).setAccessToken(null);
  verify(httpUtil).post(manager.getDefaultUnauthorizedConnector().getAccessTokenUrl(),requestBody);
  verify(oauthResponseParser).extractAccessCode(accessTokenPattern,response);
  verify(adapter).setAccessToken(accessToken);
  verify(adapter).setExpiration(expiration);
  verify(adapter).setRefreshToken(refreshToken);
  verify(adapter).postAuth();
  verify(manager).fetchCallbackParameters(adapter,response);
}
