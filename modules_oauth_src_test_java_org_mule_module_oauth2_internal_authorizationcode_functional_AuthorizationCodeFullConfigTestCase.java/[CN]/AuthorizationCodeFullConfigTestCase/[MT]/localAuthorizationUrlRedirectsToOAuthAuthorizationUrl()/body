{
  wireMockRule.stubFor(get(urlMatching(AUTHORIZE_PATH + ".*")).willReturn(aResponse().withStatus(200)));
  HttpRequestOptions options=HttpRequestOptionsBuilder.newOptions().disableFollowsRedirect().tlsContextFactory((TlsContextFactory)muleContext.getRegistry().get("tlsContext")).build();
  MuleMessage response=muleContext.getClient().send(localAuthorizationUrl.getValue(),new DefaultMuleMessage(NullPayload.getInstance(),muleContext),options);
  assertThat((Integer)response.getInboundProperty(HttpConstants.ResponseProperties.HTTP_STATUS_PROPERTY),is(302));
  String redirectedLocation=response.getInboundProperty(HttpHeaders.Names.LOCATION);
  muleContext.getClient().send(redirectedLocation,new DefaultMuleMessage(NullPayload.getInstance(),muleContext),options);
  final List<LoggedRequest> requests=findAll(getRequestedFor(urlMatching(AUTHORIZE_PATH + ".*")));
  assertThat(requests.size(),is(1));
  AuthorizationRequestAsserter.create((requests.get(0))).assertMethodIsGet().assertClientIdIs(clientId.getValue()).assertRedirectUriIs(redirectUrl.getValue()).assertScopeIs(scopes.getValue()).assertStateIs(state.getValue()).assertContainsCustomParameter(authenticationRequestParam1.getValue(),authenticationRequestValue1.getValue()).assertContainsCustomParameter(authenticationRequestParam2.getValue(),authenticationRequestValue2.getValue()).assertResponseTypeIsCode();
}
