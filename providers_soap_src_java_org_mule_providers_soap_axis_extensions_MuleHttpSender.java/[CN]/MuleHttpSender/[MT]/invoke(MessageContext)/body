{
  if (log.isDebugEnabled()) {
    log.debug(Messages.getMessage("enter00","HTTPSender::invoke"));
  }
  try {
    if (msgContext.isClient() && msgContext.containsProperty("call_object")) {
      Call call=(Call)msgContext.getProperty("call_object");
      if (Boolean.TRUE.equals(call.getProperty("axis.one.way"))) {
        return;
      }
    }
    BooleanHolder useFullURL=new BooleanHolder(false);
    StringBuffer otherHeaders=new StringBuffer();
    targetURL=new URL(msgContext.getStrProp(MessageContext.TRANS_URL));
    String host=targetURL.getHost();
    int port=targetURL.getPort();
    SocketHolder socketHolder=new SocketHolder(null);
    InputStream inp=writeToSocket(socketHolder,msgContext,targetURL,otherHeaders,host,port,msgContext.getTimeout(),useFullURL);
    Hashtable headers=new Hashtable();
    inp=readHeadersFromSocket(socketHolder,msgContext,inp,headers);
    readFromSocket(socketHolder,msgContext,inp,headers);
  }
 catch (  Exception e) {
    log.debug(e);
    throw AxisFault.makeFault(e);
  }
  if (log.isDebugEnabled()) {
    log.debug(Messages.getMessage("exit00","HTTPDispatchHandler::invoke"));
  }
}
