{
  readOnly=false;
  if (added != null) {
    List queueAdded=(List)added.get(queue);
    if (queueAdded != null) {
      return queueAdded.remove(queueAdded.size() - 1);
    }
  }
  Object o;
  try {
    o=queue.poll(timeout);
  }
 catch (  InterruptedException e) {
    if (transactionalQueueManager.getMuleContext().isStopping()) {
      throw e;
    }
    return null;
  }
  if (o != null) {
    if (removed == null) {
      removed=new HashMap();
    }
    List queueRemoved=(List)removed.get(queue);
    if (queueRemoved == null) {
      queueRemoved=new ArrayList();
      removed.put(queue,queueRemoved);
    }
    queueRemoved.add(o);
    o=transactionalQueueManager.doLoad(queue,o);
  }
  return o;
}
