{
  super();
  Set<LifecycleObject> initOrderedObjects=new LinkedHashSet<>();
  initOrderedObjects.add(new NotificationLifecycleObject(ObjectStoreManager.class));
  initOrderedObjects.add(new NotificationLifecycleObject(ExpressionLanguageExtension.class));
  initOrderedObjects.add(new NotificationLifecycleObject(ExpressionLanguage.class));
  initOrderedObjects.add(new NotificationLifecycleObject(ExpressionManager.class));
  initOrderedObjects.add(new NotificationLifecycleObject(ConfigurationProvider.class));
  initOrderedObjects.add(new NotificationLifecycleObject(Config.class));
  initOrderedObjects.add(new NotificationLifecycleObject(QueueManager.class));
  initOrderedObjects.add(new NotificationLifecycleObject(LegacyConnector.class));
  initOrderedObjects.add(new NotificationLifecycleObject(Agent.class));
  initOrderedObjects.add(new NotificationLifecycleObject(SecurityManager.class));
  initOrderedObjects.add(new NotificationLifecycleObject(FlowConstruct.class));
  initOrderedObjects.add(new NotificationLifecycleObject(Initialisable.class));
  setOrderedLifecycleObjects(initOrderedObjects);
  setIgnoredObjectTypes(new Class[]{ExtensionManager.class,SpringRegistry.class,SpringRegistryBootstrap.class,Component.class,MessageSource.class,InterceptingMessageProcessor.class,AbstractMessageProcessorOwner.class,MessagingExceptionHandler.class,AbstractAsyncRequestReplyRequester.class,OutboundRouter.class,MessageProcessorChain.class,MuleContext.class,Service.class});
}
