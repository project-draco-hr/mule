{
  final File pluginsDir=new File(appDir,"plugins");
  String[] pluginZips=pluginsDir.list(new SuffixFileFilter(".zip"));
  if (pluginZips.length == 0) {
    return Collections.emptySet();
  }
  Arrays.sort(pluginZips);
  Set<PluginDescriptor> pds=new HashSet<PluginDescriptor>(pluginZips.length);
  for (  String pluginZip : pluginZips) {
    final String pluginName=StringUtils.removeEnd(pluginZip,".zip");
    final File tmpDir=new File(MuleContainerBootstrapUtils.getMuleTmpDir(),desc.getAppName() + "/plugins/" + pluginName);
    try {
      FileUtils.unzip(new File(pluginsDir,pluginZip),tmpDir);
    }
 catch (    IOException e) {
      throw new MuleRuntimeException(CoreMessages.createStaticMessage(String.format("Failed to parse plugins for application [%s]",desc.getAppName())));
    }
    final PluginDescriptor pd=new PluginDescriptor();
    pd.setName(pluginName);
    PluginClasspath cp=PluginClasspath.from(tmpDir);
    pd.setClasspath(cp);
    pds.add(pd);
  }
  return pds;
}
