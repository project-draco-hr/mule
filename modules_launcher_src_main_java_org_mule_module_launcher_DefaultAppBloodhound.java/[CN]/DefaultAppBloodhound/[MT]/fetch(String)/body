{
  final File appsDir=MuleContainerBootstrapUtils.getMuleAppsDir();
  File appDir=new File(appsDir,appName);
  if (!appDir.exists()) {
    throw new MuleRuntimeException(MessageFactory.createStaticMessage(String.format("Application directory does not exist: '%s'",appDir)));
  }
  @SuppressWarnings("unchecked") Collection<File> deployFiles=FileUtils.listFiles(appDir,new WildcardFileFilter("mule-deploy.*"),null);
  if (deployFiles.size() > 1) {
    throw new MuleRuntimeException(MessageFactory.createStaticMessage(String.format("More than one mule-deploy descriptors found in application '%s'",appName)));
  }
  ApplicationDescriptor desc;
  if (deployFiles.isEmpty()) {
    desc=new EmptyApplicationDescriptor(appName);
  }
 else {
    final File descriptorFile=deployFiles.iterator().next();
    final String ext=FilenameUtils.getExtension(descriptorFile.getName());
    final DescriptorParser descriptorParser=parserRegistry.get(ext);
    if (descriptorParser == null) {
      throw new MuleRuntimeException(MessageFactory.createStaticMessage(String.format("Unsupported deployment descriptor format for app '%s': %s",appName,ext)));
    }
    desc=descriptorParser.parse(descriptorFile,appName);
    desc.setAppName(appName);
  }
  final File appPropsFile=new File(appDir,ApplicationDescriptor.DEFAULT_APP_PROPERTIES_RESOURCE);
  setApplicationProperties(desc,appPropsFile);
  final Set<PluginDescriptor> plugins=new PluginDescriptorParser(desc,appDir).parse();
  desc.setPlugins(plugins);
  return desc;
}
