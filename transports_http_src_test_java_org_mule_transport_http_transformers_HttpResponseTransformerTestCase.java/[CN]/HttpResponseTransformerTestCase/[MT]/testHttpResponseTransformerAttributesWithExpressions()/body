{
  HttpResponseTransformer httpResponseTransformer=createHttpResponseTransformer();
  DefaultMuleMessage muleMessage=new DefaultMuleMessage(HTTP_BODY,muleContext);
  httpResponseTransformer.setStatus(HEADER_STATUS);
  httpResponseTransformer.setContentType(HEADER_CONTENT_TYPE);
  when(mockExpressionManager.isExpression(HEADER_STATUS)).thenReturn(true);
  when(mockExpressionManager.evaluate(HEADER_STATUS,muleMessage)).thenReturn(HttpConstants.SC_INTERNAL_SERVER_ERROR);
  when(mockExpressionManager.isExpression(HEADER_CONTENT_TYPE)).thenReturn(true);
  when(mockExpressionManager.evaluate(HEADER_CONTENT_TYPE,muleMessage)).thenReturn("text/html");
  HttpResponse httpResponse=(HttpResponse)httpResponseTransformer.transformMessage(muleMessage,"UTF-8");
  assertEquals(HTTP_BODY,httpResponse.getBodyAsString());
  assertEquals(HttpConstants.HTTP11,httpResponse.getHttpVersion().toString());
  assertEquals(HttpConstants.SC_INTERNAL_SERVER_ERROR,httpResponse.getStatusCode());
  validateHeader(httpResponse.getHeaders(),HttpConstants.HEADER_CONTENT_TYPE,"text/html");
}
