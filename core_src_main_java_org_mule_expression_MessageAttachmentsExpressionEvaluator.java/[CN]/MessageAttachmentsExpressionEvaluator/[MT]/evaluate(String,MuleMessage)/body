{
  boolean required;
  Map result;
  if (ALL_ARGUMENT.equals(expression)) {
    result=new HashMap(message.getAttachmentNames().size());
    for (Iterator iterator=message.getAttachmentNames().iterator(); iterator.hasNext(); ) {
      String name=(String)iterator.next();
      result.put(name,message.getAttachment(name));
    }
  }
 else   if (COUNT_ARGUMENT.equals(expression)) {
    return message.getAttachmentNames().size();
  }
 else {
    StringTokenizer tokenizer=new StringTokenizer(expression,DELIM);
    result=new HashMap(tokenizer.countTokens());
    while (tokenizer.hasMoreTokens()) {
      String s=tokenizer.nextToken();
      s=s.trim();
      if (s.endsWith("*")) {
        s=s.substring(s.length() - 1);
        required=false;
      }
 else {
        required=true;
      }
      Object val=message.getAttachment(s);
      if (val != null) {
        result.put(s,val);
      }
 else       if (required) {
        throw new RequiredValueException(CoreMessages.expressionEvaluatorReturnedNull(NAME,expression));
      }
    }
  }
  if (result.size() == 0) {
    return null;
  }
 else {
    return result;
  }
}
