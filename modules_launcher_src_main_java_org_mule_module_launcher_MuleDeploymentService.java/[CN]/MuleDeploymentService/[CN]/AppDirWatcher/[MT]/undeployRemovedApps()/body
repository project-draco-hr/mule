{
  String[] currentAnchors=appsDir.list(new SuffixFileFilter(APP_ANCHOR_SUFFIX));
  if (logger.isDebugEnabled()) {
    StringBuilder sb=new StringBuilder();
    sb.append(String.format("Current anchors:%n"));
    for (    String currentAnchor : currentAnchors) {
      sb.append(String.format("  %s%n",currentAnchor));
    }
    logger.debug(sb.toString());
  }
  String[] appAnchors=findExpectedAnchorFiles();
  @SuppressWarnings("unchecked") final Collection<String> deletedAnchors=CollectionUtils.subtract(Arrays.asList(appAnchors),Arrays.asList(currentAnchors));
  if (logger.isDebugEnabled()) {
    StringBuilder sb=new StringBuilder();
    sb.append(String.format("Deleted anchors:%n"));
    for (    String deletedAnchor : deletedAnchors) {
      sb.append(String.format("  %s%n",deletedAnchor));
    }
    logger.debug(sb.toString());
  }
  for (  String deletedAnchor : deletedAnchors) {
    String appName=StringUtils.removeEnd(deletedAnchor,APP_ANCHOR_SUFFIX);
    try {
      if (zombieMap.containsKey(appName)) {
        continue;
      }
      if (findApplication(appName) != null) {
        undeploy(appName);
      }
 else       if (logger.isDebugEnabled()) {
        logger.debug(String.format("Application [%s] has already been undeployed via API",appName));
      }
    }
 catch (    Throwable t) {
      logger.error("Failed to undeploy application: " + appName,t);
    }
  }
}
