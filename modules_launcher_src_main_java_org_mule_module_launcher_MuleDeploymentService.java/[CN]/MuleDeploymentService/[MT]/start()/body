{
  DeploymentStatusTracker deploymentStatusTracker=new DeploymentStatusTracker();
  addDeploymentListener(deploymentStatusTracker);
  StartupSummaryDeploymentListener summaryDeploymentListener=new StartupSummaryDeploymentListener(deploymentStatusTracker);
  addStartupListener(summaryDeploymentListener);
  deleteAllAnchors();
  final Map<String,Object> options=StartupContext.get().getStartupOptions();
  String appString=(String)options.get("app");
  if (appString == null) {
    String[] explodedApps=appsDir.list(DirectoryFileFilter.DIRECTORY);
    String[] packagedApps=appsDir.list(ZIP_APPS_FILTER);
    deployPackedApps(packagedApps);
    deployExplodedApps(explodedApps);
  }
 else {
    String[] apps=appString.split(":");
    apps=removeDuplicateAppNames(apps);
    for (    String app : apps) {
      try {
        File applicationFile=new File(appsDir,app + ZIP_FILE_SUFFIX);
        if (applicationFile.exists() && applicationFile.isFile()) {
          deployPackedApp(app + ZIP_FILE_SUFFIX);
        }
 else {
          deployExplodedApp(app);
        }
      }
 catch (      Exception e) {
      }
    }
  }
  for (  StartupListener listener : startupListeners) {
    try {
      listener.onAfterStartup();
    }
 catch (    Throwable t) {
      logger.error(t);
    }
  }
  if (!(appString != null)) {
    scheduleChangeMonitor(appsDir);
  }
 else {
    if (logger.isInfoEnabled()) {
      logger.info(miniSplash("Mule is up and running in a fixed app set mode"));
    }
  }
}
