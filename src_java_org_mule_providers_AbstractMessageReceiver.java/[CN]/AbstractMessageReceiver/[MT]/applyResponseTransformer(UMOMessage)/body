{
  UMOTransformer transformer=endpoint.getResponseTransformer();
  if (transformer == null) {
    transformer=component.getDescriptor().getResponseTransformer();
  }
  if (transformer == null) {
    return returnMessage;
  }
  if (returnMessage == null) {
    if (transformer.isAcceptNull()) {
      returnMessage=new MuleMessage(new NullPayload(),RequestContext.getEventContext().getMessage());
    }
 else {
      return null;
    }
  }
  Object returnPayload=returnMessage.getPayload();
  if (transformer.isSourceTypeSupported(returnPayload.getClass())) {
    Object result=transformer.transform(returnPayload);
    if (result instanceof UMOMessage) {
      returnMessage=(UMOMessage)result;
    }
 else {
      try {
        UMOMessageAdapter adapter=endpoint.getConnector().getMessageAdapter(result);
        returnMessage=new MuleMessage(adapter,returnMessage);
      }
 catch (      MessagingException e) {
        if (logger.isWarnEnabled()) {
          logger.warn("Failed to wrap response in " + endpoint.getConnector().getProtocol() + ". Error is: "+ e.getMessage());
        }
        returnMessage=new MuleMessage(result,returnMessage);
      }
    }
  }
 else {
    if (logger.isDebugEnabled()) {
      logger.debug("Response transformer: " + transformer + " doesn't support the result payload: "+ returnPayload.getClass());
    }
  }
  return returnMessage;
}
