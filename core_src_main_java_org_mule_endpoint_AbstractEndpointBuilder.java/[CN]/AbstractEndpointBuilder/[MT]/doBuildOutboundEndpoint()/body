{
  String uri=uriBuilder.getConstructor();
  if (muleContext.getExpressionManager().isExpression(uri)) {
    if (muleContext.getExpressionManager().isValidExpression(uriBuilder.getConstructor())) {
      uriBuilder=new URIBuilder(DynamicOutboundEndpoint.DYNAMIC_URI_PLACEHOLDER,muleContext);
      return new DynamicOutboundEndpoint(muleContext,this,uri);
    }
 else {
      throw new MalformedEndpointException(uri);
    }
  }
  prepareToBuildEndpoint();
  EndpointURI endpointURI=uriBuilder.getEndpoint();
  endpointURI.initialise();
  addTransformersFromUri(endpointURI);
  addResponseTransformersFromUri(endpointURI);
  addTransformers();
  addResponseTransformers();
  Connector connector=getConnector();
  if (connector != null && !connector.supportsProtocol(getScheme())) {
    throw new IllegalArgumentException(CoreMessages.connectorSchemeIncompatibleWithEndpointScheme(connector.getProtocol(),endpointURI).getMessage());
  }
  checkOutboundExchangePattern();
  return new DefaultOutboundEndpoint(connector,endpointURI,getName(endpointURI),getProperties(),getTransactionConfig(),getDefaultDeleteUnacceptedMessages(connector),messageExchangePattern,getResponseTimeout(connector),getInitialState(connector),getEndpointEncoding(connector),name,muleContext,getRetryPolicyTemplate(connector),responsePropertiesList,getMessageProcessorsFactory(),messageProcessors,responseMessageProcessors,isDisableTransportTransformer(),mimeType);
}
