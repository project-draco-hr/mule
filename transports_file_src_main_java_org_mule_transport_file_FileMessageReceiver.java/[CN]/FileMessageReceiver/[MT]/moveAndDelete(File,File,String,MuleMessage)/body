{
  boolean fileWasMoved=false;
  try {
    if (destinationFile != null) {
      try {
        FileUtils.moveFile(sourceFile,destinationFile);
      }
 catch (      IOException e) {
        throw new DefaultMuleException(FileMessages.failedToMoveFile(sourceFile.getAbsolutePath(),destinationFile.getAbsolutePath()));
      }
      message=createMuleMessage(destinationFile,endpoint.getEncoding());
      message.setProperty(FileConnector.PROPERTY_FILENAME,destinationFile.getName());
      message.setProperty(FileConnector.PROPERTY_ORIGINAL_FILENAME,sourceFileOriginalName);
    }
    this.routeMessage(message,endpoint.isSynchronous());
    if (((FileConnector)connector).isAutoDelete()) {
      if (destinationFile == null) {
        if (!sourceFile.delete()) {
          throw new DefaultMuleException(FileMessages.failedToDeleteFile(sourceFile));
        }
      }
 else {
      }
    }
  }
 catch (  Exception e) {
    boolean fileWasRolledBack=false;
    if (fileWasMoved) {
      try {
        rollbackFileMove(destinationFile,sourceFile.getAbsolutePath());
        fileWasRolledBack=true;
      }
 catch (      IOException ioException) {
      }
    }
    Exception ex=new RoutingException(FileMessages.exceptionWhileProcessing(sourceFile.getName(),(fileWasRolledBack ? "successful" : "unsuccessful")),new DefaultMuleMessage(message,connector.getMuleContext()),endpoint,e);
    this.handleException(ex);
  }
}
