{
  try {
    List<File> files=this.listFiles();
    if (logger.isDebugEnabled()) {
      logger.debug("Files: " + files.toString());
    }
    Comparator<File> comparator=getComparator();
    if (comparator != null) {
      Collections.sort(files,comparator);
    }
    for (    File file : files) {
      if (getLifecycleState().isStopping()) {
        break;
      }
      if (file.isFile()) {
        processFile(file);
      }
    }
  }
 catch (  MessagingException e) {
    MuleEvent event=e.getEvent();
    event.getFlowConstruct().getExceptionListener().handleException(e,event);
  }
catch (  Exception e) {
    getConnector().getMuleContext().getExceptionListener().handleException(e);
  }
}
