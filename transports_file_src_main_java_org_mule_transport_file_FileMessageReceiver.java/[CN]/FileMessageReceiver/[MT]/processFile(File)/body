{
  FileConnector fileConnector=(FileConnector)connector;
  boolean checkFileAge=fileConnector.getCheckFileAge();
  if (checkFileAge) {
    long fileAge=((FileConnector)connector).getFileAge();
    long lastMod=sourceFile.lastModified();
    long now=System.currentTimeMillis();
    long thisFileAge=now - lastMod;
    if (thisFileAge < fileAge) {
      if (logger.isDebugEnabled()) {
        logger.debug("The file has not aged enough yet, will return nothing for: " + sourceFile);
      }
      return;
    }
  }
  if (!attemptFileLock(sourceFile)) {
    return;
  }
 else   if (logger.isInfoEnabled()) {
    logger.info("Lock obtained on file: " + sourceFile.getAbsolutePath());
  }
  String sourceFileOriginalName=sourceFile.getName();
  if (!(sourceFile.canRead() && sourceFile.exists() && sourceFile.isFile())) {
    throw new DefaultMuleException(FileMessages.fileDoesNotExist(sourceFileOriginalName));
  }
  DefaultMuleMessage fileParserMessasge=new DefaultMuleMessage(null,connector.getMuleContext());
  fileParserMessasge.setOutboundProperty(FileConnector.PROPERTY_ORIGINAL_FILENAME,sourceFileOriginalName);
  File workFile=null;
  if (workDir != null && (moveDir == null || (moveDir != null && fileConnector.isStreaming()))) {
    String workFileName=sourceFileOriginalName;
    workFileName=fileConnector.getFilenameParser().getFilename(fileParserMessasge,workFileNamePattern);
    workFile=FileUtils.newFile(workDir,workFileName);
    move(sourceFile,workFile);
    sourceFile=workFile;
  }
  File destinationFile=null;
  if (moveDir != null) {
    String destinationFileName=sourceFileOriginalName;
    if (moveToPattern != null) {
      destinationFileName=((FileConnector)connector).getFilenameParser().getFilename(fileParserMessasge,moveToPattern);
    }
    destinationFile=FileUtils.newFile(moveDir,destinationFileName);
  }
  MuleMessage message=null;
  String encoding=endpoint.getEncoding();
  try {
    if (fileConnector.isStreaming()) {
      ReceiverFileInputStream payload=new ReceiverFileInputStream(sourceFile,fileConnector.isAutoDelete(),destinationFile);
      message=createMuleMessage(payload,encoding);
    }
 else {
      message=createMuleMessage(sourceFile,encoding);
    }
  }
 catch (  FileNotFoundException e) {
    logger.error("File being read disappeared!",e);
    return;
  }
  message.setOutboundProperty(FileConnector.PROPERTY_ORIGINAL_FILENAME,sourceFileOriginalName);
  if (!fileConnector.isStreaming()) {
    moveAndDelete(sourceFile,destinationFile,sourceFileOriginalName,message);
  }
 else {
    message.setOutboundProperty(FileConnector.PROPERTY_FILENAME,sourceFile.getName());
    this.routeMessage(message);
  }
}
