{
  Map<String,ClassLoaderLookupStrategy> pluginsLookupPolicies=new HashMap<>();
  for (  ArtifactPluginDescriptor dependencyPluginDescriptor : descriptor.getArtifactPluginDescriptors()) {
    if (dependencyPluginDescriptor.getName().equals(descriptor.getName())) {
      continue;
    }
    final ClassLoaderLookupStrategy parentFirst=getClassLoaderLookupStrategy(descriptor,dependencyPluginDescriptor);
    for (    String exportedPackage : dependencyPluginDescriptor.getClassLoaderModel().getExportedPackages()) {
      pluginsLookupPolicies.put(exportedPackage,parentFirst);
    }
  }
  final ClassLoaderLookupPolicy lookupPolicy=parent.getClassLoaderLookupPolicy().extend(pluginsLookupPolicies);
  return new MuleArtifactClassLoader(artifactId,descriptor,descriptor.getClassLoaderModel().getUrls(),parent.getClassLoader(),lookupPolicy);
}
