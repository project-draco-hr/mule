{
  TextMessage textMessage=mock(TextMessage.class);
  when(textMessage.getJMSCorrelationID()).thenReturn(null);
  when(textMessage.getJMSMessageID()).thenReturn("1234567890");
  when(textMessage.getJMSDeliveryMode()).thenReturn(Integer.valueOf(1));
  when(textMessage.getJMSDestination()).thenReturn(null);
  when(textMessage.getJMSPriority()).thenReturn(Integer.valueOf(4));
  when(textMessage.getJMSRedelivered()).thenReturn(Boolean.FALSE);
  when(textMessage.getJMSReplyTo()).thenReturn(null);
  when(textMessage.getJMSExpiration()).thenReturn(Long.valueOf(0));
  when(textMessage.getJMSTimestamp()).thenReturn(Long.valueOf(0));
  when(textMessage.getJMSType()).thenReturn(null);
  when(textMessage.getObjectProperty("JMS_CUSTOM_PROPERTY")).thenReturn("customValue");
  MuleMessage msg=MuleMessage.builder().payload(textMessage).addOutboundProperty("JMS_CUSTOM_PROPERTY","customValue").build();
  assertNotNull("The test hasn't been configured properly, no muleContext available",muleContext);
  setCurrentEvent(MuleEvent.builder(MuleTestUtils.getTestEvent("previous",muleContext)).message(msg).build());
  ObjectToJMSMessage transformer=createObject(ObjectToJMSMessage.class);
  Message transformed=(Message)transformer.transform(msg.getPayload());
  assertEquals("customValue",transformed.getObjectProperty("JMS_CUSTOM_PROPERTY"));
}
