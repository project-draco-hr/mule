{
  try {
    long leaseValue=MapUtils.getLongValue(endpoint.getProperties(),SpaceConstants.SPACE_LEASE_PROPERTY,Lease.FOREVER);
    GSSpace space=new GSSpace(endpoint.getEndpointURI().toString(),enableMonitorEvents,leaseValue);
    if (endpoint.getTransactionConfig().getFactory() != null) {
      JiniTransactionFactory txFactory=(JiniTransactionFactory)endpoint.getTransactionConfig().getFactory();
      TransactionManager transactionManager=LocalTransactionManager.getInstance((IJSpace)space.getJavaSpace());
      txFactory.setTransactionManager(transactionManager);
      txFactory.setTransactionTimeout(((GSConnector)endpoint.getConnector()).getTransactionTimeout());
      space.setTransactionFactory(txFactory);
    }
    if (!endpoint.getType().equalsIgnoreCase(UMOEndpoint.ENDPOINT_TYPE_SENDER)) {
      if (endpoint.getFilter() != null) {
        UMOFilter filter=endpoint.getFilter();
        if (filter instanceof JavaSpaceTemplateFilter) {
          space.setEntryTemplate(((JavaSpaceTemplateFilter)filter).getEntry());
        }
 else {
          if (!endpoint.getType().equals(UMOImmutableEndpoint.ENDPOINT_TYPE_SENDER)) {
            logger.warn("Filter on endpoint " + endpoint.getEndpointURI().toString() + " Was not a JiniEntryFilter. Endpoint will match all entries of all types for this endpoint");
          }
          space.setEntryTemplate(createDefaultEntry(endpoint.getEndpointURI().toString()));
        }
      }
 else {
        if (!endpoint.getType().equals(UMOImmutableEndpoint.ENDPOINT_TYPE_SENDER)) {
          logger.warn("Filter on endpoint " + endpoint.getEndpointURI().toString() + " Was not set. Endpoint will match all entries of all types for this endpoint");
        }
        space.setEntryTemplate(createDefaultEntry(endpoint.getEndpointURI().toString()));
      }
    }
    return space;
  }
 catch (  Exception e) {
    throw new CreateSpaceException(e);
  }
}
