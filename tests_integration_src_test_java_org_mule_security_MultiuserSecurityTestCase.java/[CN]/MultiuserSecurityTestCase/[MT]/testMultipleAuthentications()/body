{
  MuleClient client=new MuleClient();
  SessionHandler sessionHandler=new MuleSessionHandler();
  MuleMessage reply;
  Map props;
  EncryptionStrategy strategy=muleContext.getSecurityManager().getEncryptionStrategy("PBE");
  props=new HashMap();
  props.put(MuleProperties.MULE_USER_PROPERTY,MuleCredentials.createHeader("marie","marie","PBE",strategy));
  reply=client.send("vm://test","Data1",props);
  assertNotNull(reply);
  assertEquals("user = marie, logins = 1, color = bright red",reply.getPayload());
  props=new HashMap();
  props.put(MuleProperties.MULE_USER_PROPERTY,MuleCredentials.createHeader("stan","stan","PBE",strategy));
  reply=client.send("vm://test","Data2",props);
  assertNotNull(reply);
  assertEquals("user = stan, logins = 1, color = metallic blue",reply.getPayload());
  props=new HashMap();
  props.put(MuleProperties.MULE_USER_PROPERTY,MuleCredentials.createHeader("cindy","cindy","PBE",strategy));
  reply=client.send("vm://test","Data3",props);
  assertEquals("user = cindy, logins = 1, color = dark violet",reply.getPayload());
  props=new HashMap();
  props.put(MuleProperties.MULE_USER_PROPERTY,MuleCredentials.createHeader("marie","marie","PBE",strategy));
  reply=client.send("vm://test","Data4",props);
  assertNotNull(reply);
  assertEquals("user = marie, logins = 2, color = bright red",reply.getPayload());
  props=new HashMap();
  props.put(MuleProperties.MULE_USER_PROPERTY,MuleCredentials.createHeader("marie","marie","PBE",strategy));
  reply=client.send("vm://test","Data4",props);
  assertNotNull(reply);
  assertEquals("user = marie, logins = 3, color = bright red",reply.getPayload());
  props=new HashMap();
  props.put(MuleProperties.MULE_USER_PROPERTY,MuleCredentials.createHeader("stan","stan","PBE",strategy));
  reply=client.send("vm://test","Data2",props);
  assertNotNull(reply);
  assertEquals("user = stan, logins = 2, color = metallic blue",reply.getPayload());
}
