{
  try {
    byte[] inputBuffer=new byte[bufferSize];
    int len=inputStream.read(inputBuffer);
    if (len == -1) {
      return;
    }
    StringBuffer fullBuffer=new StringBuffer(bufferSize);
    while (len > 0) {
      fullBuffer.append(new String(inputBuffer,0,len));
      len=0;
      if (inputStream.available() > 0) {
        len=inputStream.read(inputBuffer);
      }
    }
    String finalMessageString;
    int noCRLFLength=fullBuffer.length() - Utility.CRLF.length();
    if (fullBuffer.indexOf(Utility.CRLF,noCRLFLength) != -1) {
      finalMessageString=fullBuffer.substring(0,noCRLFLength);
    }
 else {
      finalMessageString=fullBuffer.toString();
    }
    UMOMessage umoMessage=new MuleMessage(connector.getMessageAdapter(finalMessageString));
    routeMessage(umoMessage,endpoint.isSynchronous());
    ((StreamConnector)endpoint.getConnector()).reinitialise();
  }
 catch (  Exception e) {
    handleException(e);
  }
}
