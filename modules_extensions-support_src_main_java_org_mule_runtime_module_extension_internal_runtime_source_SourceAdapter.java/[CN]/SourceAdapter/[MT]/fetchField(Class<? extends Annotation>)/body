{
  Set<Field> fields=getAllFields(source.getClass(),withAnnotation(annotation));
  if (CollectionUtils.isEmpty(fields)) {
    return Optional.empty();
  }
  if (fields.size() > 1) {
    throw new IllegalModelDefinitionException(format("Message Source defined on class '%s' has more than one field annotated with '@%s'. " + "Only one field in the class can bare such annotation",source.getClass().getName(),annotation.getClass().getSimpleName()));
  }
  return Optional.of(new FieldSetter<>(fields.iterator().next()));
}
