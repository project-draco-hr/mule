{
  String notset=new Message(Messages.NOT_SET).getMessage();
  List message=new ArrayList();
  Manifest mf=config.getManifest();
  Map att=mf.getMainAttributes();
  if (att.values().size() > 0) {
    message.add(MapUtils.getString(att,new Attributes.Name("Specification-Title"),notset) + " " + new Message(Messages.VERSION).getMessage()+ " "+ MapUtils.getString(att,new Attributes.Name("Implementation-Version"),notset));
    message.add(MapUtils.getString(att,new Attributes.Name("Specification-Vendor"),notset));
    message.add(MapUtils.getString(att,new Attributes.Name("Implementation-Vendor"),notset));
  }
 else {
    message.add(new Message(Messages.VERSION_INFO_NOT_SET).getMessage());
  }
  message.add(" ");
  DateFormat df=DateFormat.getDateTimeInstance(DateFormat.FULL,DateFormat.FULL);
  message.add(new Message(Messages.SERVER_STARTED_AT_X,df.format(new Date(getStartDate())).toString()).getMessage());
  message.add("Server ID: " + id);
  message.add("JDK: " + System.getProperty("java.version") + " ("+ System.getProperty("java.vm.info")+ ")");
  String patch=System.getProperty("sun.os.patch.level",null);
  message.add("OS: " + System.getProperty("os.name") + (patch != null && !"unknown".equalsIgnoreCase(patch) ? " - " + patch : "")+ " ("+ System.getProperty("os.version")+ ", "+ System.getProperty("os.arch")+ ")");
  try {
    InetAddress host=InetAddress.getLocalHost();
    message.add("Host: " + host.getCanonicalHostName() + " ("+ host.getHostAddress()+ ")");
  }
 catch (  UnknownHostException e) {
  }
  message.add(" ");
  if (agents.size() == 0) {
    message.add(new Message(Messages.AGENTS_RUNNING).getMessage() + " " + new Message(Messages.NONE).getMessage());
  }
 else {
    message.add(new Message(Messages.AGENTS_RUNNING).getMessage());
    UMOAgent umoAgent;
    for (Iterator iterator=agents.values().iterator(); iterator.hasNext(); ) {
      umoAgent=(UMOAgent)iterator.next();
      message.add("  " + umoAgent.getDescription());
    }
  }
  return StringMessageUtils.getBoilerPlate(message,'*',70);
}
