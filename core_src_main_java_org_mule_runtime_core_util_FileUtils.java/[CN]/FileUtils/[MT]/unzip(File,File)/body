{
  ZipFile zip=null;
  if (directory.exists()) {
    if (!directory.isDirectory()) {
      throw new IOException("Directory is not a directory: " + directory);
    }
  }
 else {
    if (!directory.mkdirs()) {
      throw new IOException("Could not create directory: " + directory);
    }
  }
  try {
    zip=new ZipFile(archive);
    for (Enumeration entries=zip.entries(); entries.hasMoreElements(); ) {
      ZipEntry entry=(ZipEntry)entries.nextElement();
      File f=FileUtils.newFile(directory,entry.getName());
      if (entry.isDirectory()) {
        if (!f.exists() && !f.mkdirs()) {
          throw new IOException("Could not create directory: " + f);
        }
      }
 else {
        File file=new File(directory,entry.getName());
        if (!file.getParentFile().exists() && !file.getParentFile().mkdirs()) {
          throw new IOException("Unable to create folders for zip entry: " + entry.getName());
        }
        InputStream is=zip.getInputStream(entry);
        OutputStream os=new BufferedOutputStream(new FileOutputStream(f));
        IOUtils.copy(is,os);
        IOUtils.closeQuietly(is);
        IOUtils.closeQuietly(os);
      }
    }
  }
  finally {
    if (zip != null) {
      zip.close();
    }
  }
}
