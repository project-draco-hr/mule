{
  try {
    ArtifactPlugin plugin1=mock(ArtifactPlugin.class);
    final ArtifactClassLoader pluginClassLoader1=mock(ArtifactClassLoader.class);
    when(plugin1.getArtifactClassLoader()).thenReturn(pluginClassLoader1);
    final List<ArtifactPlugin> artifactPlugins=new ArrayList<>();
    artifactPlugins.add(plugin1);
    final List<URL> urls=new ArrayList<>();
    urls.add(this.getClass().getResource("/plugin1-bootstrap.properties"));
    urls.add(this.getClass().getResource("/plugin2-bootstrap.properties"));
    when(pluginClassLoader1.findResources(BOOTSTRAP_PROPERTIES)).thenReturn(new EnumerationAdapter<>(urls));
    return new ArtifactBootstrapServiceDiscovererConfigurationBuilder(artifactPlugins);
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
}
