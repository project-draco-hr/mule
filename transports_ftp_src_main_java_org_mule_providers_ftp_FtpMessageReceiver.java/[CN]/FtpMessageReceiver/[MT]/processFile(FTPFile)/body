{
  logger.debug("entering processFile()");
  UMOEndpointURI uri=endpoint.getEndpointURI();
  FTPClient client=connector.getFtp(uri);
  try {
    connector.enterActiveOrPassiveMode(client,endpoint);
    connector.setupFileType(client,endpoint);
    if (!client.changeWorkingDirectory(endpoint.getEndpointURI().getPath())) {
      throw new IOException("Ftp error: " + client.getReplyCode());
    }
    UMOMessage message;
    if (endpoint.isStreaming()) {
      message=new MuleMessage(connector.getStreamMessageAdapter(client.retrieveFileStream(file.getName()),null));
    }
 else {
      ByteArrayOutputStream baos=new ByteArrayOutputStream();
      if (!client.retrieveFile(file.getName(),baos)) {
        throw new IOException("Ftp error: " + client.getReplyCode());
      }
      message=new MuleMessage(connector.getMessageAdapter(baos.toByteArray()));
    }
    message.setProperty(FileConnector.PROPERTY_ORIGINAL_FILENAME,file.getName());
    routeMessage(message);
    if (!client.deleteFile(file.getName())) {
      throw new IOException("Ftp error: " + client.getReplyCode());
    }
  }
  finally {
    logger.debug("leaving processFile()");
    connector.releaseFtp(uri,client);
  }
}
