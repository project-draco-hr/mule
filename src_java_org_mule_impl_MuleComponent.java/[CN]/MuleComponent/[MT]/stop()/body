{
  if (!stopped.get()) {
    logger.debug("Stopping UMOComponent");
    stopping.set(true);
    try {
      proxyPool.stop();
    }
 catch (    Exception e) {
      throw new LifecycleException(new Message(Messages.FAILED_TO_STOP_X,"Component: " + descriptor.getName()),e,this);
    }
    if (worker != null) {
      try {
        worker.interrupt();
        worker=null;
      }
 catch (      Exception e) {
        logger.error("Component worker thread did not close properly: " + e);
      }
    }
    stopped.set(true);
    stopping.set(false);
    model.fireEvent(new ComponentEvent(descriptor,ComponentEvent.COMPONENT_STOPPED));
  }
}
