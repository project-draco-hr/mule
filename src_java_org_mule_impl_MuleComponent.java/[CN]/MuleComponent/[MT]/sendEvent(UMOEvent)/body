{
  if (stopping.get() || stopped.get()) {
    throw new ComponentException(new Message(Messages.COMPONENT_X_IS_STOPPED,getDescriptor().getName()),event.getMessage(),this);
  }
  if (logger.isDebugEnabled() && paused.get()) {
    logger.debug("Component: " + descriptor.getName() + " is paused. Blocking call until resume is called");
  }
  try {
    paused.whenFalse(null);
  }
 catch (  InterruptedException e) {
    throw new ComponentException(event.getMessage(),this,e);
  }
  if (stats.isEnabled()) {
    stats.incReceivedEventSync();
  }
  if (logger.isDebugEnabled()) {
    logger.debug("Component: " + descriptor.getName() + " has received synchronous event on: "+ event.getEndpoint().getEndpointURI());
  }
  UMOMessage result=null;
  MuleProxy proxy=null;
  try {
    proxy=(MuleProxy)proxyPool.borrowObject();
    getStatistics().setComponentPoolSize(proxyPool.getSize());
    proxy.setStatistics(getStatistics());
    if (logger.isDebugEnabled()) {
      logger.debug(this + " : got proxy for " + event.getId()+ " = "+ proxy);
    }
    result=(UMOMessage)proxy.onCall(event);
  }
 catch (  UMOException e) {
    throw e;
  }
catch (  Exception e) {
    throw new ComponentException(event.getMessage(),this,e);
  }
 finally {
    try {
      if (proxy != null) {
        proxyPool.returnObject(proxy);
      }
    }
 catch (    Exception e) {
      throw new ComponentException(event.getMessage(),this,e);
    }
    getStatistics().setComponentPoolSize(proxyPool.getSize());
  }
  return result;
}
