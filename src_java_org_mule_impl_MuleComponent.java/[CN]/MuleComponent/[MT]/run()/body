{
  MuleEvent event=null;
  MuleProxy proxy=null;
  while (!stopped.get() && !stopping.get()) {
    if (!paused.get()) {
      try {
        event=(MuleEvent)queue.take();
      }
 catch (      InterruptedException e) {
        break;
      }
      if (stats.isEnabled())       stats.decQueuedEvent();
      if (event != null) {
        logger.debug("Component: " + descriptor.getName() + " dequeued event on: "+ event.getEndpoint().getEndpointURI());
        try {
          proxy=(MuleProxy)proxyPool.borrowObject();
          getStatistics().setComponentPoolSize(proxyPool.getSize());
          proxy.setStatistics(getStatistics());
        }
 catch (        NoSuchElementException e) {
          handleException(new ComponentException(new Message(Messages.PROXY_POOL_TIMED_OUT),event.getMessage(),this,e));
        }
catch (        UMOException e) {
          handleException(e);
        }
catch (        Exception e) {
          handleException(new ComponentException(new Message(Messages.FAILED_TO_GET_POOLED_OBJECT),event.getMessage(),this,e));
        }
        if (proxy == null) {
          handleException(new ComponentException(new Message(Messages.FAILED_TO_GET_POOLED_OBJECT),event.getMessage(),this));
        }
        if (!proxy.isStarted()) {
          try {
            proxy.start();
          }
 catch (          UMOException e) {
            handleException(e);
          }
        }
        proxy.onEvent(event);
        try {
          workManager.scheduleWork(proxy,WorkManager.INDEFINITE,null,null);
        }
 catch (        WorkException e) {
          handleException(new ComponentException(new Message(Messages.EVENT_PROCIESSING_FAILED_FOR_X,descriptor.getName()),event.getMessage(),this,e));
        }
      }
    }
  }
}
