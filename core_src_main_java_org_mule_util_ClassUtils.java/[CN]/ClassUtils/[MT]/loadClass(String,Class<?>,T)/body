{
  Class<?> clazz=AccessController.doPrivileged(new PrivilegedAction<Class<?>>(){
    public Class<?> run(){
      try {
        final ClassLoader cl=Thread.currentThread().getContextClassLoader();
        return cl != null ? cl.loadClass(className) : null;
      }
 catch (      ClassNotFoundException e) {
        return null;
      }
    }
  }
);
  if (clazz == null) {
    clazz=AccessController.doPrivileged(new PrivilegedAction<Class<?>>(){
      public Class<?> run(){
        try {
          return Class.forName(className);
        }
 catch (        ClassNotFoundException e) {
          return null;
        }
      }
    }
);
  }
  if (clazz == null) {
    clazz=AccessController.doPrivileged(new PrivilegedAction<Class<?>>(){
      public Class<?> run(){
        try {
          return ClassUtils.class.getClassLoader().loadClass(className);
        }
 catch (        ClassNotFoundException e) {
          return null;
        }
      }
    }
);
  }
  if (clazz == null) {
    clazz=AccessController.doPrivileged(new PrivilegedAction<Class<?>>(){
      public Class<?> run(){
        try {
          return callingClass.getClassLoader().loadClass(className);
        }
 catch (        ClassNotFoundException e) {
          return null;
        }
      }
    }
);
  }
  if (clazz == null) {
    throw new ClassNotFoundException(className);
  }
  if (type.isAssignableFrom(clazz)) {
    return (T)clazz;
  }
 else {
    throw new IllegalArgumentException(String.format("Loaded class '%s' is not assignable from type '%s'",clazz.getName(),type.getName()));
  }
}
