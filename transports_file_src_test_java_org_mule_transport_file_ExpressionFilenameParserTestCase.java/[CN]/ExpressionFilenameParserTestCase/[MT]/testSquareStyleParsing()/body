{
  String result=parser.getFilename(message,"Test1_[function:count].txt");
  assertEquals("Test1_0.txt",result);
  result=parser.getFilename(message,"Test2_[function:dateStamp-yyMMdd].txt");
  assertDatestampWithYearMonthAndDayMatches(result);
  result=parser.getFilename(message,"Test3_[function:dateStamp].txt");
  assertDefaultDatestampMatches(result);
  result=parser.getFilename(message,"Test4_[function:systime].txt");
  assertFalse(result.equals("Test4_[function:systime].txt"));
  result=parser.getFilename(message,"Test5_[function:uuid].txt");
  assertFalse(result.equals("Test5_[function:uuid].txt"));
  result=parser.getFilename(message,"Test6_[function:count].txt");
  assertEquals("Test6_1.txt",result);
  result=parser.getFilename(message,"Test7_[header:originalFilename].txt");
  assertEquals("Test7_originalName.txt",result);
  result=parser.getFilename(message,"Test8_[header:foo].txt");
  assertEquals("Test8_bar.txt",result);
  try {
    result=parser.getFilename(message,"Test9_[header:xxx].txt");
    fail("Property xxx is not available");
  }
 catch (  Exception e) {
  }
  result=parser.getFilename(message,"Test9_[header:xxx?].txt");
  assertEquals("Test9_null.txt",result);
}
