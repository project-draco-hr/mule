{
  final Work work=mock(Work.class);
  long startTimeout=0;
  ExecutionContext execContext=mock(ExecutionContext.class);
  WorkListener workListener=mock(WorkListener.class);
  doThrow(new WorkException()).when(delegateWorkManager).scheduleWork(Matchers.<Work>any(),eq(startTimeout),eq(execContext),Matchers.<WorkListener>any());
  try {
    trackingWorkManager.scheduleWork(work,startTimeout,execContext,workListener);
    expectedExceptionFail();
  }
 catch (  Exception e) {
  }
  InOrder inOrder=inOrder(workTracker,delegateWorkManager);
  inOrder.verify(workTracker).addWork(work);
  inOrder.verify(delegateWorkManager).scheduleWork(Matchers.<Work>any(),eq(startTimeout),eq(execContext),Matchers.<WorkListener>any());
  inOrder.verify(workTracker).removeWork(work);
}
