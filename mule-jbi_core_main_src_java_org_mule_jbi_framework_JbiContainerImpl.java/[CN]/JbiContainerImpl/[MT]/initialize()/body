{
  try {
    JbiContainer.Factory.setInstance(this);
    Directories.createDirectories(this.workingDir);
    MuleManager.getConfiguration().setEmbedded(true);
    MuleManager.getInstance().setTransactionManager(transactionManager);
    ((MuleManager)MuleManager.getInstance()).initialise();
    if (this.mBeanServer == null) {
      LOGGER.debug("Creating MBeanServer");
      List l=MBeanServerFactory.findMBeanServer(null);
      if (l != null && l.size() > 0) {
        this.mBeanServer=(MBeanServer)l.get(0);
      }
 else {
        this.mBeanServer=MBeanServerFactory.createMBeanServer();
      }
    }
    if (this.transactionManager == null) {
      LOGGER.debug("Creating TransactionManager");
      this.transactionManager=new Jotm(true,false).getTransactionManager();
      this.transactionManager.setTransactionTimeout(60);
    }
    if (this.namingContext == null) {
      System.setProperty(Context.INITIAL_CONTEXT_FACTORY,MuleInitialContextFactory.class.getName());
      System.setProperty(Context.PROVIDER_URL,"mule-jbi");
    }
    this.endpoints=new EndpointsImpl();
    File regStore=new File(this.workingDir,"/registry.xml");
    if (regStore.isFile()) {
      try {
        this.registry=RegistryIO.load(regStore);
      }
 catch (      Exception e) {
        LOGGER.warn("Invalid registry found. Creating a new one");
      }
    }
 else {
      LOGGER.info("No registry found. Creating a new one");
    }
    if (this.registry == null) {
      this.registry=RegistryIO.create(regStore);
    }
    if (this.router == null) {
      this.router=new InternalMessageRouter(this,new DirectRouter(registry));
    }
  }
 catch (  Exception e) {
    if (e instanceof JBIException) {
      throw (JBIException)e;
    }
 else {
      throw new JBIException(e);
    }
  }
}
