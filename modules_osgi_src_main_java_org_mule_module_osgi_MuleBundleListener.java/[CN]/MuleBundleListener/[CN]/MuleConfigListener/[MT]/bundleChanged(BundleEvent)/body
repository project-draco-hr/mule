{
  Bundle bundle=event.getBundle();
  if (bundle.getBundleId() == bundleId) {
    return;
  }
switch (event.getType()) {
case BundleEvent.INSTALLED:
{
      Enumeration schemas=bundle.findEntries("/","*.xsd",true);
      while (schemas.hasMoreElements()) {
        URL url=(URL)schemas.nextElement();
        logger.debug("Schema found in bundle: " + url);
      }
    }
case BundleEvent.STARTING:
{
    String configResourceList=getMuleConfigResources(bundle);
    if (configResourceList != null) {
      logger.info("Processing Mule configuration: " + configResourceList);
      MuleContext muleContext=(MuleContext)muleContextRef.getService();
      try {
        String[] configResources=StringUtils.splitAndTrim(configResourceList,",; ");
        ConfigResource[] configResourceUrls=new ConfigResource[configResources.length];
        for (int i=0; i < configResources.length; i++) {
          configResourceUrls[i]=new ConfigResource(bundle.getEntry(configResources[i]));
        }
        SpringXmlConfigurationBuilder builder=new SpringXmlConfigurationBuilder(configResourceUrls);
        builder.setUseDefaultConfigResource(false);
        builder.configure(muleContext);
      }
 catch (      ConfigurationException ce) {
        logger.error(ce);
      }
    }
    break;
  }
case BundleEvent.STOPPING:
{
  break;
}
default :
break;
}
}
