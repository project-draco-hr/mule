{
  ConvertUtils.register(new EndpointConverter(),UMOEndpoint.class);
  ConvertUtils.register(new TransformerConverter(),UMOTransformer.class);
  ConvertUtils.register(new ConnectorConverter(),UMOConnector.class);
  ConvertUtils.register(new TransactionFactoryConverter(),UMOTransactionFactory.class);
  ConvertUtils.register(new EndpointURIConverter(),UMOEndpointURI.class);
  digester=new Digester();
  digester.setEntityResolver(new MuleDtdResolver());
  String temp=System.getProperty("org.mule.xml.validate","true");
  digester.setValidating((temp.equalsIgnoreCase("true")));
  digester.setErrorHandler(new ErrorHandler(){
    public void error(    SAXParseException exception) throws SAXException {
      logger.error(exception.getMessage(),exception);
      throw new SAXException(exception);
    }
    public void fatalError(    SAXParseException exception) throws SAXException {
      logger.fatal(exception.getMessage(),exception);
      throw new SAXException(exception);
    }
    public void warning(    SAXParseException exception) throws SAXException {
      logger.warn(exception.getMessage());
    }
  }
);
  String path="mule-configuration";
  addMuleConfigurationRules(digester,path);
  addContainerContextRules(digester,path);
  addTransformerRules(digester,path);
  addMuleEnvironmentPropertiesRules(digester,path);
  addSecurityManagerRules(digester,path);
  addTransactionManagerRules(digester,path);
  addGlobalEndpointRules(digester,path);
  addEndpointIdentfierRules(digester,path);
  addInterceptorStackRules(digester,path);
  addConnectorRules(digester,path);
  addAgentRules(digester,path);
  addModelRules(digester,path);
  addMuleDescriptorRules(digester,path);
}
