{
  PropertyValues pvs=mergedBeanDefinition.getPropertyValues();
  if (mergedBeanDefinition.getResolvedAutowireMode() == RootBeanDefinition.AUTOWIRE_BY_NAME || mergedBeanDefinition.getResolvedAutowireMode() == RootBeanDefinition.AUTOWIRE_BY_TYPE) {
    MutablePropertyValues newPvs=new MutablePropertyValues(pvs);
    if (mergedBeanDefinition.getResolvedAutowireMode() == RootBeanDefinition.AUTOWIRE_BY_NAME) {
      autowireByName(beanName,mergedBeanDefinition,bw,newPvs);
    }
    if (mergedBeanDefinition.getResolvedAutowireMode() == RootBeanDefinition.AUTOWIRE_BY_TYPE) {
      autowireByType(beanName,mergedBeanDefinition,bw,newPvs);
    }
    pvs=newPvs;
  }
  for (Iterator it=getBeanPostProcessors().iterator(); it.hasNext(); ) {
    BeanPostProcessor beanProcessor=(BeanPostProcessor)it.next();
    if (beanProcessor instanceof InstantiationAwareBeanPostProcessor) {
      InstantiationAwareBeanPostProcessor ibp=(InstantiationAwareBeanPostProcessor)beanProcessor;
      pvs=ibp.postProcessPropertyValues(pvs,bw.getWrappedInstance(),beanName);
      if (pvs == null) {
        return;
      }
    }
  }
  checkDependencies(beanName,mergedBeanDefinition,bw,pvs);
  applyPropertyValues(beanName,mergedBeanDefinition,bw,pvs);
}
