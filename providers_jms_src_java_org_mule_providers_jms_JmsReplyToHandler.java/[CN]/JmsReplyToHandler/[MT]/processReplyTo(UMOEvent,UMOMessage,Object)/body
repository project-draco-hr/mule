{
  Destination replyToDestination=null;
  try {
    if (replyTo instanceof Destination) {
      replyToDestination=(Destination)replyTo;
    }
    if (replyToDestination == null) {
      super.processReplyTo(event,returnMessage,replyTo);
      return;
    }
    Object payload=returnMessage.getPayload();
    if (getTransformer() != null) {
      payload=getTransformer().transform(payload);
    }
    Message replyToMessage=JmsMessageUtils.getMessageForObject(payload,session);
    if (logger.isDebugEnabled()) {
      logger.debug("Sending jms reply to: " + replyToDestination + "("+ replyToDestination.getClass().getName()+ ")");
    }
    if (replyToProducer == null) {
      replyToProducer=((JmsConnector)connector).getJmsSupport().createProducer(session,replyToDestination);
    }
    connector.getJmsSupport().send(replyToProducer,replyToMessage,replyToDestination);
    logger.info("Reply Message sent to: " + replyToDestination);
    ((MuleComponent)event.getComponent()).getStatistics().incSentReplyToEvent();
  }
 catch (  Exception e) {
    throw new DispatchException("Failed to create and dispatch response event from message: " + e.getMessage(),e);
  }
 finally {
    dispose();
  }
}
