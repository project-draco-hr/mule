{
  final String resolvedListenerPath=listenerPath.getResolvedPath();
  propertiesMap.put(HttpConstants.RequestProperties.HTTP_METHOD_PROPERTY,this.method);
  final String path=HttpParser.extractPath(uri);
  final String rawQueryString=HttpParser.extractQueryParams(uri);
  final ParameterMap queryParams=HttpParser.decodeQueryString(rawQueryString);
  propertiesMap.put(HttpConstants.RequestProperties.HTTP_QUERY_PARAMS,queryParams == null ? Collections.emptyMap() : queryParams.toImmutableParameterMap());
  propertiesMap.put(HttpConstants.RequestProperties.HTTP_QUERY_STRING,rawQueryString);
  propertiesMap.put(HttpConstants.RequestProperties.HTTP_REQUEST_PATH_PROPERTY,path);
  propertiesMap.put(HttpConstants.RequestProperties.HTTP_VERSION_PROPERTY,this.protocol);
  propertiesMap.put(HttpConstants.RequestProperties.HTTP_REQUEST_URI,this.uri);
  propertiesMap.put(HttpConstants.RequestProperties.HTTP_REMOTE_ADDRESS,remoteHostAddress);
  propertiesMap.put(HttpConstants.RequestProperties.HTTP_URI_PARAMS,HttpParser.decodeUriParams(resolvedListenerPath,path));
  propertiesMap.put(HttpConstants.RequestProperties.HTTP_LISTENER_PATH,resolvedListenerPath);
  propertiesMap.put(HttpConstants.RequestProperties.HTTP_RELATIVE_PATH,listenerPath.getRelativePath(path));
  propertiesMap.put(HttpConstants.RequestProperties.HTTP_SCHEME,scheme);
  if (clientCertificate != null) {
    propertiesMap.put(HttpConstants.RequestProperties.HTTP_CLIENT_CERTIFICATE,clientCertificate);
  }
}
