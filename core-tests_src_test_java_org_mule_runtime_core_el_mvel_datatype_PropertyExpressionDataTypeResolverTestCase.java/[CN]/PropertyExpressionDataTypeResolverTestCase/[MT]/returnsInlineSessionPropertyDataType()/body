{
  final String expression="foo";
  final DataType expectedDataType=DataType.builder().type(String.class).mediaType(JSON).charset(CUSTOM_ENCODING).build();
  MVELExpressionLanguage expressionLanguage=(MVELExpressionLanguage)muleContext.getExpressionLanguage();
  final CompiledExpression compiledExpression=(CompiledExpression)compileExpression(expression,new ParserContext(expressionLanguage.getParserConfiguration()));
  testEvent().getSession().setProperty("foo",EXPRESSION_VALUE,expectedDataType);
  assertThat(expressionDataTypeResolver.resolve(testEvent(),compiledExpression),like(String.class,JSON,CUSTOM_ENCODING));
}
