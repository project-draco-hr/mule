{
  this.socket=socket;
  final TcpConnector tcpConnector=((TcpConnector)connector);
  this.protocol=tcpConnector.getTcpProtocol();
  try {
    if (tcpConnector.getReceiveBufferSize() != UMOConnector.INT_VALUE_NOT_SET && socket.getReceiveBufferSize() != tcpConnector.getReceiveBufferSize()) {
      socket.setReceiveBufferSize(tcpConnector.getReceiveBufferSize());
    }
    if (tcpConnector.getSendBufferSize() != UMOConnector.INT_VALUE_NOT_SET && socket.getSendBufferSize() != tcpConnector.getSendBufferSize()) {
      socket.setSendBufferSize(tcpConnector.getSendBufferSize());
    }
    if (tcpConnector.getReceiveTimeout() != UMOConnector.INT_VALUE_NOT_SET && socket.getSoTimeout() != tcpConnector.getReceiveTimeout()) {
      socket.setSoTimeout(tcpConnector.getReceiveTimeout());
    }
    socket.setTcpNoDelay(tcpConnector.isSendTcpNoDelay());
    socket.setKeepAlive(tcpConnector.isKeepAlive());
  }
 catch (  SocketException e) {
    logger.error("Failed to set Socket properties: " + e.getMessage(),e);
  }
}
