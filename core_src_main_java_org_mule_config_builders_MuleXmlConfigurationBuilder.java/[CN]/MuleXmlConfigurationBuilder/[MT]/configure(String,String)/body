{
  if (StringUtils.isNotBlank(startupPropertiesFile)) {
    try {
      startupPropertiesFile=StringUtils.trimToEmpty(startupPropertiesFile);
      Properties startupProperties=PropertiesUtils.loadProperties(startupPropertiesFile,getClass());
    }
 catch (    IOException e) {
      throw new ConfigurationException(CoreMessages.failedToLoad(startupPropertiesFile),e);
    }
  }
  if (configResource == null) {
    throw new ConfigurationException(CoreMessages.objectIsNull("Configuration Resource"));
  }
  String[] resources=org.springframework.util.StringUtils.tokenizeToStringArray(configResource,",;",true,true);
  String[] all=new String[resources.length + 1];
  all[0]=defaultConfigResource;
  System.arraycopy(resources,0,all,1,resources.length);
  MuleApplicationContext context=new MuleApplicationContext(all);
  try {
    UMOManagementContext mc=context.getManagementContext();
    MuleServer.setManagementContext(mc);
    if (startContext) {
      mc.start();
    }
    RegistryContext.getConfiguration().setConfigResources(resources);
    return mc;
  }
 catch (  Exception e) {
    throw new ConfigurationException(CoreMessages.failedToInvokeLifecycle("start","Mule"),e);
  }
}
