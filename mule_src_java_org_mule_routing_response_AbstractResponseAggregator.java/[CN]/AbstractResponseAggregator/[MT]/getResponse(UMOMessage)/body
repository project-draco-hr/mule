{
  String messageId=null;
  try {
    messageId=message.getUniqueId();
    if (logger.isDebugEnabled()) {
      logger.debug("Waiting for response for message id: " + messageId + " in "+ this);
    }
  }
 catch (  UniqueIdNotSupportedException e) {
    throw new RoutingException("Failed to receive response for message id: " + e.getMessage(),e);
  }
  Sync s=(Sync)locks.get(messageId);
  if (s == null) {
    logger.debug("Got response but no one is waiting for it yet. Creating latch for " + messageId + " in "+ this);
    s=new Latch();
    locks.put(messageId,s);
  }
 else {
    logger.debug("Got latch for message: " + messageId);
  }
  boolean b=false;
  try {
    logger.debug("Waiting for response to message: " + messageId);
    if (timeout >= 0) {
      s.acquire();
      b=true;
    }
 else {
      b=s.attempt(timeout);
    }
  }
 catch (  InterruptedException e) {
    logger.error(e.getMessage(),e);
  }
  if (!b) {
    throw new ResponseTimeoutException("Response timed out waiting for message response id: " + messageId);
  }
  UMOMessage result=(UMOMessage)responseEvents.get(messageId);
  locks.remove(messageId);
  if (result == null) {
    throw new IllegalStateException("Response Message is null");
  }
  return result;
}
