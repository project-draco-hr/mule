{
  String inbound=currentElement.getAttributeValue(MuleTag.ATTRIBUTE_INBOUNDENDPOINT);
  if (inbound != null) {
    GraphNode in=environment.getEndpointRegistry().getEndpoint(inbound,parent.getInfo().getHeader());
    if (in == null) {
      in=graph.addNode();
      in.getInfo().setCaption(inbound);
      environment.getEndpointRegistry().addEndpoint(inbound,in);
    }
    addEdge(graph,in,parent,"in",isTwoWay(null));
  }
  String outbound=currentElement.getAttributeValue(MuleTag.ATTRIBUTE_OUTBOUNDENDPOINT);
  if (outbound != null) {
    GraphNode out=environment.getEndpointRegistry().getEndpoint(outbound,parent.getInfo().getHeader());
    if (out == null) {
      out=graph.addNode();
      out.getInfo().setCaption(outbound);
      environment.getEndpointRegistry().addEndpoint(outbound,out);
    }
    addEdge(graph,parent,out,"out",isTwoWay(null));
  }
  String inboundTransformers=currentElement.getAttributeValue("inboundTransformer");
  if (inboundTransformers != null) {
    String[] transformers=inboundTransformers.split(" ");
    StringBuffer caption=new StringBuffer();
    for (int i=0; i < transformers.length; i++) {
      caption.append("transformer " + i + " : "+ transformers[i]+ "\n");
    }
    parent.getInfo().setCaption(parent.getInfo().getCaption() + "\n" + caption.toString());
  }
  GraphNode[] virtual=environment.getEndpointRegistry().getVirtualEndpoint(parent.getInfo().getHeader());
  if (virtual.length > 0) {
    for (int i=0; i < virtual.length; i++) {
      addEdge(graph,parent,virtual[i],"out (dynamic)",false);
    }
  }
}
