{
  TestClass testClass=new TestClass(isolatedTestClass);
  Class<? extends Annotation> artifactContextAwareAnn=(Class<? extends Annotation>)artifactClassLoaderHolder.loadClassWithApplicationClassLoader(annotationClass.getName());
  List<FrameworkMethod> contextAwareMethods=testClass.getAnnotatedMethods(artifactContextAwareAnn);
  if (contextAwareMethods.size() != 1) {
    throw new IllegalStateException("Isolation tests need to have one method marked with annotation " + annotationClass.getName());
  }
  final FrameworkMethod method=contextAwareMethods.get(0);
  if (!method.isStatic() || method.isPublic()) {
    throw new IllegalStateException("Method marked with annotation " + annotationClass.getName() + " should be private static and receive a parameter of type "+ expectedParamType);
  }
  return method;
}
