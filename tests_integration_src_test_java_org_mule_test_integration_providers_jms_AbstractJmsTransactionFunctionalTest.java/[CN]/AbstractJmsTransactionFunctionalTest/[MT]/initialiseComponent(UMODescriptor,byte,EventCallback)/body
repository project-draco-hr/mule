{
  JMSMessageToObject inTrans=new JMSMessageToObject();
  ObjectToJMSMessage outTrans=new ObjectToJMSMessage();
  UMOEndpoint endpoint=new MuleEndpoint("testIn",getInDest(),connector,inTrans,UMOEndpoint.ENDPOINT_TYPE_RECEIVER,0,null,null);
  UMOTransactionConfig txConfig=new MuleTransactionConfig();
  txConfig.setFactory(getTransactionFactory());
  txConfig.setAction(txBeginAction);
  UMOEndpoint outProvider=new MuleEndpoint("testOut",getOutDest(),connector,outTrans,UMOEndpoint.ENDPOINT_TYPE_SENDER,0,null,null);
  endpoint.setTransactionConfig(txConfig);
  descriptor.setOutboundRouter(new OutboundMessageRouter());
  OutboundPassThroughRouter router=new OutboundPassThroughRouter();
  router.addEndpoint(outProvider);
  descriptor.getOutboundRouter().addRouter(router);
  descriptor.setInboundRouter(new InboundMessageRouter());
  descriptor.getInboundRouter().addEndpoint(endpoint);
  HashMap props=new HashMap();
  props.put("eventCallback",callback);
  descriptor.setProperties(props);
  UMOComponent component=model.registerComponent(descriptor);
  return component;
}
