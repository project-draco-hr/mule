{
  final String expression="#[policyAware]";
  OnNoTokenPolicyAware policyAware=mock(OnNoTokenPolicyAware.class);
  when(policyAware.getOnNoTokenPolicy()).thenReturn(OnNoTokenPolicy.STOP_FLOW);
  MuleEvent event=mock(MuleEvent.class,RETURNS_DEEP_STUBS);
  MuleContext muleContext=mock(MuleContext.class,RETURNS_DEEP_STUBS);
  when(muleContext.getExpressionManager().evaluate(expression,event,true)).thenReturn(policyAware);
  DevkitBasedMessageProcessor processor=new UnauthorizedProcessor("forbidden");
  processor.setMuleContext(muleContext);
  processor.setModuleObject(expression);
  MuleEvent responseEvent=processor.process(event);
  assertThat("event should be filtered because STOP_FLOW was used",responseEvent,is(nullValue()));
}
