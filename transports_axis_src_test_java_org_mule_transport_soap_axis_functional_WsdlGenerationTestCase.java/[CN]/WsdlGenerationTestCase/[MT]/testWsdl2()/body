{
  Map props=new HashMap();
  props.put(HttpConnector.HTTP_METHOD_PROPERTY,"GET");
  MuleClient client=new MuleClient(muleContext);
  MuleMessage result=client.send("http://localhost:" + getPorts().get(1) + "/services/EchoService2?wsdl",null,props);
  assertNotNull(result);
  String wsdl=result.getPayloadAsString();
  Document doc=DocumentHelper.parseText(wsdl);
  assertEquals("http://simple.component.api.mule.org",doc.valueOf("/wsdl:definitions/@targetNamespace"));
  assertEquals("mulePortType",doc.valueOf("/wsdl:definitions/wsdl:portType/@name"));
  assertEquals("http://simple.component.api.mule.org",doc.valueOf("/wsdl:definitions/wsdl:binding/wsdl:operation[@name='echo']/wsdl:input[@name='echoRequest']/wsdlsoap:body/@namespace"));
  assertEquals("http://simple.component.api.mule.org",doc.valueOf("/wsdl:definitions/wsdl:binding/wsdl:operation[@name='echo']/wsdl:output[@name='echoResponse']/wsdlsoap:body/@namespace"));
  assertEquals("muleService",doc.valueOf("/wsdl:definitions/wsdl:service/@name"));
  assertEquals("muleServicePort",doc.valueOf("/wsdl:definitions/wsdl:service/wsdl:port/@name"));
  assertEquals("http://localhost:" + getPorts().get(1) + "/services/EchoService2",doc.valueOf("/wsdl:definitions/wsdl:service/wsdl:port/wsdlsoap:address/@location"));
}
