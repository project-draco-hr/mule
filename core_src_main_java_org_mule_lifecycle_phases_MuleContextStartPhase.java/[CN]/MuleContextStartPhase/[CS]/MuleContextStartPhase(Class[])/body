{
  super(Startable.PHASE_NAME,Startable.class,Stoppable.PHASE_NAME);
  Set startOrderedObjects=new LinkedHashSet();
  startOrderedObjects.add(new NotificationLifecycleObject(Connector.class));
  startOrderedObjects.add(new NotificationLifecycleObject(Agent.class));
  try {
    startOrderedObjects.add(new NotificationLifecycleObject(Model.class,MuleContextNotification.class,MuleContextNotification.CONTEXT_STARTING_MODELS,MuleContextNotification.CONTEXT_STARTED_MODELS));
  }
 catch (  IllegalStateException e) {
  }
  startOrderedObjects.add(new NotificationLifecycleObject(Service.class));
  startOrderedObjects.add(new NotificationLifecycleObject(Startable.class));
  setIgnoredObjectTypes(ignorredObjects);
  setOrderedLifecycleObjects(startOrderedObjects);
  registerSupportedPhase(Stoppable.PHASE_NAME);
  registerSupportedPhase(Initialisable.PHASE_NAME);
}
