{
  if (contextProperties != null) {
    for (    Map.Entry<String,Object> parameter : contextProperties.entrySet()) {
      String key=parameter.getKey();
      Object o=evaluateTransformParameter(key,parameter.getValue(),message);
      if (o == null) {
        logger.warn(String.format("Cannot bind parameter '%s' because it's value resolved to null",key));
        continue;
      }
      QName paramKey=new QName(key);
      if (o instanceof String) {
        transformer.bindAtomicValue(paramKey,o.toString(),connection.createAtomicType(XQItemType.XQBASETYPE_STRING));
      }
 else       if (o instanceof Boolean) {
        transformer.bindBoolean(paramKey,((Boolean)o).booleanValue(),connection.createAtomicType(XQItemType.XQBASETYPE_BOOLEAN));
      }
 else       if (o instanceof Byte) {
        transformer.bindByte(paramKey,((Byte)o).byteValue(),connection.createAtomicType(XQItemType.XQBASETYPE_BYTE));
      }
 else       if (o instanceof Short) {
        transformer.bindShort(paramKey,((Short)o).shortValue(),connection.createAtomicType(XQItemType.XQBASETYPE_SHORT));
      }
 else       if (o instanceof Integer) {
        transformer.bindInt(paramKey,((Integer)o).intValue(),connection.createAtomicType(XQItemType.XQBASETYPE_INT));
      }
 else       if (o instanceof Long) {
        transformer.bindLong(paramKey,((Long)o).longValue(),connection.createAtomicType(XQItemType.XQBASETYPE_LONG));
      }
 else       if (o instanceof Float) {
        transformer.bindFloat(paramKey,((Float)o).floatValue(),connection.createAtomicType(XQItemType.XQBASETYPE_FLOAT));
      }
 else       if (o instanceof Double) {
        transformer.bindDouble(paramKey,((Double)o).doubleValue(),connection.createAtomicType(XQItemType.XQBASETYPE_DOUBLE));
      }
 else       if (o instanceof Document) {
        transformer.bindDocument(paramKey,new DOMSource(((Document)o).getFirstChild()),connection.createNodeType());
      }
 else       if (o instanceof Node) {
        transformer.bindDocument(paramKey,new DOMSource((Node)o),connection.createNodeType());
      }
 else {
        logger.warn(String.format("Cannot bind value for key '%s' because type '%s' is not supported",key,o.getClass().getName()));
      }
    }
  }
}
