{
  try {
    XQPreparedExpression transformer=null;
    try {
      transformer=(XQPreparedExpression)transformerPool.borrowObject();
      bindParameters(transformer,message);
      bindDocument(message.getPayload(),transformer);
      XQResultSequence result=transformer.executeQuery();
      List results=new ArrayList();
      while (result.next()) {
        XQItem item=result.getItem();
        Class type=returnType.getType();
        if (Node.class.isAssignableFrom(type) || Node[].class.isAssignableFrom(type)) {
          results.add(item.getNode());
        }
 else         if (String.class.isAssignableFrom(type) || String[].class.isAssignableFrom(type)) {
          results.add(item.getItemAsString());
        }
 else         if (XMLStreamReader.class.isAssignableFrom(type) || XMLStreamReader[].class.isAssignableFrom(type)) {
          try {
            results.add(item.getItemAsStream());
          }
 catch (          XQException e) {
            throw new TransformerException(XmlMessages.streamNotAvailble(getName()));
          }
        }
 else {
          try {
            results.add(item.getObject());
          }
 catch (          XQException e) {
            throw new TransformerException(XmlMessages.objectNotAvailble(getName()));
          }
        }
        if (!type.isArray()) {
          break;
        }
      }
      if (returnType.getType().isArray()) {
        return results.toArray();
      }
      if (results.size() == 1) {
        return results.get(0);
      }
 else       if (results.size() == 0) {
        return null;
      }
 else {
        return results.toArray();
      }
    }
  finally {
      if (transformer != null) {
        if (transformer.getWarnings() != null) {
          logger.warn(transformer.getWarnings().getMessage(),transformer.getWarnings().fillInStackTrace());
        }
        unbindParameters(transformer);
        transformerPool.returnObject(transformer);
      }
    }
  }
 catch (  Exception e) {
    throw new TransformerException(this,e);
  }
}
