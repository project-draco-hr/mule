{
  MuleMessage message3=new DefaultMuleMessage(grapeFruit,muleContext);
  MuleMessage message4=new DefaultMuleMessage(orange,muleContext);
  MuleMessageCollection messageCollection1=Mockito.mock(MuleMessageCollection.class);
  Mockito.when(messageCollection1.getPayload()).thenReturn(new Fruit[]{apple,banana});
  DefaultMessageCollection messageCollectionUnderTest=new DefaultMessageCollection(muleContext);
  messageCollectionUnderTest.addMessage(messageCollection1);
  messageCollectionUnderTest.addMessage(message3);
  messageCollectionUnderTest.addMessage(message4);
  assertEquals(3,messageCollectionUnderTest.getMessageList().size());
  assertSame(messageCollection1,messageCollectionUnderTest.getMessage(0));
  assertSame(message3,messageCollectionUnderTest.getMessage(1));
  assertSame(message4,messageCollectionUnderTest.getMessage(2));
  assertEquals(3,messageCollectionUnderTest.getPayloadList().size());
  assertTrue(messageCollectionUnderTest.getPayload() instanceof List<?>);
  assertSame(apple,((Fruit[])((List)messageCollectionUnderTest.getPayload()).get(0))[0]);
  assertSame(banana,((Fruit[])((List)messageCollectionUnderTest.getPayload()).get(0))[1]);
  assertSame(grapeFruit,((List)messageCollectionUnderTest.getPayload()).get(1));
  assertSame(orange,((List)messageCollectionUnderTest.getPayload()).get(2));
}
