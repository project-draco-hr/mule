{
  Object m=errorMappings.get(protocol);
  if (m != null) {
    if (m instanceof Properties) {
      return (Properties)m;
    }
 else {
      return null;
    }
  }
 else {
    InputStream is=SpiUtils.findServiceDescriptor("org/mule/config",protocol + "-exception-mappings.properties",ExceptionHelper.class);
    if (is == null) {
      errorMappings.put(protocol,"not found");
      logger.warn("Failed to load error mappings from: META-INF/services/org/mule/config/" + protocol + "-exception-mappings.properties. This may be because there are no error code mappings for protocol: "+ protocol);
      return null;
    }
    Properties p=new Properties();
    try {
      p.load(is);
    }
 catch (    IOException e) {
      throw new MuleRuntimeException(Message.createStaticMessage("Failed to load Exception resources"),e);
    }
    errorMappings.put(protocol,p);
    String applyTo=p.getProperty(APPLY_TO_PROPERTY,null);
    if (applyTo != null) {
      String[] protocols=Utility.split(applyTo,",");
      for (int i=0; i < protocols.length; i++) {
        errorMappings.put(protocols[i],p);
      }
    }
    return p;
  }
}
