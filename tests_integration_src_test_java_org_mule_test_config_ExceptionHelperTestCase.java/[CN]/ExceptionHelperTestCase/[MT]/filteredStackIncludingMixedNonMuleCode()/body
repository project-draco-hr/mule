{
  int calls=5;
  try {
    generateStackEntries(calls,new Closure(){
      @Override public void execute(      Object input){
        Comparable exceptionComparable=new Comparable(){
          @Override public int compareTo(          Object o){
            throw new RuntimeException(new DefaultMuleException(I18nMessageFactory.createStaticMessage("foo")));
          }
        }
;
        Collections.sort(Arrays.asList(exceptionComparable,exceptionComparable),ComparableComparator.getInstance());
      }
    }
);
    fail("Expected exception");
  }
 catch (  Exception e) {
    assertThat(ExceptionHelper.getExceptionStack(e),StringByLineMatcher.matchesLineByLine("foo \\(org.mule.runtime.core.api.DefaultMuleException\\)","  org.mule.test.config.ExceptionHelperTestCase\\$2\\$1.compareTo\\(ExceptionHelperTestCase.java:[0-9]+\\)","  org.apache.commons.collections.comparators.ComparableComparator.compare\\(ComparableComparator.java:[0-9]+\\)","  java.util.*","  java.util.*","  java.util.*","  java.util.*","  java.util.*","  org.mule.test.config.ExceptionHelperTestCase\\$2.execute\\(ExceptionHelperTestCase.java:[0-9]+\\)","  org.mule.test.config.ExceptionHelperTestCase.generateStackEntries\\(ExceptionHelperTestCase.java:[0-9]+\\)","  \\(" + (calls + 13) + " more...\\)"));
  }
}
