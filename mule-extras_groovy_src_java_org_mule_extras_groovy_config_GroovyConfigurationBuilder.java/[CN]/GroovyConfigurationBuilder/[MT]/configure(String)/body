{
  String script=null;
  try {
    String[] scripts=Utility.split(configResources,",");
    for (int i=0; i < scripts.length; i++) {
      script=scripts[i];
      File f=new File(script);
      GroovyShell shell=new GroovyShell(getClass().getClassLoader());
      Script s=null;
      if (f.exists()) {
        s=shell.parse(new GroovyCodeSource(f));
      }
 else {
        URL url=ClassHelper.getResource(script,getClass());
        if (url == null) {
          throw new ConfigurationException(new Message(Messages.CANT_LOAD_X_FROM_CLASSPATH_FILE,script));
        }
        s=shell.parse(new GroovyCodeSource(url));
      }
      s.run();
    }
  }
 catch (  Exception e) {
    throw new ConfigurationException(new Message(Messages.FAILED_LOAD_X,"Script: " + script),e);
  }
  try {
    MuleManager.getInstance().start();
  }
 catch (  UMOException e) {
    throw new ConfigurationException(new Message(Messages.FAILED_TO_START_X,"Mule Server from builder"),e);
  }
  return MuleManager.getInstance();
}
