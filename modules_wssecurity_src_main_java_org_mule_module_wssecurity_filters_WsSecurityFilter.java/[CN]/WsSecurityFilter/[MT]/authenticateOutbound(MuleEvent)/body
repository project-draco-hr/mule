{
  if (event.getEndpoint().getConnector() instanceof XFireConnector) {
    XFireConnector connector=(XFireConnector)event.getEndpoint().getConnector();
    if (connector.getXfire() != null) {
      List clientHandlers=new ArrayList();
      List existingOutHandlers=connector.getClientOutHandlers();
      clientHandlers.add("org.codehaus.xfire.util.dom.DOMOutHandler");
      clientHandlers.add("org.codehaus.xfire.security.wss4j.WSS4JOutHandler");
      if (existingOutHandlers == null) {
        connector.setClientOutHandlers(clientHandlers);
      }
 else       if (!existingOutHandlers.contains("org.codehaus.xfire.security.wss4j.WSS4JOutHandler")) {
        connector.setClientOutHandlers(clientHandlers);
      }
      Properties props=new Properties();
      if (addOutboundProperties != null) {
        logger.warn("Properties set on the Security Filter will override those set on the message");
        props.putAll(getAddOutboundProperties());
        event.getMessage().addProperties(props);
      }
    }
  }
 else   if (event.getEndpoint().getConnector() instanceof AxisConnector) {
    AxisConnector connector=(AxisConnector)event.getEndpoint().getConnector();
    if (connector.getClientProvider() != null) {
      String[] processString=event.getEndpoint().getEndpointURI().toString().split("://");
      while (processString.length > 1) {
        processString=processString[1].split("/");
      }
      Hashtable options=new Hashtable();
      if (addOutboundProperties != null) {
        logger.warn("Properties set on the Security Filter will override those set on the message");
        options.putAll(getAddOutboundProperties());
        event.getMessage().addProperties(options);
      }
      Handler outHandler=new WSDoAllSender();
      connector.getClientProvider().setGlobalRequest(outHandler);
    }
  }
}
