{
  super.doSetUp();
  session=MuleTestUtils.getMockSession();
  router=new ChainingRouter();
  DefaultOutboundRouterCollection messageRouter=new DefaultOutboundRouterCollection();
  messageRouter.setCatchAllStrategy(new LoggingCatchAllStrategy());
  OutboundEndpoint endpoint1=getTestOutboundEndpoint("Test1Provider","test://test?exchange-pattern=request-response");
  assertNotNull(endpoint1);
  OutboundEndpoint endpoint2=getTestOutboundEndpoint("Test2Provider","test://test?exchange-pattern=request-response");
  assertNotNull(endpoint2);
  mockendpoint1=RouterTestUtils.getMockEndpoint(endpoint1);
  mockendpoint2=RouterTestUtils.getMockEndpoint(endpoint2);
  PayloadTypeFilter filter=new PayloadTypeFilter(String.class);
  router.setFilter(filter);
  endpoints=new ArrayList<OutboundEndpoint>();
  endpoints.add((OutboundEndpoint)mockendpoint1.proxy());
  endpoints.add((OutboundEndpoint)mockendpoint2.proxy());
  router.setTargets(new ArrayList<MessageProcessor>(endpoints));
  assertEquals(filter,router.getFilter());
  session.matchAndReturn("getFlowConstruct",getTestService("TEST",Apple.class));
}
