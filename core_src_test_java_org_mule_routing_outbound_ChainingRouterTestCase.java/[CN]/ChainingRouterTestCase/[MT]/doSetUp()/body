{
  super.doSetUp();
  session=mock(MuleSession.class);
  router=new ChainingRouter();
  router.setMuleContext(muleContext);
  DefaultOutboundRouterCollection messageRouter=new DefaultOutboundRouterCollection();
  messageRouter.setCatchAllStrategy(new LoggingCatchAllStrategy());
  OutboundEndpoint endpoint1=getTestOutboundEndpoint("Test1Provider","test://test?exchangePattern=request-response");
  assertNotNull(endpoint1);
  mockEndpoint1=RouterTestUtils.createMockEndpoint(endpoint1);
  OutboundEndpoint endpoint2=getTestOutboundEndpoint("Test2Provider","test://test?exchangePattern=request-response");
  assertNotNull(endpoint2);
  mockEndpoint2=RouterTestUtils.createMockEndpoint(endpoint2);
  PayloadTypeFilter filter=new PayloadTypeFilter(String.class);
  router.setFilter(filter);
  endpoints=new ArrayList<OutboundEndpoint>();
  endpoints.add(mockEndpoint1);
  endpoints.add(mockEndpoint2);
  router.setRoutes(new ArrayList<MessageProcessor>(endpoints));
  assertEquals(filter,router.getFilter());
}
