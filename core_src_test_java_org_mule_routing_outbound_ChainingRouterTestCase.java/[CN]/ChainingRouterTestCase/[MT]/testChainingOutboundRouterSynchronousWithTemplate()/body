{
  OutboundEndpoint endpoint3=getTestOutboundEndpoint("Test3Provider","test://foo?[barValue]&exchangePattern=request-response");
  assertNotNull(endpoint3);
  mockEndpoint3=RouterTestUtils.createMockEndpoint(endpoint3);
  router.addRoute(mockEndpoint3);
  Map<String,Object> messageProperties=new HashMap<String,Object>();
  messageProperties.put("barValue","bar");
  MuleMessage message=new DefaultMuleMessage("test event",messageProperties,muleContext);
  assertTrue(router.isMatch(message));
  MuleEvent responseEvent=new OutboundRoutingTestEvent(message,session,muleContext);
  ImmutableEndpoint ep=(ImmutableEndpoint)router.getRoute(2,responseEvent);
  assertEquals("test://foo?bar&exchangePattern=request-response",ep.getEndpointURI().toString());
  when(mockEndpoint1.process(any(MuleEvent.class))).thenAnswer(new MuleEventCheckAnswer(responseEvent));
  when(mockEndpoint2.process(any(MuleEvent.class))).thenAnswer(new MuleEventCheckAnswer(responseEvent));
  when(mockEndpoint3.process(any(MuleEvent.class))).thenAnswer(new MuleEventCheckAnswer(responseEvent));
  final MuleEvent result=router.route(new OutboundRoutingTestEvent(message,session,muleContext));
  assertNotNull("This is a sync call, we need a result returned.",result);
  assertEquals(message,result.getMessage());
}
