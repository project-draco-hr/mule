{
  try {
    final Marshaller m=jaxbContext.createMarshaller();
    if (getReturnDataType().getType().equals(String.class)) {
      Writer w=new StringWriter();
      m.marshal(src,w);
      return w.toString();
    }
 else     if (getReturnDataType().getType().isAssignableFrom(Writer.class)) {
      Writer w=new StringWriter();
      m.marshal(src,w);
      return w;
    }
 else     if (Document.class.isAssignableFrom(getReturnDataType().getType())) {
      DocumentBuilderFactory factory=DocumentBuilderFactory.newInstance();
      Document doc=factory.newDocumentBuilder().newDocument();
      m.marshal(src,doc);
      return doc;
    }
 else     if (OutputStream.class.isAssignableFrom(getReturnDataType().getType())) {
      ByteArrayOutputStream out=new ByteArrayOutputStream();
      m.marshal(src,out);
      return out;
    }
 else     if (OutputHandler.class.equals(getReturnDataType().getType())) {
      return new OutputHandler(){
        public void write(        MuleEvent event,        OutputStream out) throws IOException {
          try {
            m.marshal(src,out);
          }
 catch (          JAXBException e) {
            IOException iox=new IOException("failed to mashal objec tto XML");
            iox.initCause(e);
            throw iox;
          }
        }
      }
;
    }
 else {
      throw new TransformerException(CoreMessages.transformerInvalidReturnType(getReturnDataType().getType(),getName()));
    }
  }
 catch (  Exception e) {
    throw new TransformerException(this,e);
  }
}
