{
  when(configurationInstance.getStatistics()).thenReturn(configurationStats);
  when(configurationInstance.getName()).thenReturn(DUMMY_NAME);
  when(configurationInstance.getModel()).thenReturn(configurationModel);
  when(configurationModel.getExtensionModel()).thenReturn(extensionModel);
  when(extensionModel.getName()).thenReturn(DUMMY_NAME);
  when(extensionModel.getExceptionEnricherFactory()).thenReturn(empty());
  when(operationModel.getExceptionEnricherFactory()).thenReturn(empty());
  when(operationExecutor.execute(operationContext)).thenReturn(result);
  when(operationExceptionExecutor.execute(operationContext)).thenThrow(exception);
  when(operationContext.getConfiguration()).thenReturn(Optional.of(configurationInstance));
  when(operationContext.getExtensionModel().getName()).thenReturn(DUMMY_NAME);
  when(operationContext.getTransactionConfig()).thenReturn(empty());
  mediator=new DefaultExecutionMediator(extensionModel,operationModel,new DefaultConnectionManager(muleContext));
  final CachedConnectionProviderWrapper<Object> connectionProviderWrapper=new CachedConnectionProviderWrapper<>(null,false,new SimpleRetryPolicyTemplate(10,RETRY_COUNT));
  LifecycleUtils.initialiseIfNeeded(connectionProviderWrapper,true,muleContext);
  Optional<ConnectionProvider> connectionProvider=Optional.of(connectionProviderWrapper);
  when(configurationInstance.getConnectionProvider()).thenReturn(connectionProvider);
  when(exceptionEnricher.enrichException(exception)).thenReturn(new HeisenbergException(ERROR));
  setInterceptors((Interceptable)configurationInstance,configurationInterceptor1,configurationInterceptor2);
  setInterceptors((Interceptable)operationExecutor,operationInterceptor1,operationInterceptor2);
  defineOrder(configurationInterceptor1,configurationInterceptor2,operationInterceptor1,operationInterceptor2);
}
