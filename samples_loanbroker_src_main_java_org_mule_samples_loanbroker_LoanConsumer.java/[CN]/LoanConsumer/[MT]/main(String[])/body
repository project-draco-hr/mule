{
  LoanConsumer loanConsumer=null;
  try {
    String config=SystemUtils.getCommandLineOption("-config",args);
    if (StringUtils.isNotBlank(config)) {
      loanConsumer=new LoanConsumer(config);
      int i=100;
      String requests=SystemUtils.getCommandLineOption("-req",args);
      if (requests != null) {
        i=Integer.parseInt(requests);
      }
      String sync=SystemUtils.getCommandLineOption("-sync",args);
      if (sync != null) {
        synchronous=Boolean.valueOf(sync).booleanValue();
      }
      if (synchronous) {
        long start=System.currentTimeMillis();
        List results=loanConsumer.requestSend(i,"vm://LoanBrokerRequests");
        System.out.println("Number or quotes received: " + results.size());
        List output=new ArrayList(results.size());
        int x=1;
        for (Iterator iterator=results.iterator(); iterator.hasNext(); x++) {
          LoanQuote quote=(LoanQuote)iterator.next();
          output.add(x + ". " + quote.toString());
        }
        System.out.println(StringMessageUtils.getBoilerPlate(output,'*',80));
        long cur=System.currentTimeMillis();
        System.out.println(DateUtils.getFormattedDuration(cur - start));
        System.out.println("Avg request: " + ((cur - start) / x));
      }
 else {
        loanConsumer.requestDispatch(i,"vm://LoanBrokerRequests");
      }
    }
 else {
      loanConsumer=new LoanConsumer(getInteractiveConfig());
      loanConsumer.run(synchronous);
    }
  }
 catch (  Exception e) {
    System.err.println(e.getMessage());
    e.printStackTrace(System.err);
    System.exit(1);
  }
}
