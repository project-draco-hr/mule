{
  readWriteLock.readLock().lock();
  String cacheKey=getDataTypeSourceResultPairHash(source,result);
  if (lruMap.containsKey(cacheKey)) {
    return (Transformer)lruMap.get(cacheKey);
  }
  try {
    Transformer nearestTransformerMatch=null;
    List<List<TransformationEdge>> transformationPaths=findTransformationPaths(source,result);
    if (transformationPaths.size() != 0) {
      sortTransformationPathsByLength(transformationPaths);
      List<Transformer> transformers=createTransformers(getShortestTransformationPaths(transformationPaths));
      nearestTransformerMatch=getNearestTransformerMatch(transformers,source.getType(),result.getType());
    }
    lruMap.put(cacheKey,nearestTransformerMatch);
    return nearestTransformerMatch;
  }
  finally {
    readWriteLock.readLock().unlock();
  }
}
