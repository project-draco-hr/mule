{
  try {
    Message messages[]=event.getMessages();
    List<Message> processedMessages=new ArrayList<Message>();
    if (messages != null) {
      MuleMessage message=null;
      for (int i=0; i < messages.length; i++) {
        if (getLifecycleState().isStopping() || getLifecycleState().isStopped()) {
          break;
        }
        try {
          if (!messages[i].getFlags().contains(Flags.Flag.DELETED) && !messages[i].getFlags().contains(Flags.Flag.SEEN)) {
            try {
              MimeMessage mimeMessage=new MimeMessage((MimeMessage)messages[i]);
              storeMessage(mimeMessage);
              message=createMuleMessage(mimeMessage,endpoint.getEncoding());
              if (castConnector().isDeleteReadMessages()) {
                if (moveToFolder != null) {
                  folder.copyMessages(new Message[]{messages[i]},moveToFolder);
                }
                messages[i].setFlag(Flags.Flag.DELETED,true);
              }
 else {
                if (this.getEndpoint().getFilter() != null && this.getEndpoint().getFilter().accept(message)) {
                  Flags.Flag flag=castConnector().getDefaultProcessMessageAction();
                  if (flag != null) {
                    if (flag == Flags.Flag.DELETED && moveToFolder != null) {
                      folder.copyMessages(new Message[]{messages[i]},moveToFolder);
                    }
                    messages[i].setFlag(flag,true);
                  }
                }
 else {
                  messages[i].setFlag(Flags.Flag.SEEN,true);
                  processedMessages.add(messages[i]);
                }
              }
              routeMessage(message);
            }
 catch (            org.mule.api.MessagingException e) {
            }
catch (            Exception e) {
              connector.getMuleContext().getExceptionListener().handleException(e);
              throw e;
            }
          }
        }
 catch (        MuleException e) {
          throw e;
        }
catch (        Exception e) {
          Exception forwarded;
          if (message != null) {
            forwarded=new org.mule.api.MessagingException(EmailMessages.routingError(),message,e);
          }
 else {
            forwarded=new ReceiveException(endpoint,-1,e);
          }
          throw forwarded;
        }
      }
      if (moveToFolder != null) {
        folder.copyMessages(processedMessages.toArray(new Message[processedMessages.size()]),moveToFolder);
      }
    }
  }
 catch (  Exception e) {
    throw new MuleRuntimeException(e);
  }
}
