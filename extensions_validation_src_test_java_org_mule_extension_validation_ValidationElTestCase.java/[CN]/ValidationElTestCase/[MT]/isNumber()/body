{
  final String expression="#[validator.isNumber(payload, numberType, minValue, maxValue)]";
  assertNumberValue(expression,NumberType.LONG,Long.MAX_VALUE / 2,Long.MIN_VALUE + 1,Long.MAX_VALUE - 1,Long.MIN_VALUE,Long.MAX_VALUE);
  assertNumberValue(expression,NumberType.INTEGER,Integer.MAX_VALUE / 2,Integer.MIN_VALUE + 1,Integer.MAX_VALUE - 1,Integer.MIN_VALUE,Integer.MAX_VALUE);
  assertNumberValue(expression,NumberType.SHORT,new Short("100"),new Integer(Short.MIN_VALUE + 1).shortValue(),new Integer(Short.MAX_VALUE - 1).shortValue(),Short.MIN_VALUE,Short.MAX_VALUE);
  assertNumberValue(expression,NumberType.DOUBLE,10D,1D,10D,Double.MIN_VALUE,Double.MAX_VALUE);
  assertNumberValue(expression,NumberType.FLOAT,10F,1F,10F,0F,20F);
}
