{
  final MuleEvent event=getTestEvent("authCode");
  DefaultHttpCallbackAdapter adapter=new DefaultHttpCallbackAdapter();
  adapter.setDomain("localhost");
  adapter.setLocalPort(this.localPort.getNumber());
  adapter.setRemotePort(this.remotePort.getNumber());
  adapter.setPath("/testCallback");
  adapter.setConnector(this.httpConnector);
  FetchAccessTokenMessageProcessor fetchMessageProcessor=mock(FetchAccessTokenMessageProcessor.class,RETURNS_DEEP_STUBS);
  when(fetchMessageProcessor.process(any(MuleEvent.class))).thenReturn(event);
  MessageProcessor listener=mock(MessageProcessor.class,withSettings().extraInterfaces(Initialisable.class));
  ((Initialisable)listener).initialise();
  FlowConstruct flowConstruct=mock(FlowConstruct.class);
  HttpCallbackFactory callbackFactory=new DefaultHttpCallbackFactory();
  this.callback=(DefaultHttpCallback)callbackFactory.createCallback(adapter,"(.)",fetchMessageProcessor,listener,muleContext,flowConstruct);
  this.callback.start();
  verify(((Initialisable)listener)).initialise();
  this.callback.getFlow().process(event);
  verify(listener).process(event);
}
