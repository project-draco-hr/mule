{
  AsyncInterceptingMessageProcessor async=new AsyncInterceptingMessageProcessor(muleContext.getDefaultThreadingProfile(),"async",0);
  SensingNullMessageProcessor asyncListener=new SensingNullMessageProcessor();
  async.setListener(asyncListener);
  async.start();
  MuleMessage message=MuleMessage.builder().payload("data").build();
  Flow flow=getTestFlow();
  MuleEvent event=new DefaultMuleEvent(create(flow),message,ONE_WAY,flow);
  event.getSession().setProperty("key","value");
  async.process(event);
  asyncListener.latch.await(RECEIVE_TIMEOUT,TimeUnit.MILLISECONDS);
  MuleEvent asyncEvent=asyncListener.event;
  assertNotSame(asyncEvent,event);
  assertNotSame(asyncEvent,event);
  assertNotSame(asyncEvent.getSession(),event.getSession());
  assertEquals(1,asyncEvent.getSession().getPropertyNamesAsSet().size());
  assertEquals("value",asyncEvent.getSession().getProperty("key"));
  asyncEvent.getSession().setProperty("newKey","newValue");
  assertEquals(2,asyncEvent.getSession().getPropertyNamesAsSet().size());
  assertEquals("newValue",asyncEvent.getSession().getProperty("newKey"));
  assertEquals(1,event.getSession().getPropertyNamesAsSet().size());
  assertNull(event.getSession().getProperty("newKey"));
  async.stop();
}
