{
  MuleMessage message1=MuleMessage.builder().payload("test event A").build();
  MuleEvent event1=MuleEvent.builder(context).message(message1).flow(flow).addFlowVariable("key1","value1").build();
  MuleMessage message2=MuleMessage.builder().payload("test event B").build();
  MuleMessage message3=MuleMessage.builder().payload("test event C").build();
  MuleMessage message4=MuleMessage.builder().payload("test event D").build();
  MuleMessage message5=MuleMessage.builder().payload("test event E").build();
  List<MuleMessage> list=new ArrayList<>();
  list.add(message2);
  list.add(message3);
  MuleMessage messageCollection=MuleMessage.builder().payload(list).build();
  MuleEvent event2=MuleEvent.builder(context).message(messageCollection).flow(flow).addFlowVariable("key2","value2").build();
  List<MuleMessage> list2=new ArrayList<>();
  list.add(message4);
  list.add(message5);
  MuleMessage messageCollection2=MuleMessage.builder().payload(list2).build();
  MuleEvent event3=MuleEvent.builder(context).message(messageCollection2).flow(flow).addFlowVariable("key3","value3").build();
  List<MuleEvent> events=new ArrayList<>();
  events.add(event2);
  events.add(event3);
  MuleEvent result=resultsHandler.aggregateResults(events,event1);
  assertNotNull(result);
  assertEquals(2,((List<MuleMessage>)result.getMessage().getPayload()).size());
  assertTrue(result.getMessage().getPayload() instanceof List<?>);
  assertEquals(messageCollection,((List<MuleMessage>)result.getMessage().getPayload()).get(0));
  assertEquals(messageCollection2,((List<MuleMessage>)result.getMessage().getPayload()).get(1));
  assertThat(result.getFlowVariable("key1"),equalTo("value1"));
  assertThat(result.getFlowVariableNames(),not(contains("key2")));
  assertThat(result.getFlowVariableNames(),not(contains("key3")));
  assertThat(result.getCorrelationId(),equalTo(event1.getCorrelationId()));
}
