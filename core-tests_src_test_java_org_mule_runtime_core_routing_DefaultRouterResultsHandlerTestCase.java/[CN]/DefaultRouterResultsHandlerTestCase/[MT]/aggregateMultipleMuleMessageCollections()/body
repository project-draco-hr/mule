{
  InternalMessage message1=InternalMessage.builder().payload("test event A").build();
  Event event1=Event.builder(context).message(message1).flow(flow).addVariable("key1","value1").build();
  InternalMessage message2=InternalMessage.builder().payload("test event B").build();
  InternalMessage message3=InternalMessage.builder().payload("test event C").build();
  InternalMessage message4=InternalMessage.builder().payload("test event D").build();
  InternalMessage message5=InternalMessage.builder().payload("test event E").build();
  List<InternalMessage> list=new ArrayList<>();
  list.add(message2);
  list.add(message3);
  InternalMessage messageCollection=InternalMessage.builder().payload(list).build();
  Event event2=Event.builder(context).message(messageCollection).flow(flow).addVariable("key2","value2").build();
  List<InternalMessage> list2=new ArrayList<>();
  list.add(message4);
  list.add(message5);
  InternalMessage messageCollection2=InternalMessage.builder().payload(list2).build();
  Event event3=Event.builder(context).message(messageCollection2).flow(flow).addVariable("key3","value3").build();
  List<Event> events=new ArrayList<>();
  events.add(event2);
  events.add(event3);
  Event result=resultsHandler.aggregateResults(events,event1);
  assertNotNull(result);
  assertEquals(2,((List<InternalMessage>)result.getMessage().getPayload().getValue()).size());
  assertTrue(result.getMessage().getPayload().getValue() instanceof List<?>);
  assertEquals(messageCollection,((List<InternalMessage>)result.getMessage().getPayload().getValue()).get(0));
  assertEquals(messageCollection2,((List<InternalMessage>)result.getMessage().getPayload().getValue()).get(1));
  assertThat(result.getVariable("key1").getValue(),equalTo("value1"));
  assertThat(result.getVariableNames(),not(contains("key2")));
  assertThat(result.getVariableNames(),not(contains("key3")));
  assertThat(result.getCorrelationId(),equalTo(event1.getCorrelationId()));
}
