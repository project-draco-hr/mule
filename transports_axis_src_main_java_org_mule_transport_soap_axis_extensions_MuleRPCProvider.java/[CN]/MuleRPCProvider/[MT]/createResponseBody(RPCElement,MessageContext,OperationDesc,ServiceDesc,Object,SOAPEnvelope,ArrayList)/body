{
  String methodName=operation.getName();
  RPCElement resBody=new RPCElement(methodName + "Response");
  resBody.setPrefix(body.getPrefix());
  resBody.setNamespaceURI(body.getNamespaceURI());
  resBody.setEncodingStyle(msgContext.getEncodingStyle());
  try {
    if (operation.getMethod().getReturnType() != Void.TYPE) {
      QName returnQName=operation.getReturnQName();
      if (returnQName == null) {
        String nsp=body.getNamespaceURI();
        if (nsp == null || nsp.length() == 0) {
          nsp=serviceDesc.getDefaultNamespace();
        }
        returnQName=new QName(msgContext.isEncoded() ? "" : nsp,methodName + "Return");
      }
      RPCParam param=new RPCParam(returnQName,objRes);
      param.setParamDesc(operation.getReturnParamDesc());
      if (!operation.isReturnHeader()) {
        if (msgContext.getSOAPConstants() == SOAPConstants.SOAP12_CONSTANTS && (serviceDesc.getStyle().equals(Style.RPC))) {
          RPCParam resultParam=new RPCParam(Constants.QNAME_RPC_RESULT,returnQName);
          resultParam.setXSITypeGeneration(Boolean.FALSE);
          resBody.addParam(resultParam);
        }
        resBody.addParam(param);
      }
 else {
        resEnv.addHeader(new RPCHeaderParam(param));
      }
    }
    if (!outs.isEmpty()) {
      for (Iterator i=outs.iterator(); i.hasNext(); ) {
        RPCParam param=(RPCParam)i.next();
        Holder holder=(Holder)param.getObjectValue();
        Object value=JavaUtils.getHolderValue(holder);
        ParameterDesc paramDesc=param.getParamDesc();
        param.setObjectValue(value);
        if (paramDesc != null && paramDesc.isOutHeader()) {
          resEnv.addHeader(new RPCHeaderParam(param));
        }
 else {
          resBody.addParam(param);
        }
      }
    }
  }
 catch (  Exception e) {
    throw e;
  }
  return resBody;
}
