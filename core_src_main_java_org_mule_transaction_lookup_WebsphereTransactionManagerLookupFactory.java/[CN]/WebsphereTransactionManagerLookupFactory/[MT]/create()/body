{
  Class clazz;
  TransactionManager transactionManager;
  try {
    logger.debug("Trying WebSphere 5.1+: " + FACTORY_CLASS_5_1_AND_ABOVE);
    clazz=ClassUtils.loadClass(FACTORY_CLASS_5_1_AND_ABOVE,this.getClass());
    logger.info("Found WebSphere 5.1+: " + FACTORY_CLASS_5_1_AND_ABOVE);
  }
 catch (  ClassNotFoundException ex) {
    logger.debug("Could not find WebSphere 5.1+ TransactionManager factory class",ex);
    try {
      logger.debug("Trying WebSphere 5.0: " + FACTORY_CLASS_5_0);
      clazz=ClassUtils.loadClass(FACTORY_CLASS_5_0,this.getClass());
      logger.info("Found WebSphere 5.0: " + FACTORY_CLASS_5_0);
    }
 catch (    ClassNotFoundException ex2) {
      logger.debug("Could not find WebSphere 5.0 TransactionManager factory class",ex2);
      try {
        logger.debug("Trying WebSphere 4: " + FACTORY_CLASS_4);
        clazz=ClassUtils.loadClass(FACTORY_CLASS_4,this.getClass());
        logger.info("Found WebSphere 4: " + FACTORY_CLASS_4);
      }
 catch (      ClassNotFoundException ex3) {
        logger.debug("Could not find WebSphere 4 TransactionManager factory class",ex3);
        throw new RuntimeException("Couldn't find any WebSphere TransactionManager factory class, " + "neither for WebSphere version 5.1 nor 5.0 nor 4",ex);
      }
    }
  }
  try {
    Method method=clazz.getMethod("getTransactionManager",null);
    transactionManager=(TransactionManager)method.invoke(null,null);
  }
 catch (  Exception ex) {
    throw new RuntimeException("Found WebSphere TransactionManager factory class [" + clazz.getName() + "], but couldn't invoke its static 'getTransactionManager' method",ex);
  }
  return transactionManager;
}
