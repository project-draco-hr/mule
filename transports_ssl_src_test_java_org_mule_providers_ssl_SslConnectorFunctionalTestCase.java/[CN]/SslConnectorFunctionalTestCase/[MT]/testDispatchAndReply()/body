{
  final CountDownLatch callbackCount=new CountDownLatch(1);
  final AtomicBoolean nonNullOutputStream=new AtomicBoolean(false);
  final AtomicReference certificates=new AtomicReference();
  FunctionalTestComponent ftc=lookupTestComponent("main","testComponent");
  ftc.setEventCallback(new EventCallback(){
    public void eventReceived(    UMOEventContext context,    Object component) throws Exception {
      try {
        String result=FunctionalTestComponent.received(context.getMessageAsString());
        nonNullOutputStream.set(null != context.getOutputStream());
        if (nonNullOutputStream.get()) {
          certificates.set(context.getMessage().getProperty(SslConnector.LOCAL_CERTIFICATES));
          if (!((ResponseOutputStream)context.getOutputStream()).getSocket().isClosed()) {
            context.getOutputStream().write(result.getBytes());
            context.getOutputStream().flush();
          }
        }
      }
  finally {
        callbackCount.countDown();
      }
    }
  }
);
  MuleClient client=new MuleClient();
  UMOMessage response=client.send(getUri().toString(),TEST_MESSAGE,null);
  callbackCount.await(3000,TimeUnit.MILLISECONDS);
  assertEquals(0,callbackCount.getCount());
  assertEquals(TEST_MESSAGE_RESPONSE,response.getPayloadAsString());
  assertTrue("no output stream",nonNullOutputStream.get());
  assertNull("no certificates",certificates.get());
}
