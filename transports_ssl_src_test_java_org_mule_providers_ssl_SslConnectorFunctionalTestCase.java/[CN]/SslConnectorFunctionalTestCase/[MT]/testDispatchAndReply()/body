{
  final CountDownLatch callbackCount=new CountDownLatch(1);
  FunctionalTestComponent ftc=lookupTestComponent("main","testComponent");
  ftc.setEventCallback(new EventCallback(){
    public void eventReceived(    UMOEventContext context,    Object component) throws Exception {
      callbackCount.countDown();
      String result=FunctionalTestComponent.received(context.getMessageAsString());
      assertNotNull(context.getOutputStream());
      assertNotNull(context.getMessage().getProperty(SslConnector.LOCAL_CERTIFICATES));
      if (!((ResponseOutputStream)context.getOutputStream()).getSocket().isClosed()) {
        context.getOutputStream().write(result.getBytes());
        context.getOutputStream().flush();
      }
    }
  }
);
  URI uri=getUri();
  socket=createSocket(uri);
  DataOutputStream dos=new DataOutputStream((socket.getOutputStream()));
  dos.write(TEST_MESSAGE.getBytes());
  dos.flush();
  DataInputStream dis=new DataInputStream(new BufferedInputStream(socket.getInputStream()));
  byte[] buf=new byte[32];
  int x=dis.read(buf);
  assertTrue(x > -1);
  assertEquals(new String(buf,0,x),TEST_MESSAGE_RESPONSE);
  assertEquals(0,callbackCount.getCount());
}
