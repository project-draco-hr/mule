{
  Message result=null;
  try {
    result=new Message(context.getMessageAsString(encoding));
  }
 catch (  UMOException e) {
    throw new TransformerException(this,e);
  }
  if (context.getMessage().getExceptionPayload() != null) {
    result.setError(new XMPPError(503,context.getMessage().getExceptionPayload().getMessage()));
  }
  for (Iterator iterator=context.getMessage().getPropertyNames(); iterator.hasNext(); ) {
    String name=(String)iterator.next();
    if (name.equals(XmppConnector.XMPP_THREAD)) {
      result.setThread((String)context.getMessage().getProperty(name));
    }
 else     if (name.equals(XmppConnector.XMPP_SUBJECT)) {
      result.setSubject((String)context.getMessage().getProperty(name));
    }
 else     if (name.equals(XmppConnector.XMPP_FROM)) {
      result.setFrom((String)context.getMessage().getProperty(name));
    }
 else     if (name.equals(XmppConnector.XMPP_TO)) {
      result.setTo((String)context.getMessage().getProperty(name));
    }
 else {
      result.setProperty(name,context.getMessage().getProperty(name));
    }
  }
  return result;
}
