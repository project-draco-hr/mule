{
  Log.redirectTo(new CommonsLogger());
  URI uri=new URI(StringUtils.stripToEmpty(jmxAdaptorUrl));
  adaptor=new HttpAdaptor(uri.getPort(),uri.getHost());
  XSLTProcessor processor;
  try {
    processor=new XSLTProcessor();
  }
 catch (  TransformerFactoryConfigurationError e) {
    System.setProperty("javax.xml.transform.TransformerFactory",XMLUtils.TRANSFORMER_FACTORY_JDK5);
    processor=new XSLTProcessor();
  }
  if (StringUtils.isNotBlank(xslFilePath)) {
    processor.setFile(xslFilePath.trim());
  }
  if (StringUtils.isNotBlank(pathInJar)) {
    processor.setPathInJar(pathInJar.trim());
  }
  processor.setUseCache(cacheXsl);
  adaptor.setProcessor(processor);
  if (login != null) {
    adaptor.addAuthorization(login,password);
    adaptor.setAuthenticationMethod(authenticationMethod);
  }
  if (socketFactoryProperties != null && !socketFactoryProperties.isEmpty()) {
    SSLAdaptorServerSocketFactoryMBean factory=new SSLAdaptorServerSocketFactory();
    BeanUtils.populateWithoutFail(factory,socketFactoryProperties,true);
    adaptor.setSocketFactory(factory);
  }
  return adaptor;
}
