{
  if (StringUtils.isBlank(key)) {
    logger.warn("Attempt to register object with no key");
    return;
  }
  logger.debug("registering object");
  if (MuleServer.getMuleContext().isInitialised() || MuleServer.getMuleContext().isInitialising()) {
    logger.debug("applying processors");
    object=applyProcessors(object);
  }
synchronized (registry) {
    if (registry.containsKey(key)) {
      logger.warn("TransientRegistry already contains an object named '" + key + "'.  The previous object will be overwritten.");
    }
    registry.put(key,object);
  }
  try {
    MuleContext mc=MuleServer.getMuleContext();
    logger.debug("context: " + mc);
    if (mc != null) {
      logger.debug("applying lifecycle");
      mc.getLifecycleManager().applyCompletedPhases(object);
    }
 else {
      throw new RegistrationException("Unable to register object (\"" + key + ":"+ ClassUtils.getSimpleName(object.getClass())+ "\") because MuleContext has not yet been created.");
    }
  }
 catch (  MuleException e) {
    throw new RegistrationException(e);
  }
}
