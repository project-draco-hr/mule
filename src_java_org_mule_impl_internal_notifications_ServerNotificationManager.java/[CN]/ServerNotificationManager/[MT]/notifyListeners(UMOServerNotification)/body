{
  TreeMap listeners;
  String subscription=null;
  Class listenerClass=null;
  Map.Entry entry=null;
  for (Iterator iterator=eventsMap.entrySet().iterator(); iterator.hasNext(); ) {
    entry=(Map.Entry)iterator.next();
    Class eventClass=(Class)entry.getValue();
    if (eventClass.isAssignableFrom(notification.getClass())) {
      listenerClass=(Class)entry.getKey();
      break;
    }
  }
  if (listenerClass == null) {
    logger.error(new NotificationException(new Message(Messages.EVENT_TYPE_X_NOT_RECOGNISED,notification.getClass().getName())));
    return;
  }
  try {
    listeners=getListeners(listenerClass);
  }
 catch (  NotificationException e) {
    logger.error(e.getMessage(),e);
    return;
  }
  UMOServerNotificationListener l;
synchronized (listeners) {
    for (Iterator iterator=listeners.keySet().iterator(); iterator.hasNext(); ) {
      l=(UMOServerNotificationListener)iterator.next();
      subscription=(String)listeners.get(l);
      if (subscription == null) {
        subscription=NULL_SUBSCRIPTION;
      }
      if (NULL_SUBSCRIPTION.equals(subscription) || new WildcardFilter(subscription).accept(notification.getResourceIdentifier())) {
        l.onNotification(notification);
      }
 else {
        logger.trace("Resource id '" + subscription + "' for listener "+ l.getClass().getName()+ " does not match Resource id '"+ notification.getResourceIdentifier()+ "' for notificationication, not firing notificationication for this listener");
      }
    }
  }
}
