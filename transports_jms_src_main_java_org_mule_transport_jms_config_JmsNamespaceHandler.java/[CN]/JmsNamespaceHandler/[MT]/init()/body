{
  registerJmsTransportEndpoints();
  registerMuleBeanDefinitionParser("connector",new JmsConnectorDefinitionParser()).addAlias(NUMBER_OF_CONSUMERS_ATTRIBUTE,NUMBER_OF_CONSUMERS_PROPERTY).registerPreProcessor(new CheckExclusiveAttributes(new String[][]{new String[]{NUMBER_OF_CONCURRENT_TRANSACTED_RECEIVERS_ATTRIBUTE},new String[]{NUMBER_OF_CONSUMERS_ATTRIBUTE}}));
  registerBeanDefinitionParser("custom-connector",new JmsConnectorDefinitionParser());
  registerBeanDefinitionParser("activemq-connector",new JmsConnectorDefinitionParser(ActiveMQJmsConnector.class));
  registerBeanDefinitionParser("activemq-xa-connector",new JmsConnectorDefinitionParser(ActiveMQXAJmsConnector.class));
  registerBeanDefinitionParser("mulemq-connector",new MuleMQConnectorDefinitionParser(MuleMQJmsConnector.class));
  registerBeanDefinitionParser("mulemq-xa-connector",new MuleMQConnectorDefinitionParser(MuleMQXAJmsConnector.class));
  registerBeanDefinitionParser("weblogic-connector",new JmsConnectorDefinitionParser(WeblogicJmsConnector.class));
  registerBeanDefinitionParser("websphere-connector",new JmsConnectorDefinitionParser(WebsphereJmsConnector.class));
  registerBeanDefinitionParser("transaction",new TransactionDefinitionParser(JmsTransactionFactory.class));
  registerBeanDefinitionParser("client-ack-transaction",new TransactionDefinitionParser(JmsClientAcknowledgeTransactionFactory.class));
  registerBeanDefinitionParser("jmsmessage-to-object-transformer",new MessageProcessorDefinitionParser(JMSMessageToObject.class));
  registerBeanDefinitionParser("object-to-jmsmessage-transformer",new MessageProcessorDefinitionParser(ObjectToJMSMessage.class));
  registerBeanDefinitionParser("property-filter",new FilterDefinitionParser(JmsPropertyFilter.class));
  registerBeanDefinitionParser("selector",new FilterDefinitionParser(JmsSelectorFilter.class));
}
