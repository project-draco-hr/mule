{
  while (true) {
    retryCounter.countRetry();
    try {
      connectable.connect();
      if (logger.isDebugEnabled()) {
        logger.debug("Successfully connected to " + getDescription(connectable));
      }
      break;
    }
 catch (    InterruptedException ie) {
      throw new FatalConnectException(new Message(Messages.RECONNECT_STRATEGY_X_FAILED_ENDPOINT_X,getClass().getName(),getDescription(connectable)),ie,connectable);
    }
catch (    Exception e) {
      if (e instanceof FatalConnectException) {
        throw (FatalConnectException)e;
      }
      if (retryCounter.current().get() >= retryCount) {
        throw new FatalConnectException(new Message(Messages.RECONNECT_STRATEGY_X_FAILED_ENDPOINT_X,getClass().getName(),getDescription(connectable)),e,connectable);
      }
      if (logger.isErrorEnabled()) {
        StringBuffer msg=new StringBuffer(512);
        msg.append("Failed to connect/reconnect on endpoint: ").append(getDescription(connectable));
        Throwable t=ExceptionHelper.getRootException(e);
        msg.append(". Root Exception was: ").append(ExceptionHelper.writeException(t));
        logger.error(msg.toString(),e);
      }
      if (logger.isInfoEnabled()) {
        logger.info("Waiting for " + frequency + "ms before reconnecting. Failed attempt "+ retryCounter.current().get()+ " of "+ retryCount);
      }
      try {
        Thread.sleep(frequency);
      }
 catch (      InterruptedException e1) {
        throw new FatalConnectException(new Message(Messages.RECONNECT_STRATEGY_X_FAILED_ENDPOINT_X,getClass().getName(),getDescription(connectable)),e,connectable);
      }
    }
  }
}
