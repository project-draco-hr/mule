{
  if (wsdlEndpoint == null && lazyInit) {
    initialise();
  }
  MuleMessage message=eventContext.getMessage();
  String httpRequest=message.<String>getOutboundProperty(HTTP_REQUEST).toLowerCase();
  if ((httpRequest.indexOf(WSDL_PARAM_1) != -1) || (httpRequest.indexOf(WSDL_PARAM_2) != -1)) {
    logger.debug("Retrieving WSDL from web service");
    String wsdlString;
    if (this.useFile) {
      eventContext.setStopFurtherProcessing(true);
      return wsdlFileContents;
    }
    MuleContext muleContext=eventContext.getMuleContext();
    InboundEndpoint webServiceEndpoint=muleContext.getRegistry().lookupEndpointFactory().getInboundEndpoint(this.wsdlEndpoint);
    MuleMessage replyWSDL=eventContext.requestEvent(webServiceEndpoint,eventContext.getTimeout());
    wsdlString=replyWSDL.getPayloadAsString();
    String realWSDLURI=wsdlEndpoint.split("\\?")[0];
    String proxyWSDLURI=eventContext.getEndpointURI().toString();
    wsdlString=wsdlString.replaceAll(realWSDLURI,proxyWSDLURI);
    if (wsdlString.indexOf("localhost") > -1) {
      wsdlString=wsdlString.replaceAll("localhost",InetAddress.getLocalHost().getHostName());
    }
    DefaultMuleMessage modifiedWsdl=new DefaultMuleMessage(wsdlString,muleContext);
    logger.debug("WSDL retrieved successfully");
    eventContext.setStopFurtherProcessing(true);
    return modifiedWsdl;
  }
 else {
    logger.debug("Forwarding SOAP message");
    return eventContext.getMessage().getPayload();
  }
}
