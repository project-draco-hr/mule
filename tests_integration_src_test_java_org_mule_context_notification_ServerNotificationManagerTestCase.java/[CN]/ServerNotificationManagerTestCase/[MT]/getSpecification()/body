{
  return new Node().parallel(new Node(ServiceNotification.class,ServiceNotification.SERVICE_INITIALISED,SERVICE)).parallel(new Node(ServiceNotification.class,ServiceNotification.SERVICE_STARTED,SERVICE)).parallel(new Node(ServiceNotification.class,ServiceNotification.SERVICE_PAUSED,SERVICE)).parallel(new Node(ServiceNotification.class,ServiceNotification.SERVICE_RESUMED,SERVICE)).parallel(new Node(ServiceNotification.class,ServiceNotification.SERVICE_STOPPED,SERVICE)).parallel(new Node(ServiceNotification.class,ServiceNotification.SERVICE_DISPOSED,SERVICE)).parallel(new Node().parallel(new Node(ModelNotification.class,ModelNotification.MODEL_INITIALISED,MULE_SYSTEM_MODEL)).parallel(new Node(ModelNotification.class,ModelNotification.MODEL_INITIALISED,MODEL)).serial(new Node(MuleContextNotification.class,MuleContextNotification.CONTEXT_STARTING)).serial(new Node().parallelSynch(new Node(ModelNotification.class,ModelNotification.MODEL_STARTED,MODEL)).parallelSynch(new Node(ModelNotification.class,ModelNotification.MODEL_STARTED,MULE_SYSTEM_MODEL)).serial(new Node(ModelNotification.class,ModelNotification.MODEL_STARTED,MULE_SYSTEM_MODEL))).serial(new Node(MuleContextNotification.class,MuleContextNotification.CONTEXT_STARTED)).serial(new Node(MuleContextNotification.class,MuleContextNotification.CONTEXT_DISPOSING)).serial(new Node(MuleContextNotification.class,MuleContextNotification.CONTEXT_STOPPING)).serial(new Node().parallelSynch(new Node(ModelNotification.class,ModelNotification.MODEL_STOPPED,MULE_SYSTEM_MODEL)).serial(new Node(ModelNotification.class,ModelNotification.MODEL_STOPPED,MODEL))).serial(new Node(MuleContextNotification.class,MuleContextNotification.CONTEXT_STOPPED).parallel(new Node(ModelNotification.class,ModelNotification.MODEL_DISPOSED,MODEL)).parallel(new Node(ModelNotification.class,ModelNotification.MODEL_DISPOSED,MULE_SYSTEM_MODEL))).serial(new Node(MuleContextNotification.class,MuleContextNotification.CONTEXT_DISPOSED)));
}
