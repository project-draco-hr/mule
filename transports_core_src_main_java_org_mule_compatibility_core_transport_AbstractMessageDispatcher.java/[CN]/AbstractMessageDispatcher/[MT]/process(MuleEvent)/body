{
  try {
    connect();
    String prop=event.getMessage().getOutboundProperty(MULE_DISABLE_TRANSPORT_TRANSFORMER_PROPERTY);
    boolean disableTransportTransformer=(prop != null && Boolean.parseBoolean(prop)) || endpoint.isDisableTransportTransformer();
    if (!disableTransportTransformer) {
      applyOutboundTransformers(event);
    }
    boolean hasResponse=endpoint.getExchangePattern().hasResponse();
    connector.getSessionHandler().storeSessionInfoToMessage(event.getSession(),event.getMessage(),endpoint.getMuleContext());
    if (hasResponse) {
      if (isNonBlocking(event)) {
        doSendNonBlocking(event,new NonBlockingSendCompletionHandler(event,((Flow)endpoint.getFlowConstruct()).getWorkManager(),connector));
        setCurrentEvent(null);
        return NonBlockingVoidMuleEvent.getInstance();
      }
 else {
        return createResponseEvent(doSend(event),event);
      }
    }
 else {
      doDispatch(event);
      return VoidMuleEvent.getInstance();
    }
  }
 catch (  MuleException muleException) {
    throw muleException;
  }
catch (  Exception e) {
    throw new DispatchException(event,getEndpoint(),e);
  }
}
