{
  MuleEvent event=buildEvent("newAnnotatedComponentCall");
  String flowName=ROOT_FLOW_NAME;
  PipelineMessageNotification pipelineNotification=buildPipelineNotification(event,flowName);
  assertThat(getContextInfo(event),is(""));
  manager.onPipelineNotificationStart(pipelineNotification);
  assertThat(getContextInfo(event),is("at " + flowName));
  MessageProcessorNotification processorNotification=mock(MessageProcessorNotification.class);
  when(processorNotification.getProcessor()).thenReturn(mock(MessageProcessor.class));
  when(processorNotification.getProcessorPath()).thenReturn("/comp");
  when(processorNotification.getSource()).thenReturn(event);
  manager.onMessageProcessorNotificationPreInvoke(processorNotification);
  assertThat(getContextInfo(event),is("at " + flowName + "(/comp @ "+ APP_ID+ ")"));
  MuleEvent eventCopy=mock(MuleEvent.class);
  when(eventCopy.getId()).thenReturn("newAnnotatedComponentCall");
  DefaultFlowCallStack copyFlowStack=new DefaultFlowCallStack(event.getFlowCallStack());
  when(eventCopy.getFlowCallStack()).thenReturn(copyFlowStack);
  manager.onPipelineNotificationComplete(pipelineNotification);
  assertThat(getContextInfo(event),is(""));
  String asyncFlowName="asyncFlow";
  PipelineMessageNotification asyncPipelineNotification=buildPipelineNotification(eventCopy,asyncFlowName);
  manager.onPipelineNotificationStart(asyncPipelineNotification);
  MessageProcessorNotification asyncProcessorNotification=mock(MessageProcessorNotification.class);
  when(asyncProcessorNotification.getProcessor()).thenReturn(mock(MessageProcessor.class));
  when(asyncProcessorNotification.getProcessorPath()).thenReturn("/asyncComp");
  when(asyncProcessorNotification.getSource()).thenReturn(eventCopy);
  manager.onMessageProcessorNotificationPreInvoke(asyncProcessorNotification);
  assertThat(getContextInfo(eventCopy),is("at " + asyncFlowName + "(/asyncComp @ "+ APP_ID+ ")"+ System.lineSeparator()+ "at "+ flowName+ "(/comp @ "+ APP_ID+ ")"));
}
