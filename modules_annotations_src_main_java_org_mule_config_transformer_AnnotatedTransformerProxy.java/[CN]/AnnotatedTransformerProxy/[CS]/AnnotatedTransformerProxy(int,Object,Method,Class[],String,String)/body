{
  this.weighting=weighting;
  this.proxy=proxy;
  setAllowNullReturn(true);
  validateMethod(transformMethod,additionalSourceTypes);
  this.transformMethod=transformMethod;
  setReturnDataType(DataTypeFactory.createFromReturnType(transformMethod,resultMimeType));
  messageAware=MuleMessage.class.isAssignableFrom(transformMethod.getParameterTypes()[0]);
  this.transformMethod=transformMethod;
  if (additionalSourceTypes.length > 0) {
    if (messageAware) {
      logger.error("Transformer: " + getName() + " is MuleMessage aware, this means additional source types configured on the transformer will be ignored. Source types are: "+ Arrays.toString(additionalSourceTypes));
    }
 else {
      for (int i=0; i < additionalSourceTypes.length; i++) {
        registerSourceType(new SimpleDataType(additionalSourceTypes[i],sourceMimeType));
      }
    }
  }
  Class<?> source=transformMethod.getParameterTypes()[0];
  registerSourceType(DataTypeFactory.create(source,sourceMimeType));
  sourceAnnotated=(transformMethod.getParameterAnnotations()[0].length > 0 && transformMethod.getParameterAnnotations()[0][0] instanceof Payload);
  setName(proxy.getClass().getSimpleName() + "." + transformMethod.getName());
}
