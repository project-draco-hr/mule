{
  int mods=method.getModifiers();
  if (Modifier.isAbstract(mods) || Modifier.isInterface(mods) || !Modifier.isPublic(mods)|| method.getReturnType().equals(Void.TYPE)|| method.getParameterTypes().length == 0 || method.getReturnType().equals(Object.class) || Arrays.asList(method.getParameterTypes()).contains(Object.class) || Arrays.asList(sourceTypes).contains(Object.class)) {
    throw new IllegalArgumentException(AnnotationsMessages.transformerMethodNotValid(method).getMessage());
  }
}
