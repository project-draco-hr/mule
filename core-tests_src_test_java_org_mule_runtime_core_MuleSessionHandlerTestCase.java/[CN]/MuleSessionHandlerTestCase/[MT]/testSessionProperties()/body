{
  DefaultMuleMessage message=new DefaultMuleMessage("Test Message",muleContext);
  MuleEvent event=new DefaultMuleEvent(message,MuleTestUtils.getTestFlow(muleContext));
  SessionHandler handler=new SerializeAndEncodeSessionHandler();
  String string="bar";
  event.getSession().setProperty("fooString",string);
  Date date=new Date(0);
  event.getSession().setProperty("fooDate",date);
  List<String> list=createList();
  event.getSession().setProperty("fooList",list);
  message=(DefaultMuleMessage)handler.storeSessionInfoToMessage(event.getSession(),event.getMessage());
  event.setMessage(message);
  Serializable s=removeProperty(event);
  message=(DefaultMuleMessage)event.getMessage();
  message.setInboundProperty(MULE_SESSION_PROPERTY,s);
  MuleSession session=handler.retrieveSessionInfoFromMessage(event.getMessage());
  Object obj=session.getProperty("fooString");
  assertTrue(obj instanceof String);
  assertEquals(string,obj);
  obj=session.getProperty("fooDate");
  assertTrue("Object should be a Date but is " + obj.getClass().getName(),obj instanceof Date);
  assertEquals(date,obj);
  obj=session.getProperty("fooList");
  assertTrue("Object should be a List but is " + obj.getClass().getName(),obj instanceof List);
  assertEquals(list,obj);
}
