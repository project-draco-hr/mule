{
  final DataType expectedDataType=DataTypeFactory.create(String.class,JSON);
  expectedDataType.setEncoding(CUSTOM_ENCODING);
  MuleEvent testEvent=getTestEvent(TEST_MESSAGE);
  CompiledExpression compiledExpression=compileMelExpression(expression,testEvent);
  dataTypePropagator.propagate(testEvent.getMessage(),new TypedValue(TEST_MESSAGE,expectedDataType),compiledExpression);
  assertThat(testEvent.getMessage().getPropertyDataType(PROPERTY_NAME,scope),like(String.class,JSON,CUSTOM_ENCODING));
}
