{
  ImmutableSet.Builder<ParameterDescriptor> parameters=ImmutableSet.builder();
  for (  Field field : parameterFields) {
    Parameter parameter=field.getAnnotation(Parameter.class);
    Optional optional=field.getAnnotation(Optional.class);
    String parameterName=getParameterName(field,parameter);
    ParameterDescriptor parameterDescriptor;
    DataType dataType=IntrospectionUtils.getFieldDataType(field);
    if (optional == null) {
      parameterDescriptor=with.requiredParameter(parameterName);
    }
 else {
      parameterDescriptor=with.optionalParameter(parameterName).defaultingTo(getDefaultValue(optional));
    }
    parameterDescriptor.ofType(dataType);
    parameterDescriptor.withExpressionSupport(parameter != null ? parameter.expressionSupport() : ExpressionSupport.SUPPORTED);
    parameterDescriptor.withModelProperty(MemberNameModelProperty.KEY,new MemberNameModelProperty(field.getName()));
    parameters.add(parameterDescriptor);
  }
  return parameters.build();
}
