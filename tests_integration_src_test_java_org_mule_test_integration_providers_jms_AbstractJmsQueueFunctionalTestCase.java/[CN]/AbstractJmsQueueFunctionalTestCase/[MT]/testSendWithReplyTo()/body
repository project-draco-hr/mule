{
  final CountDown countDown=new CountDown(2);
  receiverIsUp=new CountDown(1);
  EventCallback callback=new EventCallback(){
    public void eventReceived(    UMOEventContext context,    Object Component){
      callbackCalled=true;
      assertNull(context.getCurrentTransaction());
      countDown.release();
    }
  }
;
  initialiseComponent(callback);
  MuleManager.getInstance().start();
  Message msg=null;
  MessageConsumer mc;
  if (useTopics()) {
    mc=JmsTestUtils.getTopicSubscriber((TopicConnection)cnn,"replyto");
  }
 else {
    mc=JmsTestUtils.getQueueReceiver((QueueConnection)cnn,"replyto");
  }
  mc.setMessageListener(new MessageListener(){
    public void onMessage(    Message message){
      currentMsg=message;
      countDown.release();
    }
  }
);
  logger.debug("Waiting for coutdown isReceiverUp");
  assertTrue(receiverIsUp.attempt(LOCK_WAIT));
  receiverIsUp=null;
  send(DEFAULT_MESSAGE,false,Session.AUTO_ACKNOWLEDGE,"replyto");
  assertTrue(countDown.attempt(LOCK_WAIT));
  assertNotNull(currentMsg);
  assertTrue(currentMsg instanceof TextMessage);
  assertEquals(DEFAULT_MESSAGE + " Received",((TextMessage)currentMsg).getText());
  assertTrue(callbackCalled);
}
