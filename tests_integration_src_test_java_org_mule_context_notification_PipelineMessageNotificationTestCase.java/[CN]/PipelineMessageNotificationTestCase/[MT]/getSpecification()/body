{
  return new Node().serial(new Node(PipelineMessageNotification.class,PipelineMessageNotification.PROCESS_START)).serial(new Node(PipelineMessageNotification.class,PipelineMessageNotification.PROCESS_END)).serial(new Node(PipelineMessageNotification.class,PipelineMessageNotification.PROCESS_COMPLETE)).serial(new Node(PipelineMessageNotification.class,PipelineMessageNotification.PROCESS_START)).serial(new Node(PipelineMessageNotification.class,PipelineMessageNotification.PROCESS_COMPLETE)).serial(new Node(PipelineMessageNotification.class,PipelineMessageNotification.PROCESS_START)).serial(new Node(PipelineMessageNotification.class,PipelineMessageNotification.PROCESS_END)).serial(new Node(PipelineMessageNotification.class,PipelineMessageNotification.PROCESS_COMPLETE)).serial(new Node(PipelineMessageNotification.class,PipelineMessageNotification.PROCESS_START)).serial(new Node(AsyncMessageNotification.class,AsyncMessageNotification.PROCESS_ASYNC_SCHEDULED).parallel(new Node(PipelineMessageNotification.class,PipelineMessageNotification.PROCESS_COMPLETE)).parallel(new Node(AsyncMessageNotification.class,AsyncMessageNotification.PROCESS_ASYNC_SCHEDULED)).parallel(new Node(PipelineMessageNotification.class,PipelineMessageNotification.PROCESS_END)).parallel(new Node(AsyncMessageNotification.class,AsyncMessageNotification.PROCESS_ASYNC_COMPLETE)).parallel(new Node(AsyncMessageNotification.class,AsyncMessageNotification.PROCESS_ASYNC_COMPLETE))).serial(new Node(PipelineMessageNotification.class,PipelineMessageNotification.PROCESS_START)).serial(new Node(AsyncMessageNotification.class,AsyncMessageNotification.PROCESS_ASYNC_SCHEDULED).parallel(new Node(PipelineMessageNotification.class,PipelineMessageNotification.PROCESS_COMPLETE)).parallel(new Node(AsyncMessageNotification.class,AsyncMessageNotification.PROCESS_ASYNC_COMPLETE)).parallel(new Node(AsyncMessageNotification.class,AsyncMessageNotification.PROCESS_ASYNC_SCHEDULED)).parallel(new Node(AsyncMessageNotification.class,AsyncMessageNotification.PROCESS_ASYNC_COMPLETE)));
}
