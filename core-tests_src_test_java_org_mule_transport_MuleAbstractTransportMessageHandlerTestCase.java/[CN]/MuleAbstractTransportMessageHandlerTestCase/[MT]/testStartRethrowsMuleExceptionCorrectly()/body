{
  final MuleException someMuleException=mock(MuleException.class);
  AbstractTransportMessageHandler connectable=new AbstractTransportMessageHandler(createDummyEndpoint()){
    @Override protected void doStart() throws MuleException {
      throw someMuleException;
    }
    @Override protected WorkManager getWorkManager(){
      return null;
    }
    @Override protected ConnectableLifecycleManager createLifecycleManager(){
      return new ConnectableLifecycleManager("test",this);
    }
  }
;
  connectable.initialise();
  connectable.connect();
  try {
    connectable.start();
    fail("Should have thrown a " + MuleException.class.getSimpleName());
  }
 catch (  MuleException caughtException) {
    assertExceptionIsInCaughtException(someMuleException,caughtException);
  }
}
