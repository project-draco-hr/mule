{
  AbstractBeanDefinition beanDefinition=bean.getBeanDefinition();
  String oldName=SpringXMLUtils.attributeName(attribute);
  String oldValue=attribute.getNodeValue();
  if (attribute.getNamespaceURI() == null) {
    if (!beanConfig.isIgnored(oldName)) {
      logger.debug(attribute + " for " + beanDefinition.getBeanClassName());
      String newName=bestGuessName(beanConfig,oldName,beanDefinition.getBeanClassName());
      Object newValue=beanConfig.translateValue(oldName,oldValue);
      addPropertyWithReference(beanDefinition.getPropertyValues(),beanConfig.getSingleProperty(oldName),newName,newValue);
    }
  }
 else   if (isAnnotationsPropertyAvailable(beanDefinition.getBeanClass())) {
    QName name=new QName(attribute.getNamespaceURI(),attribute.getLocalName(),attribute.getPrefix());
    addAnnotationValue(beanDefinition.getPropertyValues(),name,beanConfig.translateValue(oldName,oldValue));
  }
 else {
    if (logger.isWarnEnabled()) {
      logger.warn("Cannot assign " + beanDefinition.getBeanClass() + " to "+ AnnotatedObject.class+ " "+ bean);
    }
  }
}
