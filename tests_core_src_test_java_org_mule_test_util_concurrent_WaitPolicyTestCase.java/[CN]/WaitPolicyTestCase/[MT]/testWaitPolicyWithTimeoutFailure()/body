{
  assertEquals(0,SleepyTask.activeTasks.get());
  long failureInterval=100;
  LastRejectedWaitPolicy policy=new LastRejectedWaitPolicy(failureInterval,TimeUnit.MILLISECONDS);
  _executor.setRejectedExecutionHandler(policy);
  this.execute(new SleepyTask("hans",1000));
  this.execute(new SleepyTask("franz",1000));
  Runnable s3=new SleepyTask("butthead",1000);
  Thread failedThread=this.execute(s3);
  Thread.sleep(failureInterval * 2);
  List exceptions=_asyncGroup.collectedExceptions();
  assertEquals(1,exceptions.size());
  Map.Entry threadFailure=(Map.Entry)((Map)exceptions.get(0)).entrySet().iterator().next();
  assertEquals(failedThread,threadFailure.getKey());
  assertEquals(RejectedExecutionException.class,threadFailure.getValue().getClass());
  _executor.shutdown();
  assertTrue(_executor.awaitTermination(2500,TimeUnit.MILLISECONDS));
  assertEquals(s3,policy.lastRejectedRunnable());
  assertEquals(0,SleepyTask.activeTasks.get());
}
