{
  super.addProperties(muleMessage,transportMessage);
  Message mailMessage=(Message)transportMessage;
  muleMessage.setProperty(MailProperties.INBOUND_TO_ADDRESSES_PROPERTY,MailUtils.mailAddressesToString(mailMessage.getRecipients(Message.RecipientType.TO)));
  muleMessage.setProperty(MailProperties.INBOUND_CC_ADDRESSES_PROPERTY,MailUtils.mailAddressesToString(mailMessage.getRecipients(Message.RecipientType.CC)));
  muleMessage.setProperty(MailProperties.INBOUND_BCC_ADDRESSES_PROPERTY,MailUtils.mailAddressesToString(mailMessage.getRecipients(Message.RecipientType.BCC)));
  try {
    muleMessage.setProperty(MailProperties.INBOUND_REPLY_TO_ADDRESSES_PROPERTY,MailUtils.mailAddressesToString(mailMessage.getReplyTo()));
  }
 catch (  MessagingException me) {
    log.warn("Invalid address found in ReplyTo header:",me);
  }
  try {
    muleMessage.setProperty(MailProperties.INBOUND_FROM_ADDRESS_PROPERTY,MailUtils.mailAddressesToString(mailMessage.getFrom()));
  }
 catch (  javax.mail.MessagingException me) {
    log.warn("Invalid address found in From header:",me);
  }
  muleMessage.setProperty(MailProperties.INBOUND_SUBJECT_PROPERTY,StringUtils.defaultIfEmpty(mailMessage.getSubject(),"(no subject)"));
  muleMessage.setProperty(MailProperties.INBOUND_CONTENT_TYPE_PROPERTY,StringUtils.defaultIfEmpty(mailMessage.getContentType(),"text/plain"));
  Date sentDate=mailMessage.getSentDate();
  if (sentDate == null) {
    sentDate=new Date();
  }
  muleMessage.setProperty(MailProperties.SENT_DATE_PROPERTY,sentDate);
  for (Enumeration<?> e=mailMessage.getAllHeaders(); e.hasMoreElements(); ) {
    Header header=(Header)e.nextElement();
    String name=header.getName();
    String listName=MailUtils.toListHeader(name);
    String value=header.getValue();
    if (null == muleMessage.getProperty(name)) {
      muleMessage.setProperty(name,value);
    }
    Object listPropertyValue=muleMessage.getProperty(listName);
    if (null == listPropertyValue) {
      listPropertyValue=new LinkedList<Object>();
      muleMessage.setProperty(listName,listPropertyValue);
    }
    if (listPropertyValue instanceof List<?>) {
      ((List)listPropertyValue).add(header.getValue());
    }
  }
}
