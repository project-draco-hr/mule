{
  boolean shouldThrowException=resultMap.get(hasTransactionInContext).get(transactionConfig);
  Exception thrownException=null;
  MuleEvent result=null;
  if (hasTransactionInContext) {
    TransactionCoordination.getInstance().bindTransaction(mockTransaction);
  }
  ValidateTransactionalStateInterceptor<MuleEvent> interceptor=new ValidateTransactionalStateInterceptor<MuleEvent>(new ExecuteCallbackInterceptor<MuleEvent>(),transactionConfig);
  try {
    result=interceptor.execute(new ProcessingCallback<MuleEvent>(){
      @Override public MuleEvent process() throws Exception {
        return mockMuleEvent;
      }
    }
);
  }
 catch (  IllegalTransactionStateException e) {
    thrownException=e;
  }
  if (shouldThrowException) {
    assertThat(thrownException,IsNull.<Object>notNullValue());
    assertThat(thrownException,IsInstanceOf.instanceOf(IllegalTransactionStateException.class));
  }
 else {
    assertThat(result,Is.is(mockMuleEvent));
  }
}
