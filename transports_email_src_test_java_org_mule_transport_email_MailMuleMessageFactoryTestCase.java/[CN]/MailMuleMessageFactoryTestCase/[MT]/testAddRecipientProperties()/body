{
  Date now=new Date();
  MimeMessage payload=getValidTransportMessage();
  payload.setHeader(RecipientType.TO.toString(),TEST_TO);
  payload.setHeader(RecipientType.CC.toString(),TEST_CC);
  payload.setHeader(RecipientType.BCC.toString(),TEST_BCC);
  payload.setFrom(new InternetAddress(TEST_FROM));
  payload.setReplyTo(new InternetAddress[]{new InternetAddress(TEST_REPLY_TO)});
  payload.setSentDate(now);
  MuleMessageFactory factory=createMuleMessageFactory();
  MuleMessage muleMessage=factory.create(payload,encoding,muleContext);
  assertEquals(TEST_TO,muleMessage.getInboundProperty(MailProperties.TO_ADDRESSES_PROPERTY));
  assertEquals(TEST_CC,muleMessage.getInboundProperty(MailProperties.CC_ADDRESSES_PROPERTY));
  assertEquals(TEST_BCC,muleMessage.getInboundProperty(MailProperties.BCC_ADDRESSES_PROPERTY));
  assertEquals(TEST_FROM,muleMessage.getInboundProperty(MailProperties.FROM_ADDRESS_PROPERTY));
  assertEquals(TEST_REPLY_TO,muleMessage.getInboundProperty(MailProperties.REPLY_TO_ADDRESSES_PROPERTY));
  assertEquals("(no subject)",muleMessage.getInboundProperty(MailProperties.SUBJECT_PROPERTY));
  assertEquals(TEST_CONTENT_TYPE,muleMessage.getInboundProperty(MailProperties.CONTENT_TYPE_PROPERTY));
  assertEquals(new MailDateFormat().parse(new MailDateFormat().format(now)),muleMessage.getInboundProperty(MailProperties.SENT_DATE_PROPERTY));
}
