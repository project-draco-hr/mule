{
  String to="Information <info@domain.com>";
  String cc="\"info@\" <domain.com info@domain.com>";
  String bcc="'invalid@domain.com', info <info@domain.com>";
  Date now=new Date();
  MimeMessage payload=getValidTransportMessage();
  payload.setHeader(RecipientType.TO.toString(),to);
  payload.setHeader(RecipientType.CC.toString(),cc);
  payload.setHeader(RecipientType.BCC.toString(),bcc);
  payload.setFrom(new InternetAddress("me@myco.com"));
  payload.setReplyTo(new InternetAddress[]{new InternetAddress("reply@myco.com")});
  payload.setSentDate(now);
  MuleMessageFactory factory=createMuleMessageFactory();
  MuleMessage muleMessage=factory.create(payload,encoding);
  assertEquals(to,muleMessage.getInboundProperty(MailProperties.TO_ADDRESSES_PROPERTY));
  assertEquals(cc,muleMessage.getInboundProperty(MailProperties.CC_ADDRESSES_PROPERTY));
  assertEquals(bcc,muleMessage.getInboundProperty(MailProperties.BCC_ADDRESSES_PROPERTY));
  assertEquals("me@myco.com",muleMessage.getInboundProperty(MailProperties.FROM_ADDRESS_PROPERTY));
  assertEquals("reply@myco.com",muleMessage.getInboundProperty(MailProperties.REPLY_TO_ADDRESSES_PROPERTY));
  assertEquals("(no subject)",muleMessage.getInboundProperty(MailProperties.SUBJECT_PROPERTY));
  assertEquals("text/plain",muleMessage.getInboundProperty(MailProperties.CONTENT_TYPE_PROPERTY));
  assertEquals(new MailDateFormat().parse(new MailDateFormat().format(now)),muleMessage.getInboundProperty(MailProperties.SENT_DATE_PROPERTY));
}
