{
  Map<String,Object> objects=getSpringRegistry().lookupEntriesForLifecycle(lo.getType());
  final DependencyNode root=new DependencyNode(null);
  for (  Map.Entry<String,Object> entry : objects.entrySet()) {
    addDependency(root,entry.getKey(),entry.getValue());
  }
  Iterable<DependencyNode> orderedNodes=new TreeTraverser<DependencyNode>(){
    @Override public Iterable children(    DependencyNode node){
      return node.getChilds();
    }
  }
.postOrderTraversal(root);
  List<Object> orderedObjects=new LinkedList<>();
  for (  DependencyNode node : orderedNodes) {
    if (node == root) {
      break;
    }
    orderedObjects.add(node.getValue());
  }
  return orderedObjects;
}
