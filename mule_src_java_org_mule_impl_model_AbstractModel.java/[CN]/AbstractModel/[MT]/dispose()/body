{
  fireNotification(new ModelNotification(this,ModelNotification.MODEL_DISPOSING));
  for (Iterator i=components.values().iterator(); i.hasNext(); ) {
    UMOComponent component=(UMOComponent)i.next();
    try {
      component.dispose();
      logger.info(component + " has been destroyed successfully");
    }
 catch (    Exception e1) {
      logger.warn("Failed to dispose component: " + e1.getMessage());
    }
  }
  components.clear();
  descriptors.clear();
  components=null;
  descriptors=null;
  fireNotification(new ModelNotification(this,ModelNotification.MODEL_DISPOSED));
}
