{
  while (!disposing.get()) {
    if (connector.isStarted() && !disposing.get()) {
      try {
        retryTemplate.execute(new RetryCallback(){
          public void doWork(          RetryContext context) throws Exception {
            Socket socket=null;
            try {
              socket=serverSocket.accept();
            }
 catch (            Exception e) {
              if (!connector.isDisposed() && !disposing.get()) {
                throw new ConnectException(e,null);
              }
            }
            if (socket != null) {
              Work work=createWork(socket);
              getWorkManager().scheduleWork(work,WorkManager.INDEFINITE,null,connector);
            }
          }
          public String getWorkDescription(){
            return getConnectionDescription();
          }
        }
,getWorkManager());
      }
 catch (      Exception e) {
        getConnector().getMuleContext().getExceptionListener().handleException(e);
      }
    }
  }
}
