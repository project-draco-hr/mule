{
  final int threadCount=100;
  ProcessInterceptor<String,OAuth2Adapter> interceptor=new TestProcessInterceptor();
  final RefreshTokenProcessInterceptor<String> refresh=new RefreshTokenProcessInterceptor<String>(interceptor,muleContext);
  Mockito.doAnswer(new Answer<Void>(){
    @Override public Void answer(    InvocationOnMock invocation) throws Throwable {
      callback.setRefreshed(true);
      return null;
    }
  }
).when(adapter).refreshAccessToken(accessTokenId);
  final CountDownLatch latch=new CountDownLatch(threadCount);
  Runnable run=new Runnable(){
    @Override public void run(){
      try {
        refresh.execute(callback,adapter,mp,event);
        latch.countDown();
      }
 catch (      Exception e) {
        throw new RuntimeException(e);
      }
    }
  }
;
  for (int i=0; i < threadCount; i++) {
    new Thread(run).start();
  }
  latch.await();
  Mockito.verify(adapter).refreshAccessToken(accessTokenId);
}
