{
  if (baseStore instanceof PartitionableExpirableObjectStore) {
    T previous=(T)stores.putIfAbsent(name,store);
    if (previous == null) {
      Monitor m=new Monitor(name,(PartitionableExpirableObjectStore)baseStore,entryTTL,maxEntries);
      scheduler.scheduleWithFixedDelay(m,0,expirationInterval,TimeUnit.MILLISECONDS);
      return (T)store;
    }
 else {
      return previous;
    }
  }
 else {
    MonitoredObjectStoreWrapper monObjectStore;
synchronized (this) {
      if (stores.containsKey(name)) {
        return (T)stores.get(name);
      }
      monObjectStore=new MonitoredObjectStoreWrapper((ListableObjectStore)store,maxEntries,entryTTL,expirationInterval);
      try {
        monObjectStore.initialise();
      }
 catch (      InitialisationException e) {
        throw new MuleRuntimeException(e);
      }
      stores.put(name,monObjectStore);
    }
    return (T)monObjectStore;
  }
}
