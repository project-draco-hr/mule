{
  MuleClient client=new MuleClient();
  Map props=new HashMap();
  for (int i=0; i < NUM_MESSAGES; ++i) {
    UMOMessage result=client.send("sendManyEndpoint",TEST_MESSAGE,props);
    assertEquals(TEST_MESSAGE + " Received",result.getPayloadAsString());
  }
  UMOComponent c=muleContext.getRegistry().lookupComponent("testComponent2");
  assertTrue("Component should be a TestSedaComponent",c instanceof TestSedaComponent);
  Object ftc=((TestSedaComponent)c).getOrCreateService();
  assertNotNull("Functional Test Component not found in the model.",ftc);
  assertTrue("Service should be a FunctionalTestComponent",ftc instanceof FunctionalTestComponent);
  EventCallback cc=((FunctionalTestComponent)ftc).getEventCallback();
  assertNotNull("EventCallback is null",cc);
  assertTrue("EventCallback should be a CounterCallback",cc instanceof CounterCallback);
  assertEquals(NUM_MESSAGES,((CounterCallback)cc).getCallbackCount());
}
