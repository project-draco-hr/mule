{
  boolean compregistered=getManager().getModel().isComponentRegistered(component);
  if (!compregistered) {
    throw new MessagingException(new Message(Messages.X_NOT_REGISTERED_WITH_MANAGER,"Component '" + component + "'"),message,null);
  }
  UMOTransformer trans=null;
  if (transformers != null) {
    trans=MuleObjectHelper.getTransformer(transformers,",");
  }
  if (!MuleManager.getConfiguration().isSynchronous()) {
    logger.warn("The mule manager is running synchronously, a null message payload will be returned");
  }
  UMOSession session=getManager().getModel().getComponentSession(component);
  UMOEndpoint endpoint=getDefaultClientEndpoint(session.getComponent().getDescriptor(),message.getPayload());
  UMOEvent event=new MuleEvent(message,endpoint,session,true);
  if (logger.isDebugEnabled()) {
    logger.debug("MuleClient sending event direct to: " + component + ". Event is: "+ event);
  }
  UMOMessage result=event.getComponent().sendEvent(event);
  if (logger.isDebugEnabled()) {
    logger.debug("Result of MuleClient sendDirect is: " + (result == null ? "null" : result.getPayload()));
  }
  if (result != null && trans != null) {
    return new MuleMessage(trans.transform(result.getPayload()));
  }
 else {
    return result;
  }
}
