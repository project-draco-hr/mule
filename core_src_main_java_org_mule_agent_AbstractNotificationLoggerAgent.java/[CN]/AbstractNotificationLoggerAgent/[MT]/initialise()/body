{
  doInitialise();
  if (!ignoreManagerNotifications) {
    ServerNotificationListener l=new MuleContextNotificationListener(){
      public void onNotification(      ServerNotification notification){
        logEvent(notification);
      }
    }
;
    try {
      muleContext.registerListener(l);
    }
 catch (    NotificationException e) {
      throw new InitialisationException(e,this);
    }
    listeners.add(l);
  }
  if (!ignoreModelNotifications) {
    ServerNotificationListener l=new ModelNotificationListener(){
      public void onNotification(      ServerNotification notification){
        logEvent(notification);
      }
    }
;
    try {
      muleContext.registerListener(l);
    }
 catch (    NotificationException e) {
      throw new InitialisationException(e,this);
    }
    listeners.add(l);
  }
  if (!ignoreComponentNotifications) {
    ServerNotificationListener l=new ServiceNotificationListener(){
      public void onNotification(      ServerNotification notification){
        logEvent(notification);
      }
    }
;
    try {
      muleContext.registerListener(l);
    }
 catch (    NotificationException e) {
      throw new InitialisationException(e,this);
    }
    listeners.add(l);
  }
  if (!ignoreSecurityNotifications) {
    ServerNotificationListener l=new SecurityNotificationListener(){
      public void onNotification(      ServerNotification notification){
        logEvent(notification);
      }
    }
;
    try {
      muleContext.registerListener(l);
    }
 catch (    NotificationException e) {
      throw new InitialisationException(e,this);
    }
    listeners.add(l);
  }
  if (!ignoreManagementNotifications) {
    ServerNotificationListener l=new ManagementNotificationListener(){
      public void onNotification(      ServerNotification notification){
        logEvent(notification);
      }
    }
;
    try {
      muleContext.registerListener(l);
    }
 catch (    NotificationException e) {
      throw new InitialisationException(e,this);
    }
    listeners.add(l);
  }
  if (!ignoreCustomNotifications) {
    ServerNotificationListener l=new CustomNotificationListener(){
      public void onNotification(      ServerNotification notification){
        logEvent(notification);
      }
    }
;
    try {
      muleContext.registerListener(l);
    }
 catch (    NotificationException e) {
      throw new InitialisationException(e,this);
    }
    listeners.add(l);
  }
  if (!ignoreConnectionNotifications) {
    ServerNotificationListener l=new ConnectionNotificationListener(){
      public void onNotification(      ServerNotification notification){
        logEvent(notification);
      }
    }
;
    try {
      muleContext.registerListener(l);
    }
 catch (    NotificationException e) {
      throw new InitialisationException(e,this);
    }
    listeners.add(l);
  }
  if (!ignoreMessageNotifications) {
    logger.warn("EventLogger agent has been asked to log message notifications, but the MuleManager is configured not to fire Message notifications");
  }
 else   if (!ignoreMessageNotifications) {
    ServerNotificationListener l=new MessageNotificationListener(){
      public void onNotification(      ServerNotification notification){
        logEvent(notification);
      }
    }
;
    try {
      muleContext.registerListener(l);
    }
 catch (    NotificationException e) {
      throw new InitialisationException(e,this);
    }
    listeners.add(l);
  }
}
