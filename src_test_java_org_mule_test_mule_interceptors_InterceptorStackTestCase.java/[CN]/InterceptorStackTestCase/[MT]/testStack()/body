{
  final SynchronizedInt c=new SynchronizedInt(0);
  final UMOMessage m1=(UMOMessage)new Mock(UMOMessage.class).proxy();
  final UMOMessage m2=(UMOMessage)new Mock(UMOMessage.class).proxy();
  final UMOMessage m3=(UMOMessage)new Mock(UMOMessage.class).proxy();
  final UMOMessage m4=(UMOMessage)new Mock(UMOMessage.class).proxy();
  final UMOMessage m5=(UMOMessage)new Mock(UMOMessage.class).proxy();
  InterceptorStack s=new InterceptorStack();
  List interceptors=new ArrayList();
  interceptors.add(new UMOInterceptor(){
    public UMOMessage intercept(    Invocation invocation) throws UMOException {
      assertEquals(0,c.get());
      c.increment();
      assertTrue(m1 == invocation.getMessage());
      invocation.setMessage(m2);
      UMOMessage msg=invocation.execute();
      assertEquals(3,c.get());
      c.increment();
      assertTrue(m4 == msg);
      return m5;
    }
  }
);
  interceptors.add(new UMOInterceptor(){
    public UMOMessage intercept(    Invocation invocation) throws UMOException {
      assertEquals(1,c.get());
      c.increment();
      assertTrue(m2 == invocation.getMessage());
      invocation.setMessage(m3);
      UMOMessage msg=invocation.execute();
      assertEquals(2,c.get());
      c.increment();
      assertTrue(m3 == msg);
      return m4;
    }
  }
);
  s.setInterceptors(interceptors);
  UMOMessage r=s.intercept(new DummyInvocation(m1));
  assertTrue(r == m5);
  assertEquals(4,c.get());
}
