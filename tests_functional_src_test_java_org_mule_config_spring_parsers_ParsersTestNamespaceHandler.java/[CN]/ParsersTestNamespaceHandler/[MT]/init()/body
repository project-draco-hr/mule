{
  registerBeanDefinitionParser("orphan",new OrphanDefinitionParser(OrphanBean.class,true).addAlias("bar","foo").addIgnored("ignored").addCollection("offspring"));
  registerBeanDefinitionParser("child",new ChildDefinitionParser("child",ChildBean.class).addAlias("bar","foo").addIgnored("ignored").addCollection("offspring"));
  registerBeanDefinitionParser("mapped-child",new MapDefinitionParserMutator("map",new ChildDefinitionParser("child",ChildBean.class)).addAlias("bar","foo").addIgnored("ignored").addCollection("offspring"));
  registerBeanDefinitionParser("kid",new ChildDefinitionParser("kid",ChildBean.class).addAlias("bar","foo").addIgnored("ignored"));
  registerBeanDefinitionParser("parent",new ParentDefinitionParser().addAlias("bar","foo").addIgnored("ignored").addCollection("offspring"));
  registerBeanDefinitionParser("orphan1",new NamedDefinitionParser("orphan1").addAlias("bar","foo").addIgnored("ignored").addCollection("offspring"));
  registerBeanDefinitionParser("orphan2",new NamedDefinitionParser("orphan2").addAlias("bar","foo").addIgnored("ignored"));
  registerBeanDefinitionParser("map-entry",new ChildMapEntryDefinitionParser("map","key","value"));
  registerBeanDefinitionParser("list-entry",new ChildListEntryDefinitionParser("list"));
  registerBeanDefinitionParser("named",new NamedDefinitionParser().addAlias("bar","foo").addIgnored("ignored"));
  registerBeanDefinitionParser("inherit",new InheritDefinitionParser(new OrphanDefinitionParser(OrphanBean.class,true),new NamedDefinitionParser()).addAlias("bar","foo").addIgnored("ignored").addCollection("offspring"));
  registerBeanDefinitionParser("string-endpoint",new StringAddressEndpointDefinitionParser(EndpointURIEndpointBuilder.class));
  registerBeanDefinitionParser("unaddressed-endpoint",new UnaddressedEndpointDefinitionParser(EndpointURIEndpointBuilder.class));
  registerBeanDefinitionParser("address",new ChildAddressDefinitionParser("test").addAlias("address","host"));
  registerBeanDefinitionParser("addressed-endpoint",new AddressedEndpointDefinitionParser("test",AddressedEndpointDefinitionParser.PROTOCOL,new UnaddressedEndpointDefinitionParser(EndpointURIEndpointBuilder.class),new String[]{},new String[]{"path"}));
  registerBeanDefinitionParser("orphan-endpoint",new OrphanEndpointDefinitionParser(EndpointURIEndpointBuilder.class));
  registerBeanDefinitionParser("child-endpoint",new ChildEndpointDefinitionParser(InboundEndpointFactoryBean.class));
  registerBeanDefinitionParser("unaddressed-orphan-endpoint",new OrphanEndpointDefinitionParser(EndpointURIEndpointBuilder.class));
  registerBeanDefinitionParser("addressed-orphan-endpoint",new AddressedEndpointDefinitionParser("test",AddressedEndpointDefinitionParser.PROTOCOL,new OrphanEndpointDefinitionParser(EndpointURIEndpointBuilder.class),new String[]{},new String[]{"path"}));
  registerBeanDefinitionParser("addressed-child-endpoint",new TransportEndpointDefinitionParser("test",InboundEndpointFactoryBean.class,new String[]{}));
  registerBeanDefinitionParser("list-element-test-1",new AttributeListEntryDefinitionParser("kids","listAttribute"));
  registerBeanDefinitionParser("list-element-test-2",new SingleParentFamilyDefinitionParser(new OrphanDefinitionParser(OrphanBean.class,true)).addChildDelegate("kid1",new AttributeListEntryDefinitionParser("kids","kid1")).addChildDelegate("kid2",new AttributeListEntryDefinitionParser("kids","kid2")));
  registerBeanDefinitionParser("list-element-test-3",new AllAttributeChildDefinitionParser(new AttributeListEntryDefinitionParser("kids")));
  registerBeanDefinitionParser("factory",new ComplexComponentDefinitionParser(new SimplePojoServiceDefinitionParser(ChildBean.class,"object"),(ChildDefinitionParser)new ChildDefinitionParser("child",ChildBean.class).addAlias("bar","foo").addIgnored("ignored").addCollection("offspring")));
  registerBeanDefinitionParser("complex-endpoint",new TransportGlobalEndpointDefinitionParser("test",TransportGlobalEndpointDefinitionParser.PROTOCOL,new String[]{"string","bar"},new String[]{"path"}).addAlias("bar","foo"));
}
