{
  registerMuleDefinitionParser("orphan",new OrphanDefinitionParser(OrphanBean.class,true)).addAlias("bar","foo").addIgnored("ignored").addCollection("offspring");
  registerMuleDefinitionParser("child",new ChildDefinitionParser("child",ChildBean.class)).addAlias("bar","foo").addIgnored("ignored").addCollection("offspring");
  registerDelegateDefinitionParser("mapped-child",new MapDefinitionParserMutator("map",new ChildDefinitionParser("child",ChildBean.class))).addAlias("bar","foo").addIgnored("ignored").addCollection("offspring");
  registerMuleDefinitionParser("kid",new ChildDefinitionParser("kid",ChildBean.class)).addAlias("bar","foo").addIgnored("ignored");
  registerMuleDefinitionParser("parent",new ParentDefinitionParser()).addAlias("bar","foo").addIgnored("ignored").addCollection("offspring");
  registerMuleDefinitionParser("orphan1",new NamedDefinitionParser("orphan1")).addAlias("bar","foo").addIgnored("ignored").addCollection("offspring");
  registerMuleDefinitionParser("orphan2",new NamedDefinitionParser("orphan2")).addAlias("bar","foo").addIgnored("ignored");
  registerBeanDefinitionParser("map-entry",new ChildMapEntryDefinitionParser("map","key","value"));
  registerBeanDefinitionParser("list-entry",new ChildListEntryDefinitionParser("list"));
  registerMuleDefinitionParser("named",new NamedDefinitionParser()).addAlias("bar","foo").addIgnored("ignored");
  registerDelegateDefinitionParser("inherit",new InheritDefinitionParser(new OrphanDefinitionParser(OrphanBean.class,true),new NamedDefinitionParser())).addAlias("bar","foo").addIgnored("ignored").addCollection("offspring");
  registerBeanDefinitionParser("string-endpoint",new StringAddressEndpointDefinitionParser(EndpointURIEndpointBuilder.class));
  registerBeanDefinitionParser("unaddressed-endpoint",new UnaddressedEndpointDefinitionParser(EndpointURIEndpointBuilder.class));
  registerMuleDefinitionParser("address",new ChildAddressDefinitionParser("test")).addAlias("address","hostname");
  registerBeanDefinitionParser("addressed-endpoint",new AddressedEndpointDefinitionParser("test",new UnaddressedEndpointDefinitionParser(EndpointURIEndpointBuilder.class)));
  registerBeanDefinitionParser("orphan-endpoint",new OrphanEndpointDefinitionParser(EndpointURIEndpointBuilder.class));
  registerBeanDefinitionParser("child-endpoint",new ChildEndpointDefinitionParser(InboundEndpointFactoryBean.class));
  registerBeanDefinitionParser("unaddressed-orphan-endpoint",new OrphanEndpointDefinitionParser(EndpointURIEndpointBuilder.class));
  registerBeanDefinitionParser("addressed-orphan-endpoint",new AddressedEndpointDefinitionParser("test",new OrphanEndpointDefinitionParser(EndpointURIEndpointBuilder.class)));
  registerBeanDefinitionParser("addressed-child-endpoint",new TransportEndpointDefinitionParser("test",InboundEndpointFactoryBean.class));
  registerBeanDefinitionParser("list-element-test-1",new AttributeListEntryDefinitionParser("kids","listAttribute"));
  registerBeanDefinitionParser("list-element-test-2",new SingleParentFamilyDefinitionParser(new OrphanDefinitionParser(OrphanBean.class,true)).addChildDelegate("kid1",new AttributeListEntryDefinitionParser("kids","kid1")).addChildDelegate("kid2",new AttributeListEntryDefinitionParser("kids","kid2")));
  registerBeanDefinitionParser("list-element-test-3",new AllAttributeChildDefinitionParser(new AttributeListEntryDefinitionParser("kids")));
  registerBeanDefinitionParser("factory",new ComplexComponentDefinitionParser(new SimpleComponentDefinitionParser("object",ChildBean.class),(ChildDefinitionParser)new ChildDefinitionParser("child",ChildBean.class).addAlias("bar","foo").addIgnored("ignored").addCollection("offspring")));
  registerBeanDefinitionParser("complex-endpoint",new TransportGlobalEndpointDefinitionParser("test",new String[]{"string","bar"}));
}
