{
  MessagePropertyFilter filter=new MessagePropertyFilter();
  assertFalse(filter.accept((InternalMessage)null,mock(Event.Builder.class)));
  filter=new MessagePropertyFilter("foo = bar");
  InternalMessage message=InternalMessage.builder().payload("blah").build();
  message=InternalMessage.builder(message).addOutboundProperty("foo","bar").build();
  assertTrue("Filter didn't accept the message",filter.accept(message,mock(Event.Builder.class)));
  filter.setCaseSensitive(false);
  filter=new MessagePropertyFilter("foo2 =null");
  message=removeProperty(message,"foo2");
  assertTrue("Filter didn't accept the message",filter.accept(message,mock(Event.Builder.class)));
  filter=new MessagePropertyFilter("foo2 =");
  message=InternalMessage.builder(message).addOutboundProperty("foo2","").build();
  assertTrue("Filter didn't accept the message",filter.accept(message,mock(Event.Builder.class)));
  message=removeProperty(message,"foo2");
  assertFalse(filter.accept(message,mock(Event.Builder.class)));
}
