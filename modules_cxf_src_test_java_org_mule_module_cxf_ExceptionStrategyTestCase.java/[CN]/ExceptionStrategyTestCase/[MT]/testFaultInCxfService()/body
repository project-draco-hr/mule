{
  MuleMessage request=new DefaultMuleMessage(requestFaultPayload,(Map<String,Object>)null,muleContext);
  MuleClient client=new MuleClient(muleContext);
  latch=new CountDownLatch(1);
  muleContext.registerListener(new ExceptionNotificationListener(){
    @Override public void onNotification(    ServerNotification notification){
      latch.countDown();
    }
  }
);
  MuleMessage response=client.send("http://localhost:" + dynamicPort.getNumber() + "/testServiceWithFault",request);
  assertNotNull(response);
  assertTrue(response.getPayloadAsString().contains("<faultstring>"));
  assertEquals(String.valueOf(HttpConstants.SC_INTERNAL_SERVER_ERROR),response.getInboundProperty(HttpConnector.HTTP_STATUS_PROPERTY));
  assertTrue(latch.await(3000,TimeUnit.MILLISECONDS));
}
