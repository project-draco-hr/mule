{
  targetMessageProcessor.setNumberOfFailuresToSimulate(Integer.MAX_VALUE);
  EndpointBuilder dlqEndpointBuilder=mock(EndpointBuilder.class);
  final OutboundEndpoint dlqEndpoint=mock(OutboundEndpoint.class);
  when(dlqEndpointBuilder.buildOutboundEndpoint()).thenReturn(dlqEndpoint);
  untilSuccessful.setDeadLetterQueue(dlqEndpointBuilder);
  untilSuccessful.initialise();
  untilSuccessful.start();
  final MuleEvent testEvent=getTestEvent("ERROR");
  assertSame(VoidMuleEvent.getInstance(),untilSuccessful.process(testEvent));
  pollingProber.check(new JUnitProbe(){
    @Override protected boolean test() throws Exception {
      verify(dlqEndpoint).process(any(MuleEvent.class));
      return true;
    }
    @Override public String describeFailure(){
      return "Dead letter queue was not called";
    }
  }
);
}
