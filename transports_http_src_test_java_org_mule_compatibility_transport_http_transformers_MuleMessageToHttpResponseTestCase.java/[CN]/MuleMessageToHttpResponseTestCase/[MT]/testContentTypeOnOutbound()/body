{
  MuleMessageToHttpResponse transformer=getMuleMessageToHttpResponse();
  final String contentType="text/xml";
  final String wrongContentType="text/json";
  Map<String,Serializable> outboundProperties=new HashMap<>();
  outboundProperties.put(HttpConstants.HEADER_CONTENT_TYPE,wrongContentType);
  MuleContext muleContext=mock(MuleContext.class,RETURNS_DEEP_STUBS);
  MuleMessage msg=new DefaultMuleMessage(null,outboundProperties,muleContext);
  msg.setOutboundProperty(HttpConstants.HEADER_CONTENT_TYPE,wrongContentType);
  msg.setInboundProperty(HttpConstants.HEADER_CONTENT_TYPE,wrongContentType);
  msg.setOutboundProperty(HttpConstants.HEADER_CONTENT_TYPE,contentType);
  HttpResponse response=transformer.createResponse(null,"UTF-8",msg);
  Header[] headers=response.getHeaders();
  boolean hasContentTypeHeader=false;
  for (  Header header : headers) {
    if (HttpConstants.HEADER_CONTENT_TYPE.equals(header.getName())) {
      hasContentTypeHeader=true;
      assertThat(header.getValue(),is(equalTo(contentType)));
    }
  }
  assertThat("Missing" + HttpConstants.HEADER_CONTENT_TYPE + " header",hasContentTypeHeader,is(true));
}
