{
  InputStream is=null;
  if (type.equals(TransportFactory.PROVIDER_SERVICE_TYPE)) {
    is=SpiUtils.findServiceDescriptor(TransportFactory.PROVIDER_SERVICES_PATH,name,TransportFactory.class);
  }
 else   if (type.equals(ModelFactory.MODEL_SERVICE_TYPE)) {
    is=SpiUtils.findServiceDescriptor(ModelFactory.MODEL_SERVICE_PATH,name,ModelFactory.class);
  }
 else   if (type.equals(ExceptionHelper.EXCEPTION_SERVICE_TYPE)) {
    is=SpiUtils.findServiceDescriptor("org/mule/config",name,ExceptionHelper.class);
  }
 else {
    logger.warn("Attempt to lookup unrecognized service type: " + type);
    return null;
  }
  if (is != null) {
    Properties props=new Properties();
    try {
      props.load(is);
      return props;
    }
 catch (    IOException e) {
      logger.warn("Descriptor found but unable to load properties for service " + name + " of type "+ type);
      return null;
    }
  }
 else {
    return null;
  }
}
