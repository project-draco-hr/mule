{
  appendAction(configProperties,WSHandlerConstants.USERNAME_TOKEN);
  configProperties.put(WSHandlerConstants.USER,username);
  if (passwordType == PasswordType.TEXT) {
    configProperties.put(WSHandlerConstants.PASSWORD_TYPE,"PasswordText");
  }
 else   if (passwordType == PasswordType.DIGEST) {
    configProperties.put(WSHandlerConstants.PASSWORD_TYPE,"PasswordDigest");
  }
  List<String> additionalElements=new ArrayList<String>(2);
  if (addNonce) {
    additionalElements.add(WSConstants.NONCE_LN);
  }
  if (addCreated) {
    additionalElements.add(WSConstants.CREATED_LN);
  }
  if (!additionalElements.isEmpty()) {
    configProperties.put(WSHandlerConstants.ADD_UT_ELEMENTS,StringUtils.join(additionalElements," "));
  }
  configProperties.put(WSHandlerConstants.PW_CALLBACK_REF,new CallbackHandler(){
    @Override public void handle(    Callback[] callbacks) throws IOException, UnsupportedCallbackException {
      WSPasswordCallback pc=(WSPasswordCallback)callbacks[0];
      if (pc.getIdentifier().equals(username)) {
        pc.setPassword(password);
      }
    }
  }
);
}
