{
  this.connector=connector;
  this.endpointUri=endpointUri;
  this.name=name;
  this.properties.putAll(properties);
  this.transactionConfig=transactionConfig;
  this.filter=filter;
  this.deleteUnacceptedMessages=deleteUnacceptedMessages;
  this.securityFilter=securityFilter;
  if (this.securityFilter != null) {
    this.securityFilter.setEndpoint(this);
  }
  this.responseTimeout=responseTimeout;
  this.initialState=initialState;
  this.endpointEncoding=endpointEncoding;
  this.endpointBuilderName=endpointBuilderName;
  this.muleContext=muleContext;
  this.retryPolicyTemplate=retryPolicyTemplate;
  if (transactionConfig != null && transactionConfig.getFactory() != null && transactionConfig.getAction() != TransactionConfig.ACTION_NONE && transactionConfig.getAction() != TransactionConfig.ACTION_NEVER) {
    if (logger.isDebugEnabled()) {
      logger.debug("Endpoint has a transaction configuration. Defaulting to synchronous. Endpoint is: " + toString());
    }
    this.synchronous=true;
  }
 else {
    this.synchronous=synchronous;
  }
  this.messageExchangePattern=messageExchangePattern;
  this.messageProcessorsFactory=messageProcessorsFactory;
  if (messageProcessors == null) {
    this.messageProcessors=Collections.unmodifiableList(java.util.Collections.EMPTY_LIST);
  }
 else {
    this.messageProcessors=Collections.unmodifiableList(messageProcessors);
  }
  if (responseMessageProcessors == null) {
    this.responseMessageProcessors=Collections.unmodifiableList(java.util.Collections.EMPTY_LIST);
  }
 else {
    this.responseMessageProcessors=Collections.unmodifiableList(responseMessageProcessors);
  }
  if (transformers == null) {
    this.transformers=Collections.unmodifiableList(java.util.Collections.EMPTY_LIST);
  }
 else {
    updateTransformerEndpoints(transformers);
    this.transformers=Collections.unmodifiableList(transformers);
  }
  if (responseTransformers == null) {
    this.responseTransformers=Collections.unmodifiableList(java.util.Collections.EMPTY_LIST);
  }
 else {
    updateTransformerEndpoints(responseTransformers);
    this.responseTransformers=Collections.unmodifiableList(responseTransformers);
  }
}
