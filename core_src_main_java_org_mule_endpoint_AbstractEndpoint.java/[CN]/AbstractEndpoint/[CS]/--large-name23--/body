{
  this.connector=connector;
  this.endpointUri=endpointUri;
  this.name=name;
  this.properties.putAll(properties);
  this.transactionConfig=transactionConfig;
  this.deleteUnacceptedMessages=deleteUnacceptedMessages;
  this.responseTimeout=responseTimeout;
  this.initialState=initialState;
  this.endpointEncoding=endpointEncoding;
  this.endpointBuilderName=endpointBuilderName;
  this.muleContext=muleContext;
  this.retryPolicyTemplate=retryPolicyTemplate;
  this.endpointMimeType=endpointMimeType;
  this.disableTransportTransformer=disableTransportTransformer;
  if (transactionConfig != null && transactionConfig.getFactory() != null && transactionConfig.getAction() != TransactionConfig.ACTION_NONE && transactionConfig.getAction() != TransactionConfig.ACTION_NEVER) {
    if (logger.isDebugEnabled()) {
      logger.debug("Endpoint has a transaction configuration. Defaulting to REQUEST_RESPONSE. Endpoint is: " + toString());
    }
    this.messageExchangePattern=MessageExchangePattern.REQUEST_RESPONSE;
  }
 else {
    this.messageExchangePattern=messageExchangePattern;
  }
  this.messageProcessorsFactory=messageProcessorsFactory;
  if (messageProcessors == null) {
    this.messageProcessors=Collections.emptyList();
  }
 else {
    this.messageProcessors=messageProcessors;
  }
  if (responseMessageProcessors == null) {
    this.responseMessageProcessors=Collections.emptyList();
  }
 else {
    this.responseMessageProcessors=responseMessageProcessors;
  }
  String sync=(String)properties.get(PROPERTY_PROCESS_SYNCHRONOUSLY);
  if (sync != null) {
    forceSynchronousProcessing=Boolean.valueOf(sync);
  }
}
