{
  FunctionalTestComponent hop1=lookupTestComponent("main","hop1");
  FunctionalTestComponent hop2=lookupTestComponent("main","hop2");
  assertNotNull(hop1);
  assertNotNull(hop2);
  final AtomicBoolean hop1made=new AtomicBoolean(false);
  EventCallback callback1=new EventCallback(){
    public void eventReceived(    final UMOEventContext context,    final Object component) throws Exception {
      assertTrue(hop1made.compareAndSet(false,true));
    }
  }
;
  final AtomicBoolean hop2made=new AtomicBoolean(false);
  EventCallback callback2=new EventCallback(){
    public void eventReceived(    final UMOEventContext context,    final Object component) throws Exception {
      assertTrue(hop2made.compareAndSet(false,true));
    }
  }
;
  hop1.setEventCallback(callback1);
  hop2.setEventCallback(callback2);
  MuleClient client=new MuleClient();
  MuleMessage request=new MuleMessage("payload");
  client.dispatch("vm://inbound",request);
  Thread.sleep(1000);
  assertTrue("First callback never fired",hop1made.get());
  assertTrue("Second callback never fired",hop2made.get());
}
