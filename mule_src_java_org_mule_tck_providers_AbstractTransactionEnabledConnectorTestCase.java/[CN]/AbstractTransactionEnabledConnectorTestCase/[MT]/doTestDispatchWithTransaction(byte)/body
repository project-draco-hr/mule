{
  MuleComponent component=getTestComponent(descriptor);
  Mock transaction=getMockTransaction();
  UMOEndpoint endpoint=getTestEndpoint("test",UMOImmutableEndpoint.ENDPOINT_TYPE_SENDER);
  UMOSession session=new MuleSession(component,(UMOTransaction)transaction.proxy());
  UMOEvent event=new MuleEvent(new MuleMessage(getValidMessage(),null),endpoint,session,true);
  UMOConnector connector=getConnector();
  endpoint.getTransactionConfig().setCommitAction(action);
  connector.setDispatcherFactory(new UMOMessageDispatcherFactory(){
    public UMOMessageDispatcher create(    UMOConnector connector){
      return testDispatcher;
    }
  }
);
  connector.getDispatcher("dummy").dispatch(event);
  assertEquals(event,((TestDispatcher)connector.getDispatcher("dummy")).getEvent());
  transaction.expectAndReturn("isRollbackOnly",false);
  transaction.expectAndReturn("isRollbackOnly",false);
  transaction.expectAndReturn("isRollbackOnly",false);
  transaction.expectAndReturn("isCommitted",false);
  transaction.expect("commit");
  TransactionCoordination.getInstance().bindTransaction((UMOTransaction)transaction.proxy(),null);
  ((TransactionEnabledConnector)connector).commitTransaction(event);
  transaction.verify();
}
