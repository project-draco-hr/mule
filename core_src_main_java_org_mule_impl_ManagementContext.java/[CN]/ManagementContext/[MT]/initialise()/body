{
  try {
    validateEncoding();
    directories=new Directories(new File(config.getWorkingDirectory()));
    if (!initialised) {
      initialising=true;
      if (workManager == null) {
        ThreadingProfile tp=config.getDefaultThreadingProfile();
        logger.debug("Creating default work manager using default threading profile: " + tp);
        workManager=new MuleWorkManager(tp,"UMOManager");
        workManager.start();
      }
      notificationManager=new ServerNotificationManager();
      notificationManager.registerEventType(ManagerNotification.class,ManagerNotificationListener.class);
      notificationManager.registerEventType(ModelNotification.class,ModelNotificationListener.class);
      notificationManager.registerEventType(ComponentNotification.class,ComponentNotificationListener.class);
      notificationManager.registerEventType(SecurityNotification.class,SecurityNotificationListener.class);
      notificationManager.registerEventType(ManagementNotification.class,ManagementNotificationListener.class);
      notificationManager.registerEventType(AdminNotification.class,AdminNotificationListener.class);
      notificationManager.registerEventType(CustomNotification.class,CustomNotificationListener.class);
      notificationManager.registerEventType(ConnectionNotification.class,ConnectionNotificationListener.class);
      fireSystemEvent(new ManagerNotification(id,clusterId,domain,ManagerNotification.MANAGER_INITIALISNG));
      if (id == null) {
        logger.warn("No unique id has been set on this manager");
      }
      if (securityManager != null) {
        securityManager.initialise();
      }
      if (queueManager == null) {
        TransactionalQueueManager queueMgr=new TransactionalQueueManager();
        QueuePersistenceStrategy ps=new CachingPersistenceStrategy(new MemoryPersistenceStrategy());
        queueMgr.setPersistenceStrategy(ps);
        queueManager=queueMgr;
      }
      directories.createDirectories();
      MuleManager.getInstance().setTransactionManager(getTransactionManager());
      ((MuleManager)MuleManager.getInstance()).initialise();
      if (id == null) {
        throw new InitialisationException(new Message(Messages.X_IS_NULL,"Instance ID"),this);
      }
      if (clusterId == null) {
        clusterId=new Message(Messages.NOT_CLUSTERED).toString();
      }
      if (domain == null) {
        domain=InetAddress.getLocalHost().getHostName();
      }
      systemName=domain + "." + clusterId+ "."+ id;
    }
    initialised=true;
  }
 catch (  Exception e) {
    throw new InitialisationException(e,this);
  }
 finally {
    initialising=false;
    fireSystemEvent(new ManagerNotification(id,clusterId,domain,ManagerNotification.MANAGER_INITIALISED));
  }
}
