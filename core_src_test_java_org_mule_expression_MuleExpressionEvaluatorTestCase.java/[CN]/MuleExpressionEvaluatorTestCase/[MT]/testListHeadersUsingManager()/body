{
  MuleMessage message=new DefaultMuleMessage("test",props,muleContext);
  Object result=muleContext.getExpressionManager().evaluate("#[mule:message.headers-list(foo, baz)]",message);
  assertNotNull(result);
  assertTrue(result instanceof List);
  assertEquals(2,((List)result).size());
  assertTrue(((List)result).contains("moo"));
  assertTrue(((List)result).contains("maz"));
  assertFalse(((List)result).contains("mar"));
  result=muleContext.getExpressionManager().evaluate("#[mule:message.headers-list(fool?)]",message);
  assertNotNull(result);
  assertTrue(result instanceof List);
  assertEquals(0,((List)result).size());
  result=muleContext.getExpressionManager().evaluate("#[mule:message.headers-list(foo?, baz)]",message);
  assertNotNull(result);
  assertTrue(result instanceof List);
  assertEquals(2,((List)result).size());
  assertTrue(((List)result).contains("moo"));
  assertTrue(((List)result).contains("maz"));
  assertFalse(((List)result).contains("mar"));
  result=muleContext.getExpressionManager().evaluate("#[mule:message.headers(fool?)]",message);
  assertEquals(0,((Map)result).size());
  result=muleContext.getExpressionManager().evaluate("#[mule:message.headers-list(foo, fool?)]",message);
  assertTrue(result instanceof List);
  assertEquals("moo",((List)result).get(0));
  assertEquals(1,((List)result).size());
  try {
    result=muleContext.getExpressionManager().evaluate("#[mule:message.headers-list(foo, fool)]",createMessageWithAttachments());
    fail("Header 'fool' is not on the nessage and not defined as optional");
  }
 catch (  Exception e) {
  }
}
