{
  ObjectWithLifecycle o=new ObjectWithLifecycle();
  int transitions=0;
  assertEquals(transitions,o.numTransitions());
  o.initialise();
  transitions++;
  assertEquals(transitions,o.numTransitions());
  assertEquals(ObjectWithLifecycle.INIT,o.lastTransition());
  o.start();
  transitions++;
  assertEquals(transitions,o.numTransitions());
  assertEquals(ObjectWithLifecycle.START,o.lastTransition());
  try {
    o.start();
    fail();
  }
 catch (  Exception ex) {
    ;
  }
  for (int i=0; i < 5; i++) {
    o.stop();
    transitions++;
    assertEquals(transitions,o.numTransitions());
    assertEquals(ObjectWithLifecycle.STOP,o.lastTransition());
    o.start();
    transitions++;
    assertEquals(transitions,o.numTransitions());
    assertEquals(ObjectWithLifecycle.START,o.lastTransition());
  }
  o.stop();
  transitions++;
  assertEquals(transitions,o.numTransitions());
  assertEquals(ObjectWithLifecycle.STOP,o.lastTransition());
  try {
    o.stop();
    fail();
  }
 catch (  Exception ex) {
    ;
  }
  o.dispose();
  transitions++;
  assertEquals(transitions,o.numTransitions());
  assertEquals(ObjectWithLifecycle.DISPOSE,o.lastTransition());
}
