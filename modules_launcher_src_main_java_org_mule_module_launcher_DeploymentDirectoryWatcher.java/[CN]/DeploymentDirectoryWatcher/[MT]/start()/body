{
  deploymentLock.lock();
  deleteAllAnchors();
  final Map<String,Object> options=StartupContext.get().getStartupOptions();
  String appString=(String)options.get("app");
  try {
    String[] explodedDomains=domainsDir.list(DirectoryFileFilter.DIRECTORY);
    String[] packagedDomains=domainsDir.list(ZIP_ARTIFACT_FILTER);
    deployPackedDomains(packagedDomains);
    deployExplodedDomains(explodedDomains);
    if (appString == null) {
      String[] explodedApps=appsDir.list(DirectoryFileFilter.DIRECTORY);
      String[] packagedApps=appsDir.list(ZIP_ARTIFACT_FILTER);
      deployPackedApps(packagedApps);
      deployExplodedApps(explodedApps);
    }
 else {
      String[] apps=appString.split(":");
      apps=removeDuplicateAppNames(apps);
      for (      String app : apps) {
        try {
          File applicationFile=new File(appsDir,app + ZIP_FILE_SUFFIX);
          if (applicationFile.exists() && applicationFile.isFile()) {
            applicationArchiveDeployer.deployPackagedArtifact(app + ZIP_FILE_SUFFIX);
          }
 else {
            applicationArchiveDeployer.deployExplodedArtifact(app);
          }
        }
 catch (        Exception e) {
        }
      }
    }
  }
  finally {
    if (deploymentLock.isHeldByCurrentThread()) {
      deploymentLock.unlock();
    }
  }
  if (!(appString != null)) {
    scheduleChangeMonitor();
  }
 else {
    if (logger.isInfoEnabled()) {
      logger.info(miniSplash("Mule is up and running in a fixed app set mode"));
    }
  }
}
