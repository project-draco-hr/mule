{
  try {
    final MessageImpl m=new MessageImpl();
    final MuleMessage muleReqMsg=event.getMessage();
    String method=muleReqMsg.getInboundProperty(HttpConnector.HTTP_METHOD_PROPERTY);
    String ct=muleReqMsg.getInboundProperty(HttpConstants.HEADER_CONTENT_TYPE);
    if (ct != null) {
      m.put(Message.CONTENT_TYPE,ct);
    }
    String path=muleReqMsg.getInboundProperty(HttpConnector.HTTP_REQUEST_PATH_PROPERTY);
    if (path == null) {
      path="";
    }
    if (method != null) {
      m.put(Message.HTTP_REQUEST_METHOD,method);
      m.put(Message.PATH_INFO,path);
      Object basePath=muleReqMsg.getInboundProperty(HttpConnector.HTTP_CONTEXT_PATH_PROPERTY);
      m.put(Message.BASE_PATH,basePath);
      method=method.toUpperCase();
    }
    if (!"GET".equals(method)) {
      Object payload=event.getMessage().getPayload();
      setPayload(event,m,payload);
    }
    String soapAction=getSoapAction(event.getMessage());
    m.put(org.mule.module.cxf.SoapConstants.SOAP_ACTION_PROPERTY_CAPS,soapAction);
    org.apache.cxf.transport.Destination d;
    if (server != null) {
      d=server.getDestination();
    }
 else {
      String serviceUri=getUri(event);
      DestinationFactoryManager dfm=bus.getExtension(DestinationFactoryManager.class);
      DestinationFactory df=dfm.getDestinationFactoryForUri(serviceUri);
      EndpointInfo ei=new EndpointInfo();
      ei.setAddress(serviceUri);
      d=df.getDestination(ei);
    }
    m.put(LocalConduit.DIRECT_DISPATCH,Boolean.TRUE);
    m.setDestination(d);
    ExchangeImpl exchange=new ExchangeImpl();
    exchange.setInMessage(m);
    exchange.put(CxfConstants.MULE_EVENT,event);
    d.getMessageObserver().onMessage(m);
    MuleEvent responseEvent=(MuleEvent)exchange.get(CxfConstants.MULE_EVENT);
    if (responseEvent == null || !event.getEndpoint().getExchangePattern().hasResponse()) {
      return null;
    }
    MuleMessage muleResMsg=responseEvent.getMessage();
    muleResMsg.setPayload(getRessponseOutputHandler(m));
    Message faultMsg=m.getExchange().getOutFaultMessage();
    if (faultMsg != null) {
      Exception ex=faultMsg.getContent(Exception.class);
      if (ex != null) {
        ExceptionPayload exceptionPayload=new DefaultExceptionPayload(ex);
        event.getMessage().setExceptionPayload(exceptionPayload);
        muleResMsg.setOutboundProperty(HttpConnector.HTTP_STATUS_PROPERTY,500);
      }
    }
    return responseEvent;
  }
 catch (  MuleException e) {
    logger.warn("Could not dispatch message to CXF!",e);
    throw e;
  }
}
