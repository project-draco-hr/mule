{
  final ChildDefinitionParser listenerDefinitionParser=new ChildDefinitionParser("messageSource",DefaultHttpListener.class);
  registerBeanDefinitionParser("listener",listenerDefinitionParser);
  final MuleOrphanDefinitionParser listenerConfigDefinitionParser=new MuleOrphanDefinitionParser(DefaultHttpListenerConfig.class,true);
  registerBeanDefinitionParser("listener-config",listenerConfigDefinitionParser);
  registerBeanDefinitionParser("request",new MessageProcessorDefinitionParser(DefaultHttpRequester.class));
  registerBeanDefinitionParser("request-builder",new HttpRequestBuilderDefinitionParser());
  registerBeanDefinitionParser("builder",new ChildDefinitionParser("builder",HttpMessageBuilderRef.class));
  registerBeanDefinitionParser("query-param",new HttpMessageSingleParamDefinitionParser(HttpSingleParam.class,HttpParamType.QUERY_PARAM));
  registerBeanDefinitionParser("query-params",new HttpMessageSingleParamDefinitionParser(HttpMapParam.class,HttpParamType.QUERY_PARAM));
  registerBeanDefinitionParser("uri-param",new HttpMessageSingleParamDefinitionParser(HttpSingleParam.class,HttpParamType.URI_PARAM));
  registerBeanDefinitionParser("uri-params",new HttpMessageSingleParamDefinitionParser(HttpMapParam.class,HttpParamType.URI_PARAM));
  registerBeanDefinitionParser("headers",new HttpMessageSingleParamDefinitionParser(HttpMapParam.class,HttpParamType.HEADER));
  registerBeanDefinitionParser("request-config",new HttpRequestConfigDefinitionParser());
  registerBeanDefinitionParser("proxy",new RootOrNestedElementBeanDefinitionParser(DefaultProxyConfig.class,"proxyConfig"));
  registerBeanDefinitionParser("ntlm-proxy",new RootOrNestedElementBeanDefinitionParser(NtlmProxyConfig.class,"proxyConfig"));
  registerBeanDefinitionParser("basic-authentication",new HttpAuthenticationDefinitionParser(HttpAuthenticationType.BASIC));
  registerBeanDefinitionParser("digest-authentication",new HttpAuthenticationDefinitionParser(HttpAuthenticationType.DIGEST));
  registerBeanDefinitionParser("ntlm-authentication",new HttpAuthenticationDefinitionParser(HttpAuthenticationType.NTLM));
  registerBeanDefinitionParser("success-status-code-validator",new ChildDefinitionParser("responseValidator",SuccessStatusCodeValidator.class));
  registerBeanDefinitionParser("failure-status-code-validator",new ChildDefinitionParser("responseValidator",FailureStatusCodeValidator.class));
  registerBeanDefinitionParser("raml-api-configuration",new ChildDefinitionParser("apiConfiguration",RamlApiConfiguration.class));
  registerBeanDefinitionParser("worker-threading-profile",new HttpThreadingProfileDefinitionParser("threadingProfile",MuleProperties.OBJECT_DEFAULT_MESSAGE_RECEIVER_THREADING_PROFILE));
  registerBeanDefinitionParser("direct-threading-profile",new DirectThreadingProfileDefinitionParser("threadingProfile"));
  registerBeanDefinitionParser("config",new ChildDefinitionParser("extension",HttpConfiguration.class));
}
