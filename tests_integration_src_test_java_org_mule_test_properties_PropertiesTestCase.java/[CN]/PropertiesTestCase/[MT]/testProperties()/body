{
  MuleClient client=muleContext.getClient();
  MuleMessage msg1=createOutboundMessage();
  MuleMessage response=client.send("vm://in",msg1);
  assertEquals(response.getPayloadAsString(),"OK(success)");
  assertNull(response.getInboundProperty("outbound1"));
  assertNull(response.getInboundProperty("outbound2"));
  assertNull(response.getOutboundProperty("outbound1"));
  assertNull(response.getOutboundProperty("outbound2"));
  assertEquals("ja",response.<Object>getInvocationProperty("invocation1"));
  assertEquals("nein",response.<Object>getInvocationProperty("invocation2"));
  assertEquals("123",response.getInboundProperty("outbound3"));
  assertEquals("456",response.getInboundProperty("outbound4"));
  assertNull(response.<Object>getInvocationProperty("invocation3"));
  assertNull(response.<Object>getInvocationProperty("invocation4"));
  MuleMessage msg2=createOutboundMessage();
  client.dispatch("vm://inQueue",msg2);
  response=client.request("vm://outQueue",RECEIVE_TIMEOUT);
  assertEquals(response.getPayloadAsString(),"OK");
  assertEquals("yes",response.getInboundProperty("outbound1"));
  assertEquals("no",response.getInboundProperty("outbound2"));
  assertNull(response.getOutboundProperty("outbound1"));
  assertNull(response.getOutboundProperty("outbound2"));
  assertNull(response.<Object>getInvocationProperty("invocation1"));
  assertNull(response.<Object>getInvocationProperty("invocation2"));
}
