{
  Mock session=MuleTestUtils.getMockSession();
  OutboundMessageRouter messageRouter=new OutboundMessageRouter();
  messageRouter.setCatchAllStrategy(new LoggingCatchAllStrategy());
  UMOEndpoint endpoint1=getTestEndpoint("Test1Provider",UMOEndpoint.ENDPOINT_TYPE_SENDER);
  assertNotNull(endpoint1);
  UMOEndpoint endpoint2=getTestEndpoint("Test2Provider",UMOEndpoint.ENDPOINT_TYPE_SENDER);
  assertNotNull(endpoint2);
  MulticastingRouter router=new MulticastingRouter();
  RegExFilter filter=new RegExFilter("(.*) event");
  router.setFilter(filter);
  List endpoints=new ArrayList();
  endpoints.add(endpoint1);
  endpoints.add(endpoint2);
  router.setEndpoints(endpoints);
  assertEquals(filter,router.getFilter());
  UMOMessage message=new MuleMessage("test event");
  assertTrue(router.isMatch(message));
  session.expect("dispatchEvent",C.eq(message,endpoint1));
  session.expect("dispatchEvent",C.eq(message,endpoint2));
  router.route(message,(UMOSession)session.proxy(),false);
  session.verify();
  message=new MuleMessage("test event");
  session.expectAndReturn("sendEvent",C.eq(message,endpoint1),message);
  session.expectAndReturn("sendEvent",C.eq(message,endpoint2),message);
  UMOMessage result=router.route(message,(UMOSession)session.proxy(),true);
  assertNotNull(result);
  assertEquals(message,result);
  session.verify();
}
