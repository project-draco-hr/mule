{
  MuleApplicationEvent muleEvent=null;
  if (e instanceof ContextRefreshedEvent) {
    if (MuleManager.isInstanciated() && !MuleManager.getInstance().isInitialised()) {
      try {
        registerMulticasterDescriptor();
      }
 catch (      UMOException ex) {
        throw new MuleRuntimeException(new Message("spring",1),ex);
      }
    }
 else {
      initMule();
    }
  }
  if (e instanceof MuleApplicationEvent) {
    muleEvent=(MuleApplicationEvent)e;
    if (muleEvent.getMuleEventContext() == null) {
      try {
        dispatchEvent(RequestContext.getEventContext(),muleEvent);
      }
 catch (      ApplicationEventException e1) {
        logger.error("failed to dispatch event: " + e.toString(),e1);
      }
 finally {
      }
      return;
    }
  }
  ApplicationListener listener;
  for (Iterator iterator=listeners.iterator(); iterator.hasNext(); ) {
    listener=(ApplicationListener)iterator.next();
    if (muleEvent != null) {
      if (listener instanceof MuleSubscriptionEventListener) {
        if (isSubscriptionMatch(muleEvent.getEndpoint().getAddress(),((MuleSubscriptionEventListener)listener).getSubscriptions())) {
          listener.onApplicationEvent(muleEvent);
        }
      }
 else       if (listener instanceof MuleEventListener) {
        listener.onApplicationEvent(muleEvent);
      }
    }
 else     if (!(listener instanceof MuleEventListener)) {
      listener.onApplicationEvent(e);
    }
  }
}
