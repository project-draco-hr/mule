{
  init();
  TransactionTemplate tt=createTransactionTemplate(TransactionConfig.ACTION_ALWAYS_BEGIN,true);
  tm.begin();
  final Transaction tx=tm.getTransaction();
  final TestResource resource1=new TestResource(tm);
  assertNotNull(tx);
  String result=(String)tt.execute(new TransactionCallback(){
    public Object doInTransaction() throws Exception {
      Transaction muleTx=tm.getTransaction();
      assertNotSame(tx,muleTx);
      muleTx.enlistResource(resource1);
      resource1.setValue(14);
      return "OK";
    }
  }
);
  assertEquals("OK",result);
  assertEquals(14,resource1.getValue());
  assertEquals(14,resource1.getPersistentValue());
  tm.commit();
  assertEquals(14,resource1.getPersistentValue());
  result=(String)tt.execute(new TransactionCallback(){
    public Object doInTransaction() throws Exception {
      Transaction muleTx=tm.getTransaction();
      assertNotSame(tx,muleTx);
      muleTx.enlistResource(resource1);
      resource1.setValue(15);
      return "OK";
    }
  }
);
  assertEquals("OK",result);
  assertEquals(15,resource1.getPersistentValue());
}
