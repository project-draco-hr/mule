{
  init();
  TransactionTemplate<String> tt=createTransactionTemplate(TransactionConfig.ACTION_ALWAYS_JOIN,true);
  tm.begin();
  final Transaction tx=tm.getTransaction();
  final TestResource resource1=new TestResource(tm);
  tx.enlistResource(resource1);
  assertNotNull(tx);
  String result=tt.execute(new TransactionCallback<String>(){
    public String doInTransaction() throws Exception {
      Transaction muleTx=tm.getTransaction();
      assertSame(tx,muleTx);
      resource1.setValue(14);
      return "OK";
    }
  }
);
  assertEquals("OK",result);
  assertEquals(14,resource1.getValue());
  assertEquals(0,resource1.getPersistentValue());
  tm.commit();
  assertEquals(14,resource1.getPersistentValue());
  Exception ex=null;
  try {
    result=tt.execute(new TransactionCallback<String>(){
      public String doInTransaction() throws Exception {
        return "OK";
      }
    }
);
    fail("No exception seen");
  }
 catch (  Exception e) {
    ex=e;
    logger.debug("saw exception " + e.getMessage());
  }
}
