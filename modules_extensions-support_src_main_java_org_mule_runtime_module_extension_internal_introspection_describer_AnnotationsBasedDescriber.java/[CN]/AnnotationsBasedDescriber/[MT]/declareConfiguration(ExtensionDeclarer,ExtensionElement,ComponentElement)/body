{
  checkConfigurationIsNotAnOperation(configurationType.getDeclaredClass());
  ConfigurationDeclarer configurationDeclarer;
  Optional<Configuration> configurationAnnotation=configurationType.getAnnotation(Configuration.class);
  if (configurationAnnotation.isPresent()) {
    final Configuration configuration=configurationAnnotation.get();
    configurationDeclarer=declaration.withConfig(configuration.name()).describedAs(configuration.description());
  }
 else {
    configurationDeclarer=declaration.withConfig(Extension.DEFAULT_CONFIG_NAME).describedAs(Extension.DEFAULT_CONFIG_DESCRIPTION);
  }
  configurationDeclarer.createdWith(new TypeAwareConfigurationFactory(configurationType.getDeclaredClass(),extensionType.getDeclaredClass().getClassLoader())).withModelProperty(new ImplementingTypeModelProperty(configurationType.getDeclaredClass()));
  declareFieldBasedParameters(configurationDeclarer,configurationType.getParameters());
  if (!extensionType.equals(configurationType)) {
    declareOperations(configurationDeclarer,configurationType);
    declareMessageSources(configurationDeclarer,configurationType);
    declareConnectionProviders(configurationDeclarer,configurationType);
  }
}
