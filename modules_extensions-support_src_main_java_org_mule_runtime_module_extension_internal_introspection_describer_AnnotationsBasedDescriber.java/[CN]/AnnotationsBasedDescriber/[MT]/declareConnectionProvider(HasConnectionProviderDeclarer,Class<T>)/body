{
  ConnectionProviderDeclarer providerDeclarer=connectionProviderDeclarers.get(providerClass);
  if (providerDeclarer != null) {
    declarer.withConnectionProvider(providerDeclarer);
    return;
  }
  String name=DEFAULT_CONNECTION_PROVIDER_NAME;
  String description=EMPTY;
  Alias aliasAnnotation=providerClass.getAnnotation(Alias.class);
  if (aliasAnnotation != null) {
    name=aliasAnnotation.value() + CUSTOM_CONNECTION_PROVIDER_SUFFIX;
    description=aliasAnnotation.description();
  }
  List<Class<?>> providerGenerics=getInterfaceGenerics(providerClass,ConnectionProvider.class);
  if (providerGenerics.size() != 1) {
    throw new IllegalConnectionProviderModelDefinitionException(format("Connection provider class '%s' was expected to have 1 generic type " + "(for the connection type) but %d were found",providerClass.getName(),providerGenerics.size()));
  }
  providerDeclarer=declarer.withConnectionProvider(name).describedAs(description).createdWith(new DefaultConnectionProviderFactory<>(providerClass,extensionType.getClassLoader())).whichGivesConnectionsOfType(providerGenerics.get(0)).withModelProperty(new ImplementingTypeModelProperty(providerClass));
  connectionProviderDeclarers.put(providerClass,providerDeclarer);
  declareAnnotatedParameters(providerClass,providerDeclarer);
}
