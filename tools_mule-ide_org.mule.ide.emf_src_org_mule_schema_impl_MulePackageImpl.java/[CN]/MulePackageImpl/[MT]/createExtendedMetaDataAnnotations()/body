{
  String source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData";
  addAnnotation(this,source,new String[]{"qualified","false"});
  addAnnotation(actionTypeEEnum,source,new String[]{"name","action_._type"});
  addAnnotation(actionTypeObjectEDataType,source,new String[]{"name","action_._type:Object","baseType","action_._type"});
  addAnnotation(agentsTypeEClass,source,new String[]{"name","agentsType","kind","mixed"});
  addAnnotation(getAgentsType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getAgentsType_Agent(),source,new String[]{"kind","element","name","agent","namespace","##targetNamespace"});
  addAnnotation(agentTypeEClass,source,new String[]{"name","agentType","kind","mixed"});
  addAnnotation(getAgentType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getAgentType_Properties(),source,new String[]{"kind","element","name","properties","namespace","##targetNamespace"});
  addAnnotation(getAgentType_ClassName(),source,new String[]{"kind","attribute","name","className","namespace","##targetNamespace"});
  addAnnotation(getAgentType_Name(),source,new String[]{"kind","attribute","name","name","namespace","##targetNamespace"});
  addAnnotation(getAgentType_Ref(),source,new String[]{"kind","attribute","name","ref","namespace","##targetNamespace"});
  addAnnotation(catchAllStrategyTypeEClass,source,new String[]{"name","catch-all-strategyType","kind","mixed"});
  addAnnotation(getCatchAllStrategyType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getCatchAllStrategyType_Endpoint(),source,new String[]{"kind","element","name","endpoint","namespace","##targetNamespace"});
  addAnnotation(getCatchAllStrategyType_GlobalEndpoint(),source,new String[]{"kind","element","name","global-endpoint","namespace","##targetNamespace"});
  addAnnotation(getCatchAllStrategyType_Properties(),source,new String[]{"kind","element","name","properties","namespace","##targetNamespace"});
  addAnnotation(getCatchAllStrategyType_ClassName(),source,new String[]{"kind","attribute","name","className","namespace","##targetNamespace"});
  addAnnotation(componentFactoryTypeEClass,source,new String[]{"name","component-factoryType","kind","mixed"});
  addAnnotation(getComponentFactoryType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getComponentFactoryType_ClassName(),source,new String[]{"kind","attribute","name","className","namespace","##targetNamespace"});
  addAnnotation(componentLifecycleAdapterFactoryTypeEClass,source,new String[]{"name","component-lifecycle-adapter-factoryType","kind","mixed"});
  addAnnotation(getComponentLifecycleAdapterFactoryType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getComponentLifecycleAdapterFactoryType_ClassName(),source,new String[]{"kind","attribute","name","className","namespace","##targetNamespace"});
  addAnnotation(componentPoolFactoryTypeEClass,source,new String[]{"name","component-pool-factoryType","kind","mixed"});
  addAnnotation(getComponentPoolFactoryType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getComponentPoolFactoryType_Properties(),source,new String[]{"kind","element","name","properties","namespace","##targetNamespace"});
  addAnnotation(getComponentPoolFactoryType_ClassName(),source,new String[]{"kind","attribute","name","className","namespace","##targetNamespace"});
  addAnnotation(connectionStrategyTypeEClass,source,new String[]{"name","connection-strategyType","kind","mixed"});
  addAnnotation(getConnectionStrategyType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getConnectionStrategyType_Properties(),source,new String[]{"kind","element","name","properties","namespace","##targetNamespace"});
  addAnnotation(getConnectionStrategyType_ClassName(),source,new String[]{"kind","attribute","name","className","namespace","##targetNamespace"});
  addAnnotation(connectorTypeEClass,source,new String[]{"name","connectorType","kind","mixed"});
  addAnnotation(getConnectorType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getConnectorType_Properties(),source,new String[]{"kind","element","name","properties","namespace","##targetNamespace"});
  addAnnotation(getConnectorType_ThreadingProfile(),source,new String[]{"kind","element","name","threading-profile","namespace","##targetNamespace"});
  addAnnotation(getConnectorType_ExceptionStrategy(),source,new String[]{"kind","element","name","exception-strategy","namespace","##targetNamespace"});
  addAnnotation(getConnectorType_ConnectionStrategy(),source,new String[]{"kind","element","name","connection-strategy","namespace","##targetNamespace"});
  addAnnotation(getConnectorType_ClassName(),source,new String[]{"kind","attribute","name","className","namespace","##targetNamespace"});
  addAnnotation(getConnectorType_Name(),source,new String[]{"kind","attribute","name","name","namespace","##targetNamespace"});
  addAnnotation(getConnectorType_Ref(),source,new String[]{"kind","attribute","name","ref","namespace","##targetNamespace"});
  addAnnotation(constraintTypeEClass,source,new String[]{"name","constraintType","kind","mixed"});
  addAnnotation(getConstraintType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getConstraintType_LeftFilter(),source,new String[]{"kind","element","name","left-filter","namespace","##targetNamespace"});
  addAnnotation(getConstraintType_RightFilter(),source,new String[]{"kind","element","name","right-filter","namespace","##targetNamespace"});
  addAnnotation(getConstraintType_Filter(),source,new String[]{"kind","element","name","filter","namespace","##targetNamespace"});
  addAnnotation(getConstraintType_BatchSize(),source,new String[]{"kind","attribute","name","batchSize","namespace","##targetNamespace"});
  addAnnotation(getConstraintType_ClassName(),source,new String[]{"kind","attribute","name","className","namespace","##targetNamespace"});
  addAnnotation(getConstraintType_ExpectedType(),source,new String[]{"kind","attribute","name","expectedType","namespace","##targetNamespace"});
  addAnnotation(getConstraintType_Expression(),source,new String[]{"kind","attribute","name","expression","namespace","##targetNamespace"});
  addAnnotation(getConstraintType_Frequency(),source,new String[]{"kind","attribute","name","frequency","namespace","##targetNamespace"});
  addAnnotation(getConstraintType_Path(),source,new String[]{"kind","attribute","name","path","namespace","##targetNamespace"});
  addAnnotation(getConstraintType_Pattern(),source,new String[]{"kind","attribute","name","pattern","namespace","##targetNamespace"});
  addAnnotation(containerContextTypeEClass,source,new String[]{"name","container-contextType","kind","mixed"});
  addAnnotation(getContainerContextType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getContainerContextType_Properties(),source,new String[]{"kind","element","name","properties","namespace","##targetNamespace"});
  addAnnotation(getContainerContextType_ClassName(),source,new String[]{"kind","attribute","name","className","namespace","##targetNamespace"});
  addAnnotation(getContainerContextType_Name(),source,new String[]{"kind","attribute","name","name","namespace","##targetNamespace"});
  addAnnotation(containerEntryTypeEClass,source,new String[]{"name","container-entryType","kind","mixed"});
  addAnnotation(getContainerEntryType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getContainerEntryType_Reference(),source,new String[]{"kind","attribute","name","reference","namespace","##targetNamespace"});
  addAnnotation(getContainerEntryType_Required(),source,new String[]{"kind","attribute","name","required","namespace","##targetNamespace"});
  addAnnotation(containerPropertyTypeEClass,source,new String[]{"name","container-propertyType","kind","mixed"});
  addAnnotation(getContainerPropertyType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getContainerPropertyType_Container(),source,new String[]{"kind","attribute","name","container","namespace","##targetNamespace"});
  addAnnotation(getContainerPropertyType_Name(),source,new String[]{"kind","attribute","name","name","namespace","##targetNamespace"});
  addAnnotation(getContainerPropertyType_Reference(),source,new String[]{"kind","attribute","name","reference","namespace","##targetNamespace"});
  addAnnotation(getContainerPropertyType_Required(),source,new String[]{"kind","attribute","name","required","namespace","##targetNamespace"});
  addAnnotation(createConnectorTypeEEnum,source,new String[]{"name","createConnector_._type"});
  addAnnotation(createConnectorTypeObjectEDataType,source,new String[]{"name","createConnector_._type:Object","baseType","createConnector_._type"});
  addAnnotation(documentRootEClass,source,new String[]{"name","","kind","mixed"});
  addAnnotation(getDocumentRoot_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getDocumentRoot_XMLNSPrefixMap(),source,new String[]{"kind","attribute","name","xmlns:prefix"});
  addAnnotation(getDocumentRoot_XSISchemaLocation(),source,new String[]{"kind","attribute","name","xsi:schemaLocation"});
  addAnnotation(getDocumentRoot_MuleConfiguration(),source,new String[]{"kind","element","name","mule-configuration","namespace","##targetNamespace"});
  addAnnotation(enableCorrelationTypeEEnum,source,new String[]{"name","enableCorrelation_._type"});
  addAnnotation(enableCorrelationTypeObjectEDataType,source,new String[]{"name","enableCorrelation_._type:Object","baseType","enableCorrelation_._type"});
  addAnnotation(encryptionStrategyTypeEClass,source,new String[]{"name","encryption-strategyType","kind","mixed"});
  addAnnotation(getEncryptionStrategyType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getEncryptionStrategyType_Properties(),source,new String[]{"kind","element","name","properties","namespace","##targetNamespace"});
  addAnnotation(getEncryptionStrategyType_ClassName(),source,new String[]{"kind","attribute","name","className","namespace","##targetNamespace"});
  addAnnotation(getEncryptionStrategyType_Name(),source,new String[]{"kind","attribute","name","name","namespace","##targetNamespace"});
  addAnnotation(endpointIdentifiersTypeEClass,source,new String[]{"name","endpoint-identifiersType","kind","mixed"});
  addAnnotation(getEndpointIdentifiersType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getEndpointIdentifiersType_EndpointIdentifier(),source,new String[]{"kind","element","name","endpoint-identifier","namespace","##targetNamespace"});
  addAnnotation(endpointIdentifierTypeEClass,source,new String[]{"name","endpoint-identifierType","kind","mixed"});
  addAnnotation(getEndpointIdentifierType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getEndpointIdentifierType_Name(),source,new String[]{"kind","attribute","name","name","namespace","##targetNamespace"});
  addAnnotation(getEndpointIdentifierType_Value(),source,new String[]{"kind","attribute","name","value","namespace","##targetNamespace"});
  addAnnotation(endpointTypeEClass,source,new String[]{"name","endpointType","kind","mixed"});
  addAnnotation(getEndpointType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getEndpointType_Transaction(),source,new String[]{"kind","element","name","transaction","namespace","##targetNamespace"});
  addAnnotation(getEndpointType_Filter(),source,new String[]{"kind","element","name","filter","namespace","##targetNamespace"});
  addAnnotation(getEndpointType_SecurityFilter(),source,new String[]{"kind","element","name","security-filter","namespace","##targetNamespace"});
  addAnnotation(getEndpointType_Properties(),source,new String[]{"kind","element","name","properties","namespace","##targetNamespace"});
  addAnnotation(getEndpointType_Address(),source,new String[]{"kind","attribute","name","address","namespace","##targetNamespace"});
  addAnnotation(getEndpointType_Connector(),source,new String[]{"kind","attribute","name","connector","namespace","##targetNamespace"});
  addAnnotation(getEndpointType_CreateConnector(),source,new String[]{"kind","attribute","name","createConnector","namespace","##targetNamespace"});
  addAnnotation(getEndpointType_Name(),source,new String[]{"kind","attribute","name","name","namespace","##targetNamespace"});
  addAnnotation(getEndpointType_Ref(),source,new String[]{"kind","attribute","name","ref","namespace","##targetNamespace"});
  addAnnotation(getEndpointType_RemoteSync(),source,new String[]{"kind","attribute","name","remoteSync","namespace","##targetNamespace"});
  addAnnotation(getEndpointType_RemoteSyncTimeout(),source,new String[]{"kind","attribute","name","remoteSyncTimeout","namespace","##targetNamespace"});
  addAnnotation(getEndpointType_ResponseTransformers(),source,new String[]{"kind","attribute","name","responseTransformers","namespace","##targetNamespace"});
  addAnnotation(getEndpointType_Synchronous(),source,new String[]{"kind","attribute","name","synchronous","namespace","##targetNamespace"});
  addAnnotation(getEndpointType_Transformers(),source,new String[]{"kind","attribute","name","transformers","namespace","##targetNamespace"});
  addAnnotation(getEndpointType_Type(),source,new String[]{"kind","attribute","name","type","namespace","##targetNamespace"});
  addAnnotation(entryPointResolverTypeEClass,source,new String[]{"name","entry-point-resolverType","kind","mixed"});
  addAnnotation(getEntryPointResolverType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getEntryPointResolverType_ClassName(),source,new String[]{"kind","attribute","name","className","namespace","##targetNamespace"});
  addAnnotation(entryTypeEClass,source,new String[]{"name","entryType","kind","mixed"});
  addAnnotation(getEntryType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getEntryType_Value(),source,new String[]{"kind","attribute","name","value","namespace","##targetNamespace"});
  addAnnotation(environmentPropertiesTypeEClass,source,new String[]{"name","environment-propertiesType","kind","mixed"});
  addAnnotation(getEnvironmentPropertiesType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getEnvironmentPropertiesType_Group(),source,new String[]{"kind","group","name","group:1"});
  addAnnotation(getEnvironmentPropertiesType_Property(),source,new String[]{"kind","element","name","property","namespace","##targetNamespace","group","group:1"});
  addAnnotation(getEnvironmentPropertiesType_FactoryProperty(),source,new String[]{"kind","element","name","factory-property","namespace","##targetNamespace","group","group:1"});
  addAnnotation(getEnvironmentPropertiesType_SystemProperty(),source,new String[]{"kind","element","name","system-property","namespace","##targetNamespace","group","group:1"});
  addAnnotation(getEnvironmentPropertiesType_Map(),source,new String[]{"kind","element","name","map","namespace","##targetNamespace","group","group:1"});
  addAnnotation(getEnvironmentPropertiesType_List(),source,new String[]{"kind","element","name","list","namespace","##targetNamespace","group","group:1"});
  addAnnotation(getEnvironmentPropertiesType_FileProperties(),source,new String[]{"kind","element","name","file-properties","namespace","##targetNamespace","group","group:1"});
  addAnnotation(exceptionStrategyTypeEClass,source,new String[]{"name","exception-strategyType","kind","mixed"});
  addAnnotation(getExceptionStrategyType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getExceptionStrategyType_Endpoint(),source,new String[]{"kind","element","name","endpoint","namespace","##targetNamespace"});
  addAnnotation(getExceptionStrategyType_GlobalEndpoint(),source,new String[]{"kind","element","name","global-endpoint","namespace","##targetNamespace"});
  addAnnotation(getExceptionStrategyType_Properties(),source,new String[]{"kind","element","name","properties","namespace","##targetNamespace"});
  addAnnotation(getExceptionStrategyType_ClassName(),source,new String[]{"kind","attribute","name","className","namespace","##targetNamespace"});
  addAnnotation(exhaustedActionTypeEEnum,source,new String[]{"name","exhaustedAction_._type"});
  addAnnotation(exhaustedActionTypeObjectEDataType,source,new String[]{"name","exhaustedAction_._type:Object","baseType","exhaustedAction_._type"});
  addAnnotation(factoryEntryTypeEClass,source,new String[]{"name","factory-entryType","kind","mixed"});
  addAnnotation(getFactoryEntryType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getFactoryEntryType_Factory(),source,new String[]{"kind","attribute","name","factory","namespace","##targetNamespace"});
  addAnnotation(factoryPropertyTypeEClass,source,new String[]{"name","factory-propertyType","kind","mixed"});
  addAnnotation(getFactoryPropertyType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getFactoryPropertyType_Factory(),source,new String[]{"kind","attribute","name","factory","namespace","##targetNamespace"});
  addAnnotation(getFactoryPropertyType_Name(),source,new String[]{"kind","attribute","name","name","namespace","##targetNamespace"});
  addAnnotation(filePropertiesTypeEClass,source,new String[]{"name","file-propertiesType","kind","mixed"});
  addAnnotation(getFilePropertiesType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getFilePropertiesType_Location(),source,new String[]{"kind","attribute","name","location","namespace","##targetNamespace"});
  addAnnotation(getFilePropertiesType_Override(),source,new String[]{"kind","attribute","name","override","namespace","##targetNamespace"});
  addAnnotation(filterTypeEClass,source,new String[]{"name","filterType","kind","mixed"});
  addAnnotation(getFilterType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getFilterType_Properties(),source,new String[]{"kind","element","name","properties","namespace","##targetNamespace"});
  addAnnotation(getFilterType_Filter(),source,new String[]{"kind","element","name","filter","namespace","##targetNamespace"});
  addAnnotation(getFilterType_LeftFilter(),source,new String[]{"kind","element","name","left-filter","namespace","##targetNamespace"});
  addAnnotation(getFilterType_RightFilter(),source,new String[]{"kind","element","name","right-filter","namespace","##targetNamespace"});
  addAnnotation(getFilterType_ClassName(),source,new String[]{"kind","attribute","name","className","namespace","##targetNamespace"});
  addAnnotation(getFilterType_ConfigFile(),source,new String[]{"kind","attribute","name","configFile","namespace","##targetNamespace"});
  addAnnotation(getFilterType_ExpectedType(),source,new String[]{"kind","attribute","name","expectedType","namespace","##targetNamespace"});
  addAnnotation(getFilterType_Expression(),source,new String[]{"kind","attribute","name","expression","namespace","##targetNamespace"});
  addAnnotation(getFilterType_Path(),source,new String[]{"kind","attribute","name","path","namespace","##targetNamespace"});
  addAnnotation(getFilterType_Pattern(),source,new String[]{"kind","attribute","name","pattern","namespace","##targetNamespace"});
  addAnnotation(globalEndpointsTypeEClass,source,new String[]{"name","global-endpointsType","kind","mixed"});
  addAnnotation(getGlobalEndpointsType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getGlobalEndpointsType_Endpoint(),source,new String[]{"kind","element","name","endpoint","namespace","##targetNamespace"});
  addAnnotation(globalEndpointTypeEClass,source,new String[]{"name","global-endpointType","kind","mixed"});
  addAnnotation(getGlobalEndpointType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getGlobalEndpointType_Transaction(),source,new String[]{"kind","element","name","transaction","namespace","##targetNamespace"});
  addAnnotation(getGlobalEndpointType_Filter(),source,new String[]{"kind","element","name","filter","namespace","##targetNamespace"});
  addAnnotation(getGlobalEndpointType_SecurityFilter(),source,new String[]{"kind","element","name","security-filter","namespace","##targetNamespace"});
  addAnnotation(getGlobalEndpointType_Properties(),source,new String[]{"kind","element","name","properties","namespace","##targetNamespace"});
  addAnnotation(getGlobalEndpointType_Address(),source,new String[]{"kind","attribute","name","address","namespace","##targetNamespace"});
  addAnnotation(getGlobalEndpointType_Name(),source,new String[]{"kind","attribute","name","name","namespace","##targetNamespace"});
  addAnnotation(getGlobalEndpointType_RemoteSync(),source,new String[]{"kind","attribute","name","remoteSync","namespace","##targetNamespace"});
  addAnnotation(getGlobalEndpointType_RemoteSyncTimeout(),source,new String[]{"kind","attribute","name","remoteSyncTimeout","namespace","##targetNamespace"});
  addAnnotation(getGlobalEndpointType_ResponseTransformers(),source,new String[]{"kind","attribute","name","responseTransformers","namespace","##targetNamespace"});
  addAnnotation(getGlobalEndpointType_Synchronous(),source,new String[]{"kind","attribute","name","synchronous","namespace","##targetNamespace"});
  addAnnotation(getGlobalEndpointType_Transformers(),source,new String[]{"kind","attribute","name","transformers","namespace","##targetNamespace"});
  addAnnotation(idTypeEEnum,source,new String[]{"name","id_._type"});
  addAnnotation(idTypeObjectEDataType,source,new String[]{"name","id_._type:Object","baseType","id_._type"});
  addAnnotation(inboundRouterTypeEClass,source,new String[]{"name","inbound-routerType","kind","mixed"});
  addAnnotation(getInboundRouterType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getInboundRouterType_CatchAllStrategy(),source,new String[]{"kind","element","name","catch-all-strategy","namespace","##targetNamespace"});
  addAnnotation(getInboundRouterType_Endpoint(),source,new String[]{"kind","element","name","endpoint","namespace","##targetNamespace"});
  addAnnotation(getInboundRouterType_GlobalEndpoint(),source,new String[]{"kind","element","name","global-endpoint","namespace","##targetNamespace"});
  addAnnotation(getInboundRouterType_Router(),source,new String[]{"kind","element","name","router","namespace","##targetNamespace"});
  addAnnotation(getInboundRouterType_MatchAll(),source,new String[]{"kind","attribute","name","matchAll","namespace","##targetNamespace"});
  addAnnotation(initialisationPolicyTypeEEnum,source,new String[]{"name","initialisationPolicy_._type"});
  addAnnotation(initialisationPolicyTypeObjectEDataType,source,new String[]{"name","initialisationPolicy_._type:Object","baseType","initialisationPolicy_._type"});
  addAnnotation(initialStateTypeEEnum,source,new String[]{"name","initialState_._type"});
  addAnnotation(initialStateTypeObjectEDataType,source,new String[]{"name","initialState_._type:Object","baseType","initialState_._type"});
  addAnnotation(interceptorStackTypeEClass,source,new String[]{"name","interceptor-stackType","kind","mixed"});
  addAnnotation(getInterceptorStackType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getInterceptorStackType_Interceptor(),source,new String[]{"kind","element","name","interceptor","namespace","##targetNamespace"});
  addAnnotation(getInterceptorStackType_Name(),source,new String[]{"kind","attribute","name","name","namespace","##targetNamespace"});
  addAnnotation(interceptorTypeEClass,source,new String[]{"name","interceptorType","kind","mixed"});
  addAnnotation(getInterceptorType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getInterceptorType_Properties(),source,new String[]{"kind","element","name","properties","namespace","##targetNamespace"});
  addAnnotation(getInterceptorType_ClassName(),source,new String[]{"kind","attribute","name","className","namespace","##targetNamespace"});
  addAnnotation(getInterceptorType_Name(),source,new String[]{"kind","attribute","name","name","namespace","##targetNamespace"});
  addAnnotation(leftFilterTypeEClass,source,new String[]{"name","left-filterType","kind","mixed"});
  addAnnotation(getLeftFilterType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getLeftFilterType_Properties(),source,new String[]{"kind","element","name","properties","namespace","##targetNamespace"});
  addAnnotation(getLeftFilterType_Filter(),source,new String[]{"kind","element","name","filter","namespace","##targetNamespace"});
  addAnnotation(getLeftFilterType_LeftFilter(),source,new String[]{"kind","element","name","left-filter","namespace","##targetNamespace"});
  addAnnotation(getLeftFilterType_RightFilter(),source,new String[]{"kind","element","name","right-filter","namespace","##targetNamespace"});
  addAnnotation(getLeftFilterType_ClassName(),source,new String[]{"kind","attribute","name","className","namespace","##targetNamespace"});
  addAnnotation(getLeftFilterType_ConfigFile(),source,new String[]{"kind","attribute","name","configFile","namespace","##targetNamespace"});
  addAnnotation(getLeftFilterType_ExpectedType(),source,new String[]{"kind","attribute","name","expectedType","namespace","##targetNamespace"});
  addAnnotation(getLeftFilterType_Expression(),source,new String[]{"kind","attribute","name","expression","namespace","##targetNamespace"});
  addAnnotation(getLeftFilterType_Path(),source,new String[]{"kind","attribute","name","path","namespace","##targetNamespace"});
  addAnnotation(getLeftFilterType_Pattern(),source,new String[]{"kind","attribute","name","pattern","namespace","##targetNamespace"});
  addAnnotation(listTypeEClass,source,new String[]{"name","listType","kind","mixed"});
  addAnnotation(getListType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getListType_Group(),source,new String[]{"kind","group","name","group:1"});
  addAnnotation(getListType_Entry(),source,new String[]{"kind","element","name","entry","namespace","##targetNamespace","group","group:1"});
  addAnnotation(getListType_FactoryEntry(),source,new String[]{"kind","element","name","factory-entry","namespace","##targetNamespace","group","group:1"});
  addAnnotation(getListType_SystemEntry(),source,new String[]{"kind","element","name","system-entry","namespace","##targetNamespace","group","group:1"});
  addAnnotation(getListType_ContainerEntry(),source,new String[]{"kind","element","name","container-entry","namespace","##targetNamespace","group","group:1"});
  addAnnotation(getListType_Name(),source,new String[]{"kind","attribute","name","name","namespace","##targetNamespace"});
  addAnnotation(mapTypeEClass,source,new String[]{"name","mapType","kind","mixed"});
  addAnnotation(getMapType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getMapType_Group(),source,new String[]{"kind","group","name","group:1"});
  addAnnotation(getMapType_Property(),source,new String[]{"kind","element","name","property","namespace","##targetNamespace","group","group:1"});
  addAnnotation(getMapType_FactoryProperty(),source,new String[]{"kind","element","name","factory-property","namespace","##targetNamespace","group","group:1"});
  addAnnotation(getMapType_ContainerProperty(),source,new String[]{"kind","element","name","container-property","namespace","##targetNamespace","group","group:1"});
  addAnnotation(getMapType_SystemProperty(),source,new String[]{"kind","element","name","system-property","namespace","##targetNamespace","group","group:1"});
  addAnnotation(getMapType_Map(),source,new String[]{"kind","element","name","map","namespace","##targetNamespace","group","group:1"});
  addAnnotation(getMapType_List(),source,new String[]{"kind","element","name","list","namespace","##targetNamespace","group","group:1"});
  addAnnotation(getMapType_FileProperties(),source,new String[]{"kind","element","name","file-properties","namespace","##targetNamespace","group","group:1"});
  addAnnotation(getMapType_Name(),source,new String[]{"kind","attribute","name","name","namespace","##targetNamespace"});
  addAnnotation(modelTypeEClass,source,new String[]{"name","modelType","kind","mixed"});
  addAnnotation(getModelType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getModelType_Description(),source,new String[]{"kind","element","name","description","namespace","##targetNamespace"});
  addAnnotation(getModelType_EntryPointResolver(),source,new String[]{"kind","element","name","entry-point-resolver","namespace","##targetNamespace"});
  addAnnotation(getModelType_ComponentFactory(),source,new String[]{"kind","element","name","component-factory","namespace","##targetNamespace"});
  addAnnotation(getModelType_ComponentLifecycleAdapterFactory(),source,new String[]{"kind","element","name","component-lifecycle-adapter-factory","namespace","##targetNamespace"});
  addAnnotation(getModelType_ComponentPoolFactory(),source,new String[]{"kind","element","name","component-pool-factory","namespace","##targetNamespace"});
  addAnnotation(getModelType_ExceptionStrategy(),source,new String[]{"kind","element","name","exception-strategy","namespace","##targetNamespace"});
  addAnnotation(getModelType_MuleDescriptor(),source,new String[]{"kind","element","name","mule-descriptor","namespace","##targetNamespace"});
  addAnnotation(getModelType_ClassName(),source,new String[]{"kind","attribute","name","className","namespace","##targetNamespace"});
  addAnnotation(getModelType_Name(),source,new String[]{"kind","attribute","name","name","namespace","##targetNamespace"});
  addAnnotation(getModelType_Ref(),source,new String[]{"kind","attribute","name","ref","namespace","##targetNamespace"});
  addAnnotation(getModelType_Type(),source,new String[]{"kind","attribute","name","type","namespace","##targetNamespace"});
  addAnnotation(muleConfigurationTypeEClass,source,new String[]{"name","mule-configurationType","kind","mixed"});
  addAnnotation(getMuleConfigurationType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getMuleConfigurationType_Description(),source,new String[]{"kind","element","name","description","namespace","##targetNamespace"});
  addAnnotation(getMuleConfigurationType_EnvironmentProperties(),source,new String[]{"kind","element","name","environment-properties","namespace","##targetNamespace"});
  addAnnotation(getMuleConfigurationType_MuleEnvironmentProperties(),source,new String[]{"kind","element","name","mule-environment-properties","namespace","##targetNamespace"});
  addAnnotation(getMuleConfigurationType_ContainerContext(),source,new String[]{"kind","element","name","container-context","namespace","##targetNamespace"});
  addAnnotation(getMuleConfigurationType_SecurityManager(),source,new String[]{"kind","element","name","security-manager","namespace","##targetNamespace"});
  addAnnotation(getMuleConfigurationType_TransactionManager(),source,new String[]{"kind","element","name","transaction-manager","namespace","##targetNamespace"});
  addAnnotation(getMuleConfigurationType_Agents(),source,new String[]{"kind","element","name","agents","namespace","##targetNamespace"});
  addAnnotation(getMuleConfigurationType_Connector(),source,new String[]{"kind","element","name","connector","namespace","##targetNamespace"});
  addAnnotation(getMuleConfigurationType_EndpointIdentifiers(),source,new String[]{"kind","element","name","endpoint-identifiers","namespace","##targetNamespace"});
  addAnnotation(getMuleConfigurationType_Transformers(),source,new String[]{"kind","element","name","transformers","namespace","##targetNamespace"});
  addAnnotation(getMuleConfigurationType_GlobalEndpoints(),source,new String[]{"kind","element","name","global-endpoints","namespace","##targetNamespace"});
  addAnnotation(getMuleConfigurationType_InterceptorStack(),source,new String[]{"kind","element","name","interceptor-stack","namespace","##targetNamespace"});
  addAnnotation(getMuleConfigurationType_Model(),source,new String[]{"kind","element","name","model","namespace","##targetNamespace"});
  addAnnotation(getMuleConfigurationType_MuleDescriptor(),source,new String[]{"kind","element","name","mule-descriptor","namespace","##targetNamespace"});
  addAnnotation(getMuleConfigurationType_Id(),source,new String[]{"kind","attribute","name","id","namespace","##targetNamespace"});
  addAnnotation(getMuleConfigurationType_Version(),source,new String[]{"kind","attribute","name","version","namespace","##targetNamespace"});
  addAnnotation(muleDescriptorTypeEClass,source,new String[]{"name","mule-descriptorType","kind","mixed"});
  addAnnotation(getMuleDescriptorType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getMuleDescriptorType_InboundRouter(),source,new String[]{"kind","element","name","inbound-router","namespace","##targetNamespace"});
  addAnnotation(getMuleDescriptorType_OutboundRouter(),source,new String[]{"kind","element","name","outbound-router","namespace","##targetNamespace"});
  addAnnotation(getMuleDescriptorType_ResponseRouter(),source,new String[]{"kind","element","name","response-router","namespace","##targetNamespace"});
  addAnnotation(getMuleDescriptorType_Interceptor(),source,new String[]{"kind","element","name","interceptor","namespace","##targetNamespace"});
  addAnnotation(getMuleDescriptorType_ThreadingProfile(),source,new String[]{"kind","element","name","threading-profile","namespace","##targetNamespace"});
  addAnnotation(getMuleDescriptorType_PoolingProfile(),source,new String[]{"kind","element","name","pooling-profile","namespace","##targetNamespace"});
  addAnnotation(getMuleDescriptorType_QueueProfile(),source,new String[]{"kind","element","name","queue-profile","namespace","##targetNamespace"});
  addAnnotation(getMuleDescriptorType_ExceptionStrategy(),source,new String[]{"kind","element","name","exception-strategy","namespace","##targetNamespace"});
  addAnnotation(getMuleDescriptorType_Properties(),source,new String[]{"kind","element","name","properties","namespace","##targetNamespace"});
  addAnnotation(getMuleDescriptorType_ContainerManaged(),source,new String[]{"kind","attribute","name","containerManaged","namespace","##targetNamespace"});
  addAnnotation(getMuleDescriptorType_Implementation(),source,new String[]{"kind","attribute","name","implementation","namespace","##targetNamespace"});
  addAnnotation(getMuleDescriptorType_InboundEndpoint(),source,new String[]{"kind","attribute","name","inboundEndpoint","namespace","##targetNamespace"});
  addAnnotation(getMuleDescriptorType_InboundTransformer(),source,new String[]{"kind","attribute","name","inboundTransformer","namespace","##targetNamespace"});
  addAnnotation(getMuleDescriptorType_InitialState(),source,new String[]{"kind","attribute","name","initialState","namespace","##targetNamespace"});
  addAnnotation(getMuleDescriptorType_Name(),source,new String[]{"kind","attribute","name","name","namespace","##targetNamespace"});
  addAnnotation(getMuleDescriptorType_OutboundEndpoint(),source,new String[]{"kind","attribute","name","outboundEndpoint","namespace","##targetNamespace"});
  addAnnotation(getMuleDescriptorType_OutboundTransformer(),source,new String[]{"kind","attribute","name","outboundTransformer","namespace","##targetNamespace"});
  addAnnotation(getMuleDescriptorType_Ref(),source,new String[]{"kind","attribute","name","ref","namespace","##targetNamespace"});
  addAnnotation(getMuleDescriptorType_ResponseTransformer(),source,new String[]{"kind","attribute","name","responseTransformer","namespace","##targetNamespace"});
  addAnnotation(getMuleDescriptorType_Singleton(),source,new String[]{"kind","attribute","name","singleton","namespace","##targetNamespace"});
  addAnnotation(getMuleDescriptorType_Version(),source,new String[]{"kind","attribute","name","version","namespace","##targetNamespace"});
  addAnnotation(muleEnvironmentPropertiesTypeEClass,source,new String[]{"name","mule-environment-propertiesType","kind","mixed"});
  addAnnotation(getMuleEnvironmentPropertiesType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getMuleEnvironmentPropertiesType_ThreadingProfile(),source,new String[]{"kind","element","name","threading-profile","namespace","##targetNamespace"});
  addAnnotation(getMuleEnvironmentPropertiesType_PoolingProfile(),source,new String[]{"kind","element","name","pooling-profile","namespace","##targetNamespace"});
  addAnnotation(getMuleEnvironmentPropertiesType_QueueProfile(),source,new String[]{"kind","element","name","queue-profile","namespace","##targetNamespace"});
  addAnnotation(getMuleEnvironmentPropertiesType_PersistenceStrategy(),source,new String[]{"kind","element","name","persistence-strategy","namespace","##targetNamespace"});
  addAnnotation(getMuleEnvironmentPropertiesType_ConnectionStrategy(),source,new String[]{"kind","element","name","connection-strategy","namespace","##targetNamespace"});
  addAnnotation(getMuleEnvironmentPropertiesType_ClientMode(),source,new String[]{"kind","attribute","name","clientMode","namespace","##targetNamespace"});
  addAnnotation(getMuleEnvironmentPropertiesType_Embedded(),source,new String[]{"kind","attribute","name","embedded","namespace","##targetNamespace"});
  addAnnotation(getMuleEnvironmentPropertiesType_EnableMessageEvents(),source,new String[]{"kind","attribute","name","enableMessageEvents","namespace","##targetNamespace"});
  addAnnotation(getMuleEnvironmentPropertiesType_Encoding(),source,new String[]{"kind","attribute","name","encoding","namespace","##targetNamespace"});
  addAnnotation(getMuleEnvironmentPropertiesType_Model(),source,new String[]{"kind","attribute","name","model","namespace","##targetNamespace"});
  addAnnotation(getMuleEnvironmentPropertiesType_RecoverableMode(),source,new String[]{"kind","attribute","name","recoverableMode","namespace","##targetNamespace"});
  addAnnotation(getMuleEnvironmentPropertiesType_RemoteSync(),source,new String[]{"kind","attribute","name","remoteSync","namespace","##targetNamespace"});
  addAnnotation(getMuleEnvironmentPropertiesType_ServerUrl(),source,new String[]{"kind","attribute","name","serverUrl","namespace","##targetNamespace"});
  addAnnotation(getMuleEnvironmentPropertiesType_Synchronous(),source,new String[]{"kind","attribute","name","synchronous","namespace","##targetNamespace"});
  addAnnotation(getMuleEnvironmentPropertiesType_SynchronousEventTimeout(),source,new String[]{"kind","attribute","name","synchronousEventTimeout","namespace","##targetNamespace"});
  addAnnotation(getMuleEnvironmentPropertiesType_TransactionTimeout(),source,new String[]{"kind","attribute","name","transactionTimeout","namespace","##targetNamespace"});
  addAnnotation(getMuleEnvironmentPropertiesType_WorkingDirectory(),source,new String[]{"kind","attribute","name","workingDirectory","namespace","##targetNamespace"});
  addAnnotation(outboundRouterTypeEClass,source,new String[]{"name","outbound-routerType","kind","mixed"});
  addAnnotation(getOutboundRouterType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getOutboundRouterType_CatchAllStrategy(),source,new String[]{"kind","element","name","catch-all-strategy","namespace","##targetNamespace"});
  addAnnotation(getOutboundRouterType_Router(),source,new String[]{"kind","element","name","router","namespace","##targetNamespace"});
  addAnnotation(getOutboundRouterType_MatchAll(),source,new String[]{"kind","attribute","name","matchAll","namespace","##targetNamespace"});
  addAnnotation(persistenceStrategyTypeEClass,source,new String[]{"name","persistence-strategyType","kind","mixed"});
  addAnnotation(getPersistenceStrategyType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getPersistenceStrategyType_Properties(),source,new String[]{"kind","element","name","properties","namespace","##targetNamespace"});
  addAnnotation(getPersistenceStrategyType_ClassName(),source,new String[]{"kind","attribute","name","className","namespace","##targetNamespace"});
  addAnnotation(poolExhaustedActionTypeEEnum,source,new String[]{"name","poolExhaustedAction_._type"});
  addAnnotation(poolExhaustedActionTypeObjectEDataType,source,new String[]{"name","poolExhaustedAction_._type:Object","baseType","poolExhaustedAction_._type"});
  addAnnotation(poolingProfileTypeEClass,source,new String[]{"name","pooling-profileType","kind","mixed"});
  addAnnotation(getPoolingProfileType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getPoolingProfileType_ExhaustedAction(),source,new String[]{"kind","attribute","name","exhaustedAction","namespace","##targetNamespace"});
  addAnnotation(getPoolingProfileType_Factory(),source,new String[]{"kind","attribute","name","factory","namespace","##targetNamespace"});
  addAnnotation(getPoolingProfileType_InitialisationPolicy(),source,new String[]{"kind","attribute","name","initialisationPolicy","namespace","##targetNamespace"});
  addAnnotation(getPoolingProfileType_MaxActive(),source,new String[]{"kind","attribute","name","maxActive","namespace","##targetNamespace"});
  addAnnotation(getPoolingProfileType_MaxIdle(),source,new String[]{"kind","attribute","name","maxIdle","namespace","##targetNamespace"});
  addAnnotation(getPoolingProfileType_MaxWait(),source,new String[]{"kind","attribute","name","maxWait","namespace","##targetNamespace"});
  addAnnotation(propertiesTypeEClass,source,new String[]{"name","propertiesType","kind","mixed"});
  addAnnotation(getPropertiesType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getPropertiesType_Group(),source,new String[]{"kind","group","name","group:1"});
  addAnnotation(getPropertiesType_Property(),source,new String[]{"kind","element","name","property","namespace","##targetNamespace","group","group:1"});
  addAnnotation(getPropertiesType_FactoryProperty(),source,new String[]{"kind","element","name","factory-property","namespace","##targetNamespace","group","group:1"});
  addAnnotation(getPropertiesType_ContainerProperty(),source,new String[]{"kind","element","name","container-property","namespace","##targetNamespace","group","group:1"});
  addAnnotation(getPropertiesType_SystemProperty(),source,new String[]{"kind","element","name","system-property","namespace","##targetNamespace","group","group:1"});
  addAnnotation(getPropertiesType_Map(),source,new String[]{"kind","element","name","map","namespace","##targetNamespace","group","group:1"});
  addAnnotation(getPropertiesType_List(),source,new String[]{"kind","element","name","list","namespace","##targetNamespace","group","group:1"});
  addAnnotation(getPropertiesType_FileProperties(),source,new String[]{"kind","element","name","file-properties","namespace","##targetNamespace","group","group:1"});
  addAnnotation(getPropertiesType_TextProperty(),source,new String[]{"kind","element","name","text-property","namespace","##targetNamespace","group","group:1"});
  addAnnotation(propertyTypeEClass,source,new String[]{"name","propertyType","kind","mixed"});
  addAnnotation(getPropertyType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getPropertyType_Name(),source,new String[]{"kind","attribute","name","name","namespace","##targetNamespace"});
  addAnnotation(getPropertyType_Value(),source,new String[]{"kind","attribute","name","value","namespace","##targetNamespace"});
  addAnnotation(queueProfileTypeEClass,source,new String[]{"name","queue-profileType","kind","mixed"});
  addAnnotation(getQueueProfileType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getQueueProfileType_Properties(),source,new String[]{"kind","element","name","properties","namespace","##targetNamespace"});
  addAnnotation(getQueueProfileType_MaxOutstandingMessages(),source,new String[]{"kind","attribute","name","maxOutstandingMessages","namespace","##targetNamespace"});
  addAnnotation(getQueueProfileType_Persistent(),source,new String[]{"kind","attribute","name","persistent","namespace","##targetNamespace"});
  addAnnotation(replyToTypeEClass,source,new String[]{"name","reply-toType","kind","mixed"});
  addAnnotation(getReplyToType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getReplyToType_Address(),source,new String[]{"kind","attribute","name","address","namespace","##targetNamespace"});
  addAnnotation(responseRouterTypeEClass,source,new String[]{"name","response-routerType","kind","mixed"});
  addAnnotation(getResponseRouterType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getResponseRouterType_Endpoint(),source,new String[]{"kind","element","name","endpoint","namespace","##targetNamespace"});
  addAnnotation(getResponseRouterType_GlobalEndpoint(),source,new String[]{"kind","element","name","global-endpoint","namespace","##targetNamespace"});
  addAnnotation(getResponseRouterType_Router(),source,new String[]{"kind","element","name","router","namespace","##targetNamespace"});
  addAnnotation(getResponseRouterType_Timeout(),source,new String[]{"kind","attribute","name","timeout","namespace","##targetNamespace"});
  addAnnotation(rightFilterTypeEClass,source,new String[]{"name","right-filterType","kind","mixed"});
  addAnnotation(getRightFilterType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getRightFilterType_Properties(),source,new String[]{"kind","element","name","properties","namespace","##targetNamespace"});
  addAnnotation(getRightFilterType_Filter(),source,new String[]{"kind","element","name","filter","namespace","##targetNamespace"});
  addAnnotation(getRightFilterType_LeftFilter(),source,new String[]{"kind","element","name","left-filter","namespace","##targetNamespace"});
  addAnnotation(getRightFilterType_RightFilter(),source,new String[]{"kind","element","name","right-filter","namespace","##targetNamespace"});
  addAnnotation(getRightFilterType_ClassName(),source,new String[]{"kind","attribute","name","className","namespace","##targetNamespace"});
  addAnnotation(getRightFilterType_ConfigFile(),source,new String[]{"kind","attribute","name","configFile","namespace","##targetNamespace"});
  addAnnotation(getRightFilterType_ExpectedType(),source,new String[]{"kind","attribute","name","expectedType","namespace","##targetNamespace"});
  addAnnotation(getRightFilterType_Expression(),source,new String[]{"kind","attribute","name","expression","namespace","##targetNamespace"});
  addAnnotation(getRightFilterType_Path(),source,new String[]{"kind","attribute","name","path","namespace","##targetNamespace"});
  addAnnotation(getRightFilterType_Pattern(),source,new String[]{"kind","attribute","name","pattern","namespace","##targetNamespace"});
  addAnnotation(routerTypeEClass,source,new String[]{"name","routerType","kind","mixed"});
  addAnnotation(getRouterType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getRouterType_Endpoint(),source,new String[]{"kind","element","name","endpoint","namespace","##targetNamespace"});
  addAnnotation(getRouterType_GlobalEndpoint(),source,new String[]{"kind","element","name","global-endpoint","namespace","##targetNamespace"});
  addAnnotation(getRouterType_ReplyTo(),source,new String[]{"kind","element","name","reply-to","namespace","##targetNamespace"});
  addAnnotation(getRouterType_Transaction(),source,new String[]{"kind","element","name","transaction","namespace","##targetNamespace"});
  addAnnotation(getRouterType_Filter(),source,new String[]{"kind","element","name","filter","namespace","##targetNamespace"});
  addAnnotation(getRouterType_Properties(),source,new String[]{"kind","element","name","properties","namespace","##targetNamespace"});
  addAnnotation(getRouterType_ClassName(),source,new String[]{"kind","attribute","name","className","namespace","##targetNamespace"});
  addAnnotation(getRouterType_EnableCorrelation(),source,new String[]{"kind","attribute","name","enableCorrelation","namespace","##targetNamespace"});
  addAnnotation(getRouterType_PropertyExtractor(),source,new String[]{"kind","attribute","name","propertyExtractor","namespace","##targetNamespace"});
  addAnnotation(securityFilterTypeEClass,source,new String[]{"name","security-filterType","kind","mixed"});
  addAnnotation(getSecurityFilterType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getSecurityFilterType_Properties(),source,new String[]{"kind","element","name","properties","namespace","##targetNamespace"});
  addAnnotation(getSecurityFilterType_ClassName(),source,new String[]{"kind","attribute","name","className","namespace","##targetNamespace"});
  addAnnotation(getSecurityFilterType_UseProviders(),source,new String[]{"kind","attribute","name","useProviders","namespace","##targetNamespace"});
  addAnnotation(securityManagerTypeEClass,source,new String[]{"name","security-managerType","kind","mixed"});
  addAnnotation(getSecurityManagerType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getSecurityManagerType_SecurityProvider(),source,new String[]{"kind","element","name","security-provider","namespace","##targetNamespace"});
  addAnnotation(getSecurityManagerType_EncryptionStrategy(),source,new String[]{"kind","element","name","encryption-strategy","namespace","##targetNamespace"});
  addAnnotation(getSecurityManagerType_ClassName(),source,new String[]{"kind","attribute","name","className","namespace","##targetNamespace"});
  addAnnotation(getSecurityManagerType_Ref(),source,new String[]{"kind","attribute","name","ref","namespace","##targetNamespace"});
  addAnnotation(securityProviderTypeEClass,source,new String[]{"name","security-providerType","kind","mixed"});
  addAnnotation(getSecurityProviderType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getSecurityProviderType_Properties(),source,new String[]{"kind","element","name","properties","namespace","##targetNamespace"});
  addAnnotation(getSecurityProviderType_ClassName(),source,new String[]{"kind","attribute","name","className","namespace","##targetNamespace"});
  addAnnotation(getSecurityProviderType_Name(),source,new String[]{"kind","attribute","name","name","namespace","##targetNamespace"});
  addAnnotation(getSecurityProviderType_Ref(),source,new String[]{"kind","attribute","name","ref","namespace","##targetNamespace"});
  addAnnotation(systemEntryTypeEClass,source,new String[]{"name","system-entryType","kind","mixed"});
  addAnnotation(getSystemEntryType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getSystemEntryType_DefaultValue(),source,new String[]{"kind","attribute","name","defaultValue","namespace","##targetNamespace"});
  addAnnotation(getSystemEntryType_Key(),source,new String[]{"kind","attribute","name","key","namespace","##targetNamespace"});
  addAnnotation(systemPropertyTypeEClass,source,new String[]{"name","system-propertyType","kind","mixed"});
  addAnnotation(getSystemPropertyType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getSystemPropertyType_DefaultValue(),source,new String[]{"kind","attribute","name","defaultValue","namespace","##targetNamespace"});
  addAnnotation(getSystemPropertyType_Key(),source,new String[]{"kind","attribute","name","key","namespace","##targetNamespace"});
  addAnnotation(getSystemPropertyType_Name(),source,new String[]{"kind","attribute","name","name","namespace","##targetNamespace"});
  addAnnotation(textPropertyTypeEClass,source,new String[]{"name","text-propertyType","kind","simple"});
  addAnnotation(getTextPropertyType_Value(),source,new String[]{"name",":0","kind","simple"});
  addAnnotation(getTextPropertyType_Name(),source,new String[]{"kind","attribute","name","name","namespace","##targetNamespace"});
  addAnnotation(threadingProfileTypeEClass,source,new String[]{"name","threading-profileType","kind","mixed"});
  addAnnotation(getThreadingProfileType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getThreadingProfileType_DoThreading(),source,new String[]{"kind","attribute","name","doThreading","namespace","##targetNamespace"});
  addAnnotation(getThreadingProfileType_Id(),source,new String[]{"kind","attribute","name","id","namespace","##targetNamespace"});
  addAnnotation(getThreadingProfileType_MaxBufferSize(),source,new String[]{"kind","attribute","name","maxBufferSize","namespace","##targetNamespace"});
  addAnnotation(getThreadingProfileType_MaxThreadsActive(),source,new String[]{"kind","attribute","name","maxThreadsActive","namespace","##targetNamespace"});
  addAnnotation(getThreadingProfileType_MaxThreadsIdle(),source,new String[]{"kind","attribute","name","maxThreadsIdle","namespace","##targetNamespace"});
  addAnnotation(getThreadingProfileType_PoolExhaustedAction(),source,new String[]{"kind","attribute","name","poolExhaustedAction","namespace","##targetNamespace"});
  addAnnotation(getThreadingProfileType_ThreadTTL(),source,new String[]{"kind","attribute","name","threadTTL","namespace","##targetNamespace"});
  addAnnotation(getThreadingProfileType_ThreadWaitTimeout(),source,new String[]{"kind","attribute","name","threadWaitTimeout","namespace","##targetNamespace"});
  addAnnotation(transactionManagerTypeEClass,source,new String[]{"name","transaction-managerType","kind","mixed"});
  addAnnotation(getTransactionManagerType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getTransactionManagerType_Properties(),source,new String[]{"kind","element","name","properties","namespace","##targetNamespace"});
  addAnnotation(getTransactionManagerType_Factory(),source,new String[]{"kind","attribute","name","factory","namespace","##targetNamespace"});
  addAnnotation(getTransactionManagerType_Ref(),source,new String[]{"kind","attribute","name","ref","namespace","##targetNamespace"});
  addAnnotation(transactionTypeEClass,source,new String[]{"name","transactionType","kind","mixed"});
  addAnnotation(getTransactionType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getTransactionType_Constraint(),source,new String[]{"kind","element","name","constraint","namespace","##targetNamespace"});
  addAnnotation(getTransactionType_Action(),source,new String[]{"kind","attribute","name","action","namespace","##targetNamespace"});
  addAnnotation(getTransactionType_Factory(),source,new String[]{"kind","attribute","name","factory","namespace","##targetNamespace"});
  addAnnotation(getTransactionType_Timeout(),source,new String[]{"kind","attribute","name","timeout","namespace","##targetNamespace"});
  addAnnotation(transformersTypeEClass,source,new String[]{"name","transformersType","kind","mixed"});
  addAnnotation(getTransformersType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getTransformersType_Transformer(),source,new String[]{"kind","element","name","transformer","namespace","##targetNamespace"});
  addAnnotation(transformerTypeEClass,source,new String[]{"name","transformerType","kind","mixed"});
  addAnnotation(getTransformerType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getTransformerType_Properties(),source,new String[]{"kind","element","name","properties","namespace","##targetNamespace"});
  addAnnotation(getTransformerType_ClassName(),source,new String[]{"kind","attribute","name","className","namespace","##targetNamespace"});
  addAnnotation(getTransformerType_IgnoreBadInput(),source,new String[]{"kind","attribute","name","ignoreBadInput","namespace","##targetNamespace"});
  addAnnotation(getTransformerType_Name(),source,new String[]{"kind","attribute","name","name","namespace","##targetNamespace"});
  addAnnotation(getTransformerType_Ref(),source,new String[]{"kind","attribute","name","ref","namespace","##targetNamespace"});
  addAnnotation(getTransformerType_ReturnClass(),source,new String[]{"kind","attribute","name","returnClass","namespace","##targetNamespace"});
  addAnnotation(typeTypeEDataType,source,new String[]{"name","type_._type","baseType","http://www.eclipse.org/emf/2003/XMLType#NMTOKEN","enumeration","seda direct pipeline jms jms-clustered jcyclone custom"});
  addAnnotation(typeType1EEnum,source,new String[]{"name","type_._1_._type"});
  addAnnotation(typeTypeObjectEDataType,source,new String[]{"name","type_._1_._type:Object","baseType","type_._1_._type"});
  addAnnotation(versionTypeEDataType,source,new String[]{"name","version_._type","baseType","http://www.eclipse.org/emf/2003/XMLType#NMTOKEN","enumeration","1.0"});
}
