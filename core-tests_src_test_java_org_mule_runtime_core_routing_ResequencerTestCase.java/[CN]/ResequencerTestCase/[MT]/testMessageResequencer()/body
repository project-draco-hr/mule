{
  MuleSession session=getTestSession(null,muleContext);
  Flow flow=getTestFlow("test",Apple.class);
  assertNotNull(flow);
  TestEventResequencer router=new TestEventResequencer(3);
  router.setMuleContext(muleContext);
  router.setFlowConstruct(flow);
  router.initialise();
  MutableMuleMessage message1=new DefaultMuleMessage("test event A",muleContext);
  MutableMuleMessage message2=new DefaultMuleMessage("test event B",muleContext);
  MutableMuleMessage message3=new DefaultMuleMessage("test event C",muleContext);
  final String correlationId=message1.getUniqueId();
  message1.setCorrelationId(correlationId);
  message2.setCorrelationId(correlationId);
  message3.setCorrelationId(correlationId);
  MuleEvent event1=new DefaultMuleEvent(message1,getTestFlow(),session);
  MuleEvent event2=new DefaultMuleEvent(message2,getTestFlow(),session);
  MuleEvent event3=new DefaultMuleEvent(message3,getTestFlow(),session);
  assertNull(router.process(event2));
  assertNull(router.process(event3));
  MuleEvent resultEvent=router.process(event1);
  assertNotNull(resultEvent);
  MuleMessage resultMessage=resultEvent.getMessage();
  assertNotNull(resultMessage);
  assertTrue(getPayloadAsString(resultMessage).equals("test event A") || getPayloadAsString(resultMessage).equals("test event B") || getPayloadAsString(resultMessage).equals("test event C"));
}
