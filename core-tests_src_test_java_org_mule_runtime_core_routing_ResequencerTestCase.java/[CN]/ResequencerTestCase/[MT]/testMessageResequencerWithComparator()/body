{
  MuleSession session=getTestSession(null,muleContext);
  Flow flow=getTestFlow("test",Apple.class);
  assertNotNull(flow);
  TestEventResequencer router=new TestEventResequencer(3);
  router.setMuleContext(muleContext);
  router.setFlowConstruct(flow);
  router.initialise();
  MuleMessage message1=MuleMessage.builder().payload("test event A").build();
  MuleMessage message2=MuleMessage.builder().payload("test event B").build();
  MuleMessage message3=MuleMessage.builder().payload("test event C").build();
  MuleEvent event1=new DefaultMuleEvent(create(flow,message1.getUniqueId()),message1,getTestFlow(),session);
  MuleEvent event2=new DefaultMuleEvent(create(flow,message1.getUniqueId()),message2,getTestFlow(),session);
  MuleEvent event3=new DefaultMuleEvent(create(flow,message1.getUniqueId()),message3,getTestFlow(),session);
  router=new TestEventResequencer(3);
  router.setMuleContext(muleContext);
  router.setEventComparator(new EventPayloadComparator());
  router.setFlowConstruct(flow);
  router.initialise();
  assertNull(router.process(event2));
  assertNull(router.process(event3));
  MuleEvent resultEvent=router.process(event1);
  assertNotNull(resultEvent);
  MuleMessage resultMessage=resultEvent.getMessage();
  assertNotNull(resultMessage);
  assertEquals("test event C",getPayloadAsString(resultMessage));
}
