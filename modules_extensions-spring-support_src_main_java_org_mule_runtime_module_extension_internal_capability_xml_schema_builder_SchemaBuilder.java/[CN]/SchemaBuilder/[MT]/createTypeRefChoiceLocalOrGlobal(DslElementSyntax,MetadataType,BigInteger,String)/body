{
  if (!isImported(type)) {
    objectTypeDelegate.registerPojoType(type,EMPTY);
    objectTypeDelegate.registerAbstractElement(type,typeDsl);
    if (typeDsl.supportsTopLevelDeclaration() || (typeDsl.supportsChildDeclaration() && typeDsl.isWrapped())) {
      objectTypeDelegate.registerConcreteGlobalElement(typeDsl,EMPTY,getAbstractElementName(typeDsl),objectTypeDelegate.getTypeQName(typeDsl,type));
    }
  }
  final ExplicitGroup choice=new ExplicitGroup();
  choice.setMinOccurs(minOccurs);
  choice.setMaxOccurs(maxOccurs);
  QName refAbstract=new QName(typeDsl.getNamespaceUri(),getAbstractElementName(typeDsl),typeDsl.getNamespace());
  TopLevelElement localAbstractElementRef=createRefElement(refAbstract,false);
  choice.getParticle().add(objectFactory.createElement(localAbstractElementRef));
  QName refGlobal=new QName(typeDsl.getNamespaceUri(),format(GLOBAL_ABSTRACT_ELEMENT_MASK,getAbstractElementName(typeDsl)),typeDsl.getNamespace());
  TopLevelElement topLevelElementRef=createRefElement(refGlobal,false);
  choice.getParticle().add(objectFactory.createElement(topLevelElementRef));
  return choice;
}
