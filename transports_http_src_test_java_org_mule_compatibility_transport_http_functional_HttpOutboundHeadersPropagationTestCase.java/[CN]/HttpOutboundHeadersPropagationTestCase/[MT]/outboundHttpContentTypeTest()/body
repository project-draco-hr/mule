{
  MuleClient client=muleContext.getClient();
  client.dispatch("vm://in",MuleMessage.builder().payload("HelloWorld!").addOutboundProperty("custom-header","value-custom-header").build());
  MuleMessage reply=client.request("vm://out",RECEIVE_TIMEOUT);
  Map<String,Object> headers=(Map<String,Object>)reply.getPayload();
  for (  String header : HttpConstants.REQUEST_HEADER_NAMES.values()) {
    if (!HttpConstants.HEADER_EXPECT.equals(header)) {
      if (HttpConstants.HEADER_COOKIE.equals(header)) {
        assertNotNull("Request header <" + header + "> mshould be defined.",headers.get(HttpConnector.HTTP_COOKIES_PROPERTY));
      }
 else {
        assertNotNull("Request header <" + header + "> should be defined.",headers.get(header));
      }
    }
  }
  for (  String header : HttpConstants.GENERAL_AND_ENTITY_HEADER_NAMES.values()) {
    assertNotNull("General or Entity header <" + header + "> should be defined.",headers.get(header));
  }
  for (  String header : HttpConstants.RESPONSE_HEADER_NAMES.values()) {
    assertNull("Response header <" + header + "> should not be defined.",headers.get(header));
  }
  assertNotNull(reply);
}
