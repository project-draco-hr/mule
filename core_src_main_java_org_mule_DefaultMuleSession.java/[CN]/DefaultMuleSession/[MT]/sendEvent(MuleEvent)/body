{
  int timeout=event.getMessage().getIntProperty(MuleProperties.MULE_EVENT_TIMEOUT_PROPERTY,-1);
  if (timeout >= 0) {
    event.setTimeout(timeout);
  }
  if (event.getEndpoint().canSend()) {
    try {
      if (logger.isDebugEnabled()) {
        logger.debug("sending event: " + event);
      }
      Connector connector=event.getEndpoint().getConnector();
      if (connector instanceof AbstractConnector) {
        ((AbstractConnector)connector).getSessionHandler().storeSessionInfoToMessage(this,event.getMessage());
      }
 else {
        logger.warn("A session handler could not be obtained, using default.");
        new MuleSessionHandler().storeSessionInfoToMessage(this,event.getMessage());
      }
      MuleMessage response=event.getEndpoint().send(event);
      response=OptimizedRequestContext.unsafeRewriteEvent(response);
      processResponse(response);
      return response;
    }
 catch (    MuleException e) {
      throw e;
    }
catch (    Exception e) {
      throw new DispatchException(event.getMessage(),event.getEndpoint(),e);
    }
  }
 else   if (component != null) {
    if (logger.isDebugEnabled()) {
      logger.debug("sending event to component: " + component.getName() + " event is: "+ event);
    }
    return component.sendEvent(event);
  }
 else {
    throw new DispatchException(CoreMessages.noComponentForEndpoint(),event.getMessage(),event.getEndpoint());
  }
}
