{
  final DataType expectedDataType=DataType.builder().type(String.class).mediaType(JSON).charset(CUSTOM_ENCODING).build();
  MVELExpressionLanguage expressionLanguage=new MVELExpressionLanguage(muleContext);
  final CompiledExpression compiledExpression=(CompiledExpression)compileExpression("foo = 'unused'",new ParserContext(expressionLanguage.getParserConfiguration()));
  testEvent().getSession().setProperty("foo","bar");
  final Builder builder=Event.builder(testEvent());
  dataTypePropagator.propagate(testEvent(),builder,new DefaultTypedValue(TEST_MESSAGE,expectedDataType),compiledExpression);
  assertThat(builder.build().getSession().getPropertyDataType("foo"),like(String.class,JSON,CUSTOM_ENCODING));
}
