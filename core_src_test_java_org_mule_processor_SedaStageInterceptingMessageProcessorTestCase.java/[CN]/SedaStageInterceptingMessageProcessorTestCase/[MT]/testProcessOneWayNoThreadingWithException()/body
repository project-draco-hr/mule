{
  ThreadingProfile threadingProfile=new ChainedThreadingProfile(muleContext.getDefaultThreadingProfile());
  threadingProfile.setDoThreading(false);
  threadingProfile.setMuleContext(muleContext);
  MessageProcessor mockListener=mock(MessageProcessor.class);
  when(mockListener.process((MuleEvent)any())).thenThrow(new RuntimeException());
  SedaStageInterceptingMessageProcessor sedaStageInterceptingMessageProcessor=new SedaStageInterceptingMessageProcessor("testProcessOneWayNoThreadingWithException","testProcessOneWayNoThreadingWithException",queueProfile,queueTimeout,threadingProfile,queueStatistics,muleContext);
  sedaStageInterceptingMessageProcessor.setListener(mockListener);
  sedaStageInterceptingMessageProcessor.initialise();
  sedaStageInterceptingMessageProcessor.start();
  MessagingExceptionHandler exceptionHandler=mock(MessagingExceptionHandler.class);
  Flow flow=mock(Flow.class);
  when(flow.getExceptionListener()).thenReturn(exceptionHandler);
  when(flow.getProcessingStrategy()).thenReturn(new AsynchronousProcessingStrategy());
  MuleEvent event=getTestEvent(TEST_MESSAGE,flow,MessageExchangePattern.ONE_WAY);
  sedaStageInterceptingMessageProcessor.process(event);
}
