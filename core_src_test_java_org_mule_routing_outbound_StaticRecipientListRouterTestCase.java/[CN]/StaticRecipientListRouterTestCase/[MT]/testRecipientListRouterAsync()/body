{
  MuleSession session=mock(MuleSession.class);
  OutboundEndpoint endpoint1=getTestOutboundEndpoint("Test1Provider");
  assertNotNull(endpoint1);
  OutboundEndpoint mockendpoint1=RouterTestUtils.createMockEndpoint(endpoint1);
  List<String> recipients=new ArrayList<String>();
  String recipient1="test://recipient1";
  recipients.add(recipient1);
  String recipient2="test://recipient2";
  recipients.add(recipient2);
  MockingStaticRecipientList router=createObject(MockingStaticRecipientList.class);
  router.setRecipients(recipients);
  List<MessageProcessor> endpoints=new ArrayList<MessageProcessor>();
  endpoints.add(mockendpoint1);
  router.setRoutes(endpoints);
  router.setMuleContext(muleContext);
  assertEquals(2,router.getRecipients().size());
  MuleMessage message=new DefaultMuleMessage("test event",muleContext);
  assertTrue(router.isMatch(message));
  router.setMockEndpointListener(new MockEndpointListener(){
    @Override public void mockEndpointAdded(    OutboundEndpoint recipient) throws MuleException {
      when(recipient.process(any(MuleEvent.class))).thenAnswer(new MuleEventCheckAnswer());
    }
  }
);
  router.route(new OutboundRoutingTestEvent(message,session,muleContext));
}
