{
  Mock session=MuleTestUtils.getMockSession();
  session.matchAndReturn("getFlowConstruct",getTestService());
  OutboundEndpoint endpoint1=getTestOutboundEndpoint("Test1Provider");
  assertNotNull(endpoint1);
  Mock mockendpoint1=RouterTestUtils.getMockEndpoint(endpoint1);
  List<String> recipients=new ArrayList<String>();
  String recipient1="test://recipient1";
  recipients.add(recipient1);
  String recipient2="test://recipient2";
  recipients.add(recipient2);
  MockingStaticRecipientList router=createObject(MockingStaticRecipientList.class);
  router.setRecipients(recipients);
  List<OutboundEndpoint> endpoints=new ArrayList<OutboundEndpoint>();
  endpoints.add((OutboundEndpoint)mockendpoint1.proxy());
  router.setEndpoints(endpoints);
  router.setMuleContext(muleContext);
  assertEquals(2,router.getRecipients().size());
  MuleMessage message=new DefaultMuleMessage("test event",muleContext);
  assertTrue(router.isMatch(message));
  final List<Mock> mockEndpoints=new ArrayList<Mock>();
  router.setMockEndpointListener(new MockEndpointListener(){
    public void mockEndpointAdded(    Mock recipient){
      mockEndpoints.add(recipient);
      recipient.expect("process",RouterTestUtils.getArgListCheckerMuleEvent());
    }
  }
);
  router.route(new OutboundRoutingTestEvent(message,(MuleSession)session.proxy()));
  for (  Mock mockEp : mockEndpoints) {
    mockEp.verify();
  }
}
