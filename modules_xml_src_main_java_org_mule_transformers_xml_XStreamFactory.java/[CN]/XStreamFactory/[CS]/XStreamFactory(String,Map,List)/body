{
  Class driverClass=ClassUtils.loadClass(driverClassName,this.getClass());
  xstream=new XStream((HierarchicalStreamDriver)driverClass.newInstance());
  xstream.registerConverter(new XStreamFactory.ConcurrentHashMapConverter(xstream.getClassMapper()),-1);
  if (aliases != null) {
    for (Iterator iterator=aliases.entrySet().iterator(); iterator.hasNext(); ) {
      Map.Entry entry=(Map.Entry)iterator.next();
      Class aliasClass=ClassUtils.loadClass(entry.getValue().toString(),getClass());
      xstream.alias(entry.getKey().toString(),aliasClass);
    }
  }
  if (converters != null) {
    for (Iterator iterator=converters.iterator(); iterator.hasNext(); ) {
      Class converterClazz=ClassUtils.loadClass(iterator.next().toString(),getClass());
      xstream.registerConverter((Converter)converterClazz.newInstance());
    }
  }
}
