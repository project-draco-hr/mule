{
  super(CLASSPATH_EMPTY,parentCl);
  try {
    this.monitoredResource=monitoredResource;
    File parentFile=monitoredResource.getParentFile();
    File libDir=new File(parentFile,"lib");
    if (logger.isInfoEnabled()) {
      logger.info("Library directory: " + libDir);
    }
    URL[] urls=ReloadableBuilder.CLASSPATH_EMPTY;
    if (libDir.exists() && libDir.canRead()) {
      Collection jars=FileUtils.listFiles(libDir,new String[]{"jar"},false);
      File[] jarFiles=(File[])jars.toArray(new File[jars.size()]);
      urls=FileUtils.toURLs(jarFiles);
      if (urls.length > 0 && logger.isInfoEnabled()) {
        StringBuilder sb=new StringBuilder();
        sb.append("Updating the following jars:").append(SystemUtils.LINE_SEPARATOR);
        sb.append("=============================").append(SystemUtils.LINE_SEPARATOR);
        for (        URL url : urls) {
          sb.append(url).append(SystemUtils.LINE_SEPARATOR);
        }
        sb.append("=============================").append(SystemUtils.LINE_SEPARATOR);
        logger.info(sb.toString());
      }
    }
    for (    URL url : urls) {
      addURL(url);
    }
  }
 catch (  IOException e) {
    if (logger.isDebugEnabled()) {
      logger.debug(e);
    }
  }
}
