{
  if (algorithm == null) {
    throw new InitialisationException(new Message(Messages.X_IS_NULL,"PBE Algorithm"),this);
  }
 else {
    logger.debug("Using encryption algorithm: " + algorithm);
  }
  if (salt == null) {
    salt=new byte[]{(byte)0xc7,(byte)0x73,(byte)0x21,(byte)0x8c,(byte)0x7e,(byte)0xc8,(byte)0xee,(byte)0x99};
    logger.debug("Salt is not set. Using default salt");
  }
  if (password == null) {
    throw new InitialisationException(new Message(Messages.X_IS_NULL,"Password"),this);
  }
  pbeParamSpec=new PBEParameterSpec(salt,iterationCount);
  pbeKeySpec=new PBEKeySpec(password);
  try {
    keyFac=SecretKeyFactory.getInstance(getAlgorithm());
    pbeKey=keyFac.generateSecret(pbeKeySpec);
    encryptCipher=Cipher.getInstance(getAlgorithm());
    encryptCipher.init(Cipher.ENCRYPT_MODE,pbeKey,pbeParamSpec);
    decryptCipher=Cipher.getInstance(getAlgorithm());
    decryptCipher.init(Cipher.DECRYPT_MODE,pbeKey,pbeParamSpec);
  }
 catch (  Exception e) {
    throw new InitialisationException(new Message(Messages.FAILED_TO_CREATE_X,"PBE encryption ciphers"),e,this);
  }
}
