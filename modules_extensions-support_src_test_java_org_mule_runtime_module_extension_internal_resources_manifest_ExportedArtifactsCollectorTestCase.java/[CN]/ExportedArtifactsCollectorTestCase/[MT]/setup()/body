{
  ExportModelProperty exportModelProperty=new ExportModelProperty(emptyList(),emptyList());
  when(extensionModel.getModelProperty(ExportModelProperty.class)).thenReturn(Optional.of(exportModelProperty));
  ClassLoaderModelProperty classLoaderModelProperty=new ClassLoaderModelProperty(getClass().getClassLoader());
  when(extensionModel.getModelProperty(ClassLoaderModelProperty.class)).thenReturn(Optional.of(classLoaderModelProperty));
  OutputModel appleList=mockOutputModel(new TypeToken<List<Apple>>(){
  }
.getType());
  OperationModel firstOperation=mockOperationModel(appleList,mockOutputModel(List.class));
  ParameterModel parameter=mockParameterModel(Shape.class);
  OutputModel resultList=mockOutputModel(new TypeToken<List<Result<Apple,VeganAttributes>>>(){
  }
.getType());
  OperationModel secondOperation=mockOperationModel(resultList,mockOutputModel(List.class),parameter);
  when(extensionModel.getOperationModels()).thenReturn(asList(firstOperation,secondOperation));
  collector=new ExportedArtifactsCollector(extensionModel);
}
