{
  if (exception instanceof InvocationTargetException) {
    Throwable target=exception.getCause();
    exception=target instanceof Exception ? (Exception)target : new Exception(target);
  }
  if (isConnected() && exception instanceof ConnectException && !(retryPolicyTemplate instanceof NoRetryPolicyTemplate)) {
    logger.info("Exception caught is a ConnectException, attempting to reconnect...");
    try {
      try {
        disconnect();
      }
 catch (      Exception de) {
        logger.error(de);
      }
      if (exceptionListener != null) {
        exceptionListener.exceptionThrown(exception);
      }
 else {
        throw new MuleRuntimeException(CoreMessages.exceptionOnConnectorNoExceptionListener(this.getName()),exception);
      }
      Map<Object,Object> info=new HashMap<Object,Object>();
      if (failed instanceof MessageReceiver) {
        info.put(RetryContext.FAILED_RECEIVER,((MessageReceiver)failed).getReceiverKey());
      }
 else       if (failed instanceof MessageDispatcher) {
        info.put(RetryContext.FAILED_DISPATCHER,((MessageDispatcher)failed).getEndpoint());
      }
 else       if (failed instanceof MessageRequester) {
        info.put(RetryContext.FAILED_REQUESTER,((MessageRequester)failed).getEndpoint());
      }
      retryPolicyTemplate.setMetaInfo(info);
      connect();
    }
 catch (    Exception e) {
      if (exceptionListener == null) {
        throw new MuleRuntimeException(CoreMessages.exceptionOnConnectorNoExceptionListener(this.getName()),e);
      }
 else {
        exceptionListener.exceptionThrown(e);
      }
    }
  }
 else {
    if (exceptionListener != null) {
      exceptionListener.exceptionThrown(exception);
    }
 else {
      throw new MuleRuntimeException(CoreMessages.exceptionOnConnectorNoExceptionListener(this.getName()),exception);
    }
  }
}
