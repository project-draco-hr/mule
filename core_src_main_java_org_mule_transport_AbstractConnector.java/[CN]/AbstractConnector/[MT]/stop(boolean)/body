{
  if (!this.isStarted()) {
    logger.warn("Attempting to stop a connector which is not started: " + getName());
    return;
  }
  if (this.isDisposed()) {
    return;
  }
  if (logger.isInfoEnabled()) {
    logger.info("Stopping: " + this);
  }
  shutdownScheduler();
  if (disposeWorkManagers) {
    disposeWorkManagers();
  }
  this.doStop();
  started.set(false);
  if (receivers != null) {
    for (    MessageReceiver receiver : receivers.values()) {
      if (logger.isDebugEnabled()) {
        logger.debug("Stopping receiver on endpoint: " + receiver.getEndpoint().getEndpointURI());
      }
      receiver.stop();
    }
  }
  this.disposeDispatchers();
  this.disposeRequesters();
  if (this.isConnected()) {
    try {
      this.disconnect();
    }
 catch (    Exception e) {
      logger.error("Failed to disconnect: " + e.getMessage(),e);
    }
  }
  scheduler=null;
  if (logger.isInfoEnabled()) {
    logger.info("Stopped: " + this);
  }
}
