{
  this.checkDisposed();
  if (isConnected()) {
    return;
  }
  if (logger.isDebugEnabled()) {
    logger.debug("Connecting: " + this);
  }
  retryPolicyTemplate.execute(new RetryCallback(){
    public void doWork(    RetryContext context) throws Exception {
      if (!validateConnection()) {
        throw new ConnectException(MessageFactory.createStaticMessage("Unable to connect to resource"),null);
      }
      doConnect();
      Map info=context.getMetaInfo();
      if (info != null) {
        if (info.get(RetryContext.FAILED_RECEIVER) != null) {
          String receiverKey=(String)info.get(RetryContext.FAILED_RECEIVER);
          MessageReceiver receiver=(MessageReceiver)receivers.get(receiverKey);
          if (!receiver.validateConnection()) {
            throw new ConnectException(MessageFactory.createStaticMessage("Unable to connect to resource"),receiver);
          }
        }
 else         if (info.get(RetryContext.FAILED_DISPATCHER) != null) {
          OutboundEndpoint endpoint=(OutboundEndpoint)info.get(RetryContext.FAILED_DISPATCHER);
          MessageDispatcher dispatcher=(MessageDispatcher)dispatchers.borrowObject(endpoint);
          try {
            if (!dispatcher.validateConnection()) {
              throw new ConnectException(MessageFactory.createStaticMessage("Unable to connect to resource"),null);
            }
          }
  finally {
            dispatchers.returnObject(endpoint,dispatcher);
          }
        }
 else         if (info.get(RetryContext.FAILED_REQUESTER) != null) {
          OutboundEndpoint endpoint=(OutboundEndpoint)info.get(RetryContext.FAILED_REQUESTER);
          MessageRequester requester=(MessageRequester)requesters.borrowObject(endpoint);
          try {
            if (!requester.validateConnection()) {
              throw new ConnectException(MessageFactory.createStaticMessage("Unable to connect to resource"),null);
            }
          }
  finally {
            requesters.returnObject(endpoint,requester);
          }
        }
      }
      setConnected(true);
      logger.info("Connected: " + getWorkDescription());
      if (startOnConnect) {
        start();
      }
    }
    public String getWorkDescription(){
      return getConnectionDescription();
    }
  }
,muleContext.getWorkManager());
}
