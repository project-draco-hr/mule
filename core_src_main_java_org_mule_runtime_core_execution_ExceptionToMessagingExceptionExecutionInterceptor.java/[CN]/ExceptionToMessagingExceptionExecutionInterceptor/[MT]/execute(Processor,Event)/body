{
  try {
    return messageProcessor.process(event);
  }
 catch (  Exception exception) {
    MessagingException messagingException;
    if (exception instanceof MessagingException) {
      messagingException=(MessagingException)exception;
      Throwable causeException=exception.getCause() != null ? exception.getCause() : exception;
      Optional<Error> error=messagingException.getEvent().getError();
      if (!error.isPresent() || !error.get().getCause().equals(causeException) || !messagingException.causedExactlyBy(error.get().getCause().getClass())) {
        ErrorType errorType=getErrorTypeFromFailingProcessor(messageProcessor,causeException);
        event=Event.builder(messagingException.getEvent()).error(ErrorBuilder.builder(causeException).errorType(errorType).build()).build();
        messagingException.setProcessedEvent(event);
      }
    }
 else {
      Throwable causeException=exception instanceof ErrorMessageAwareException ? ((ErrorMessageAwareException)exception).getRootCause() : exception;
      messagingException=new MessagingException(event,causeException,messageProcessor);
      ErrorType errorType=getErrorTypeFromFailingProcessor(messageProcessor,causeException);
      Event exceptionEvent=messagingException.getEvent();
      event=Event.builder(exceptionEvent).error(ErrorBuilder.builder(exception).errorType(errorType).build()).build();
      messagingException.setProcessedEvent(event);
    }
    if (messagingException.getFailingMessageProcessor() == null) {
      throw putContext(messagingException,messageProcessor,event);
    }
 else {
      throw putContext(messagingException,messagingException.getFailingMessageProcessor(),event);
    }
  }
catch (  Throwable ex) {
    throw putContext(new MessagingException(event,ex,messageProcessor),messageProcessor,event);
  }
}
