{
  Message message=(Message)msg;
  if (logger.isDebugEnabled()) {
    logger.debug("Message received it is of type: " + message.getClass().getName());
  }
  try {
    String correlationId=message.getJMSCorrelationID();
    boolean synchronous=true;
    logger.debug("Message CorrelationId is: " + correlationId);
    logger.info("Jms Message Id is: " + message.getJMSMessageID());
    if (message.getJMSRedelivered()) {
      logger.info("Message with correlationId: " + correlationId + " is redelivered. handing off to Exception Handler");
      handleMessageRedeliviered(message);
      return;
    }
    TransactionProxy trans=connector.beginTransaction(endpoint);
    TransactionCoordination.getInstance().bindTransaction(trans);
    UMOMessageAdapter adapter=connector.getMessageAdapter(message);
    routeMessage(new MuleMessage(adapter),trans,synchronous);
  }
 catch (  Exception e1) {
    handleException(message,new MuleException("Failed to create incoming message to an event: " + e1.getMessage(),e1));
  }
}
