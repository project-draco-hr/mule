{
  MuleRegistry registry=muleContext.getRegistry();
  registry.registerObject(MuleProperties.OBJECT_MULE_SIMPLE_REGISTRY_BOOTSTRAP,new SimpleRegistryBootstrap());
  configureQueueManager(muleContext);
  registry.registerObject(MuleProperties.OBJECT_SECURITY_MANAGER,new MuleSecurityManager());
  registry.registerObject(MuleProperties.OBJECT_STORE_DEFAULT_IN_MEMORY_NAME,DefaultObjectStoreFactoryBean.createDefaultInMemoryObjectStore());
  registry.registerObject(MuleProperties.OBJECT_STORE_DEFAULT_PERSISTENT_NAME,DefaultObjectStoreFactoryBean.createDefaultPersistentObjectStore());
  registry.registerObject(MuleProperties.QUEUE_STORE_DEFAULT_IN_MEMORY_NAME,DefaultObjectStoreFactoryBean.createDefaultInMemoryQueueStore());
  registry.registerObject(MuleProperties.QUEUE_STORE_DEFAULT_PERSISTENT_NAME,DefaultObjectStoreFactoryBean.createDefaultPersistentQueueStore());
  registry.registerObject(MuleProperties.DEFAULT_USER_OBJECT_STORE_NAME,DefaultObjectStoreFactoryBean.createDefaultUserObjectStore());
  registry.registerObject(MuleProperties.DEFAULT_USER_TRANSIENT_OBJECT_STORE_NAME,DefaultObjectStoreFactoryBean.createDefaultUserTransientObjectStore());
  registry.registerObject(MuleProperties.OBJECT_STORE_MANAGER,new MuleObjectStoreManager());
  registry.registerObject(MuleProperties.OBJECT_DEFAULT_MESSAGE_PROCESSING_MANAGER,new MuleMessageProcessingManager());
  registry.registerObject(MuleProperties.OBJECT_MULE_ENDPOINT_FACTORY,new DefaultEndpointFactory());
  registry.registerObject(MuleProperties.OBJECT_MULE_STREAM_CLOSER_SERVICE,new DefaultStreamCloserService());
  registry.registerObject(MuleProperties.OBJECT_LOCK_FACTORY,new MuleLockFactory());
  registry.registerObject(MuleProperties.OBJECT_LOCK_PROVIDER,new SingleServerLockProvider());
  registry.registerObject(MuleProperties.OBJECT_PROCESSING_TIME_WATCHER,new DefaultProcessingTimeWatcher());
  configureThreadingProfiles(registry);
  registry.registerObject(MuleProperties.OBJECT_DEFAULT_RETRY_POLICY_TEMPLATE,new NoRetryPolicyTemplate());
  registry.registerObject(MuleProperties.OBJECT_CONVERTER_RESOLVER,new DynamicDataTypeConversionResolver(muleContext));
  configureSystemModel(registry);
  if (muleContext.getExpressionManager() instanceof DefaultExpressionManager) {
    ExpressionLanguage expressionLanguage=((DefaultExpressionManager)muleContext.getExpressionManager()).getExpressionLanguage();
    if (expressionLanguage == null) {
      throw new IllegalStateException("Expression language was not properly initialized");
    }
    registry.registerObject(MuleProperties.OBJECT_EXPRESSION_LANGUAGE,expressionLanguage);
  }
 else {
    registry.registerObject(MuleProperties.OBJECT_EXPRESSION_LANGUAGE,new MVELExpressionLanguage(muleContext));
  }
}
