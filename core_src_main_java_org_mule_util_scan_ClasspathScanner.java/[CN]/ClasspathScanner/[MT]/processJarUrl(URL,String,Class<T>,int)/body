{
  Set<Class<T>> set=new HashSet<Class<T>>();
  String path=url.getFile().substring(5,url.getFile().indexOf("!"));
  path=path.replaceAll("%20"," ");
  JarFile jar=new JarFile(path);
  for (Enumeration<JarEntry> entries=jar.entries(); entries.hasMoreElements(); ) {
    JarEntry entry=entries.nextElement();
    if (entry.getName().startsWith(basepath) && entry.getName().endsWith(".class")) {
      try {
        String name=entry.getName();
        if (name.contains("$") && !hasFlag(flags,INCLUDE_INNER)) {
          continue;
        }
        URL classURL=classLoader.getResource(name);
        InputStream classStream=classURL.openStream();
        ClassReader reader=new ClosableClassReader(classStream);
        ClassScanner visitor=getScanner(clazz);
        reader.accept(visitor,0);
        if (visitor.isMatch()) {
          @SuppressWarnings("unchecked") Class<T> loadedClass=(Class<T>)loadClass(visitor.getClassName());
          addClassToSet(loadedClass,set,flags);
        }
      }
 catch (      Exception e) {
        if (logger.isDebugEnabled()) {
          Throwable t=ExceptionHelper.getRootException(e);
          logger.debug(String.format("%s: caused by: %s",e.toString(),t.toString()));
        }
      }
    }
  }
  jar.close();
  return set;
}
