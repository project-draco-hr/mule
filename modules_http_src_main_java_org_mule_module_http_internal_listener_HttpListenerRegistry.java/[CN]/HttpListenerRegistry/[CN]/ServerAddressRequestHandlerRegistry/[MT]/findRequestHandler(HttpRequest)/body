{
  final String path=normalizePathWithSpacesOrEncodedSpaces(request.getPath());
  Preconditions.checkArgument(path.startsWith(SLASH),"path parameter must start with /");
  Stack<PathMap> foundPaths=findPossibleRequestHandlersFromCache(path);
  RequestHandlerMatcherPair requestHandlerMatcherPair=null;
  while (!foundPaths.empty()) {
    final PathMap pathMap=foundPaths.pop();
    requestHandlerMatcherPair=findRequestHandlerMatcherPair(pathMap.getRequestHandlerMatcherPairs(),request);
    if (requestHandlerMatcherPair != null) {
      break;
    }
  }
  if (requestHandlerMatcherPair == null) {
    if (logger.isInfoEnabled()) {
      logger.info("No listener found for request: " + getMethodAndPath(request.getMethod(),request.getPath()));
      logger.info("Available listeners are: [{}]",Joiner.on(", ").join(this.paths));
    }
    return NoListenerRequestHandler.getInstance();
  }
  if (!requestHandlerMatcherPair.isRunning()) {
    return ServiceTemporarilyUnavailableListenerRequestHandler.getInstance();
  }
  return requestHandlerMatcherPair.getRequestHandler();
}
