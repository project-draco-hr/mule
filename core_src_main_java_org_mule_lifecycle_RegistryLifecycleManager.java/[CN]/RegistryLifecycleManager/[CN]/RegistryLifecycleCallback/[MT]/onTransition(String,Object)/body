{
  LifecyclePhase phase=phases.get(phaseName);
  if (logger.isDebugEnabled()) {
    logger.debug("Applying lifecycle phase: " + phase + " for registry: "+ object.getClass().getSimpleName());
  }
  if (phase instanceof ContainerManagedLifecyclePhase) {
    phase.applyLifecycle(object);
    return;
  }
  Set<Object> duplicates=new HashSet<Object>();
  for (  LifecycleObject lo : phase.getOrderedLifecycleObjects()) {
    Collection<?> targetsObj=getLifecycleObject().lookupObjectsForLifecycle(lo.getType());
    List<Object> targets=new LinkedList<Object>(targetsObj);
    if (targets.size() == 0) {
      continue;
    }
    lo.firePreNotification(muleContext);
    for (Iterator<Object> target=targets.iterator(); target.hasNext(); ) {
      Object o=target.next();
      if (duplicates.contains(o)) {
        target.remove();
      }
 else {
        if (logger.isDebugEnabled()) {
          logger.debug("lifecycle phase: " + phase.getName() + " for object: "+ o);
        }
        phase.applyLifecycle(o);
        target.remove();
        duplicates.add(o);
      }
    }
    lo.firePostNotification(muleContext);
  }
}
