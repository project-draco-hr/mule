{
  try {
    TransactionTemplate tt=new TransactionTemplate(endpoint.getTransactionConfig(),connector.getExceptionListener(),connector.getMuleContext());
    if (receiveMessagesInTransaction) {
      TransactionCallback cb=new MessageTransactionCallback(message){
        public Object doInTransaction() throws Exception {
          UMOTransaction tx=TransactionCoordination.getInstance().getTransaction();
          if (tx != null) {
            tx.bindResource(connector.getConnection(),session);
          }
          if (tx instanceof JmsClientAcknowledgeTransaction) {
            tx.bindResource(message,message);
          }
          if (logger.isDebugEnabled()) {
            logger.debug("Message received it is of type: " + ClassUtils.getSimpleName(message.getClass()));
            if (message.getJMSDestination() != null) {
              logger.debug("Message received on " + message.getJMSDestination() + " ("+ message.getJMSDestination().getClass().getName()+ ")");
            }
 else {
              logger.debug("Message received on unknown destination");
            }
            logger.debug("Message CorrelationId is: " + message.getJMSCorrelationID());
            logger.debug("Jms Message Id is: " + message.getJMSMessageID());
          }
          if (message.getJMSRedelivered()) {
            if (logger.isDebugEnabled()) {
              logger.debug("Message with correlationId: " + message.getJMSCorrelationID() + " is redelivered. handing off to Exception Handler");
            }
            redeliveryHandler.handleRedelivery(message);
          }
          UMOMessageAdapter adapter=connector.getMessageAdapter(message);
          routeMessage(new MuleMessage(adapter));
          return null;
        }
      }
;
      tt.execute(cb);
    }
 else {
      UMOMessageAdapter adapter=connector.getMessageAdapter(message);
      routeMessage(new MuleMessage(adapter));
    }
  }
 catch (  Exception e) {
    getConnector().handleException(e);
  }
}
