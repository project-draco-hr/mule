{
  checkDisposed();
  Iterator iter=interceptorList.iterator();
  Object temp;
  while (iter.hasNext()) {
    temp=iter.next();
    if (temp instanceof LifecycleInterceptor) {
      try {
        ((LifecycleInterceptor)temp).dispose();
      }
 catch (      Exception e) {
        throw new MuleException("Failed to dispose Mule proxy: " + descriptor.getName(),e);
      }
    }
  }
  try {
    umo.dispose();
  }
 catch (  Exception e) {
    throw new ModelException("Failed to dispose component: " + e.getMessage(),e);
  }
}
