{
  String transferEncodingHeader=requestBuilder.getHeaders().get(TRANSFER_ENCODING);
  String contentLengthHeader=requestBuilder.getHeaders().get(CONTENT_LENGTH);
  Object payload=event.getMessage().getPayload().getValue();
  if (streamingMode == HttpStreamingType.AUTO) {
    if (contentLengthHeader != null) {
      if (transferEncodingHeader != null) {
        requestBuilder.removeHeader(TRANSFER_ENCODING);
        if (logger.isDebugEnabled()) {
          logger.debug("Cannot send both Transfer-Encoding and Content-Length headers. Transfer-Encoding will not be sent.");
        }
      }
      return false;
    }
    if (transferEncodingHeader == null || !transferEncodingHeader.equalsIgnoreCase(CHUNKED)) {
      return payload instanceof InputStream;
    }
 else {
      return true;
    }
  }
 else   if (streamingMode == HttpStreamingType.ALWAYS) {
    if (contentLengthHeader != null) {
      requestBuilder.removeHeader(CONTENT_LENGTH);
      if (logger.isDebugEnabled()) {
        logger.debug("Content-Length header will not be sent, as the configured requestStreamingMode is ALWAYS");
      }
    }
    if (transferEncodingHeader != null && !transferEncodingHeader.equalsIgnoreCase(CHUNKED)) {
      requestBuilder.removeHeader(TRANSFER_ENCODING);
      if (logger.isDebugEnabled()) {
        logger.debug("Transfer-Encoding header will be sent with value 'chunked' instead of {}, as the configured " + "requestStreamingMode is NEVER",transferEncodingHeader);
      }
    }
    return true;
  }
 else {
    if (transferEncodingHeader != null) {
      requestBuilder.removeHeader(TRANSFER_ENCODING);
      if (logger.isDebugEnabled()) {
        logger.debug("Transfer-Encoding header will not be sent, as the configured requestStreamingMode is NEVER");
      }
    }
    return false;
  }
}
