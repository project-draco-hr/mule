{
  Evaluator evaluator=annotation.annotationType().getAnnotation(Evaluator.class);
  String eval="xpath2";
  String type;
  if (evaluator != null) {
    if (parameterType.equals(Node.class) || parameterType.equals(org.dom4j.Node.class) || parameterType.equals(Element.class)|| parameterType.equals(org.dom4j.Element.class)|| parameterType.equals(Document.class)|| parameterType.equals(org.dom4j.Document.class)) {
      type="[node]";
    }
 else     if (NodeList.class.isAssignableFrom(parameterType)) {
      type="[nodeset]";
    }
 else     if (Boolean.class.isAssignableFrom(parameterType)) {
      type="[boolean]";
    }
 else     if (Double.class.isAssignableFrom(parameterType)) {
      type="[number]";
    }
 else     if (String.class.isAssignableFrom(parameterType)) {
      type="[string]";
    }
 else {
      throw new IllegalArgumentException(XmlMessages.xpathResultTypeNotSupported(parameterType).getMessage());
    }
    return new ExpressionArgument(null,new ExpressionConfig(type + ((XPath)annotation).value(),eval,null),((XPath)annotation).optional(),parameterType);
  }
 else {
    throw new IllegalArgumentException("The @Evaluator annotation must be set on an Expression Annotation");
  }
}
