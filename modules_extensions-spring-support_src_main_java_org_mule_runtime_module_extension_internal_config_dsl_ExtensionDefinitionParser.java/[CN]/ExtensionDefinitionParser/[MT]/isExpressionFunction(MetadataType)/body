{
  if (!Function.class.isAssignableFrom(getType(metadataType))) {
    return false;
  }
  Optional<ClassInformationAnnotation> generics=metadataType.getAnnotation(ClassInformationAnnotation.class);
  if (!generics.isPresent()) {
    return false;
  }
  if (generics.get().getGenericTypes().size() != 2) {
    return false;
  }
  final String genericClassName=generics.get().getGenericTypes().get(0);
  try {
    return Event.class.isAssignableFrom(ClassUtils.getClass(genericClassName));
  }
 catch (  ClassNotFoundException e) {
    throw new MuleRuntimeException(createStaticMessage("Could not load class " + genericClassName),e);
  }
}
