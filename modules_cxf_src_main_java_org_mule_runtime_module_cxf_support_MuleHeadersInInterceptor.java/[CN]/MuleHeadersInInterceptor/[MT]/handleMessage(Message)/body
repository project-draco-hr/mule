{
  if (!(m instanceof SoapMessage)) {
    return;
  }
  SoapMessage message=(SoapMessage)m;
  if (!message.hasHeaders()) {
    return;
  }
  Header mule_header=message.getHeader(MULE_HEADER_Q);
  if (mule_header == null) {
    return;
  }
  Object obj=mule_header.getObject();
  if (!(obj instanceof Element)) {
    return;
  }
  Element header_element=(Element)obj;
  NodeList mule_headers=header_element.getChildNodes();
  int idx=0;
  Node child;
  while ((child=mule_headers.item(idx++)) != null) {
    if (child.getNodeType() != Node.ELEMENT_NODE) {
      continue;
    }
    Element child_el=(Element)child;
    if (child_el.getNamespaceURI() == null || !child_el.getNamespaceURI().equals(MULE_NS_URI)) {
      continue;
    }
    if (SUPPORTED_HEADERS.contains(child_el.getLocalName())) {
      message.put(child_el.getLocalName(),collectTextFrom(child_el));
    }
  }
  MuleEvent reqEvent=((MuleEvent)message.getExchange().get(CxfConstants.MULE_EVENT));
  MuleMessage.Builder builder=MuleMessage.builder(reqEvent.getMessage());
  String replyTo=(String)message.get(MULE_REPLY_TO_PROPERTY);
  if (replyTo != null) {
    builder.addOutboundProperty(MULE_REPLY_TO_PROPERTY,replyTo);
  }
  String corId=(String)message.get(MULE_CORRELATION_ID_PROPERTY);
  String corGroupSize=(String)message.get(MULE_CORRELATION_GROUP_SIZE_PROPERTY);
  String corSeq=(String)message.get(MULE_CORRELATION_SEQUENCE_PROPERTY);
  reqEvent.setMessage(builder.build());
}
