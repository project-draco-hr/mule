{
  final int customMinPoolSize=BitronixXaDataSourceBuilder.DEFAULT_MIN_POOL_SIZE + 1;
  final int customMaxPoolSize=BitronixXaDataSourceBuilder.DEFAULT_MAX_POOL_SIZE + 1;
  final int customMaxIdleTime=BitronixXaDataSourceBuilder.DEFAULT_MAX_IDLE + 1;
  final int customAcquisitionTimeout=BitronixXaDataSourceBuilder.DEFAULT_PREPARED_STATEMENT_CACHE_SIZE + 1;
  final int customPreparedStatementCacheSize=BitronixXaDataSourceBuilder.DEFAULT_PREPARED_STATEMENT_CACHE_SIZE + 1;
  final int customAcquireIncrement=BitronixXaDataSourceBuilder.DEFAULT_ACQUIRE_INCREMENT + 1;
  BitronixXaDataSourceBuilder builder=createBuilder("test",mockDataSource);
  builder.setMinPoolSize(customMinPoolSize);
  builder.setMaxPoolSize(customMaxPoolSize);
  builder.setMaxIdleTime(customMaxIdleTime);
  builder.setAcquisitionTimeoutSeconds(customAcquisitionTimeout);
  builder.setPreparedStatementCacheSize(customPreparedStatementCacheSize);
  builder.setAcquireIncrement(customAcquireIncrement);
  BitronixXaDataSourceWrapper wrapper=builder.build(mockMuleContext);
  PoolingDataSource poolingDataSource=wrapper.getWrappedDataSource();
  assertEquals(createUniqueIdForResource(mockMuleContext,RESOURCE_NAME),poolingDataSource.getUniqueName());
  assertEquals(customMinPoolSize,poolingDataSource.getMinPoolSize());
  assertEquals(customMaxPoolSize,poolingDataSource.getMaxPoolSize());
  assertEquals(customMaxIdleTime,poolingDataSource.getMaxIdleTime());
  assertEquals(customAcquisitionTimeout,poolingDataSource.getAcquisitionTimeout());
  assertEquals(customPreparedStatementCacheSize,poolingDataSource.getPreparedStatementCacheSize());
  assertEquals(customAcquireIncrement,poolingDataSource.getAcquireIncrement());
}
