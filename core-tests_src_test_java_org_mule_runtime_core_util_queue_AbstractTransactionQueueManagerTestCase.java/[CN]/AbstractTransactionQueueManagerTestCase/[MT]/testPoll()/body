{
  final QueueManager mgr=createQueueManager();
  try {
    mgr.start();
    QueueSession s=mgr.getQueueSession();
    Queue q=s.getQueue("queue1");
    assertEquals("Queue size",0,q.size());
    Object o=q.poll(0);
    assertEquals("Queue size",0,q.size());
    assertNull(o);
    o=q.poll(1000);
    assertEquals("Queue size",0,q.size());
    assertNull(o);
    q.put("String1");
    assertEquals("Queue size",1,q.size());
    o=q.poll(0);
    assertEquals("Queue size",0,q.size());
    assertEquals("Queue content","String1",o);
    final Latch putExecutionLatch=new Latch();
    Thread putExecutionThread=new Thread(new Runnable(){
      public void run(){
        try {
          QueueSession s=mgr.getQueueSession();
          Queue q=s.getQueue("queue1");
          putExecutionLatch.release();
          q.put("String1");
        }
 catch (        Exception e) {
          logger.warn(e.toString());
        }
      }
    }
);
    putExecutionThread.start();
    if (!putExecutionLatch.await(THREAD_EXECUTION_TIMEOUT,TimeUnit.MILLISECONDS)) {
      fail("Thread executing put over queue was not executed");
    }
    o=q.poll(RECEIVE_TIMEOUT);
    putExecutionThread.join(THREAD_EXECUTION_TIMEOUT);
    assertEquals("Queue size",q.size(),0);
    assertEquals("Queue content","String1",o);
  }
  finally {
    mgr.stop();
  }
}
