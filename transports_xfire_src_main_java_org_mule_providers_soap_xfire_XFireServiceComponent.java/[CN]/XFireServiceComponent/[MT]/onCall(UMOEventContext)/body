{
  if (logger.isDebugEnabled()) {
    logger.debug(eventContext);
  }
  boolean wsdlRequested=false;
  boolean servicesRequested=false;
  String request=eventContext.getMessage().getStringProperty(HttpConnector.HTTP_REQUEST_PROPERTY,StringUtils.EMPTY);
  if (request.toLowerCase().endsWith(org.mule.providers.soap.SoapConstants.WSDL_PROPERTY)) {
    wsdlRequested=true;
  }
 else   if (request.toLowerCase().endsWith(org.mule.providers.soap.SoapConstants.LIST_PROPERTY)) {
    servicesRequested=true;
  }
 else {
    Enumeration keys=eventContext.getEndpointURI().getParams().keys();
    while (keys.hasMoreElements()) {
      if ((keys.nextElement()).toString().equalsIgnoreCase(SoapConstants.WSDL_PROPERTY)) {
        wsdlRequested=true;
        break;
      }
    }
  }
  if (wsdlRequested) {
    ByteArrayOutputStream out=new ByteArrayOutputStream();
    getXfire().generateWSDL(getServiceName(eventContext),out);
    UMOMessage result=new MuleMessage(out.toString(eventContext.getEncoding()));
    result.setProperty(HttpConstants.HEADER_CONTENT_TYPE,"text/xml");
    return result;
  }
 else   if (servicesRequested) {
    ByteArrayOutputStream out=new ByteArrayOutputStream();
    HtmlServiceWriter writer=new HtmlServiceWriter();
    writer.write(out,getServiceRegistry().getService(getServiceName(eventContext)));
    UMOMessage result=new MuleMessage(out.toString(eventContext.getEncoding()));
    result.setProperty(HttpConstants.HEADER_CONTENT_TYPE,"text/xml");
    return result;
  }
 else {
    if (transport == null) {
      throw new InitialisationException(MessageFactory.createStaticMessage("transport is null, this service has not been initialized properly"),this);
    }
    MuleLocalChannel channel=(MuleLocalChannel)transport.createChannel(eventContext.getEndpointURI().getFullScheme());
    return channel.onCall(eventContext);
  }
}
