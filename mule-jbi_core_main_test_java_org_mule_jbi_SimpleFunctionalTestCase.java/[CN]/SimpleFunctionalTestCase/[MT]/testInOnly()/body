{
  TestComponent provider=new TestComponent();
  TestComponent consumer=new TestComponent();
  container.getComponentRegistry().registerTransientEngineComponent("provider",provider);
  container.getComponentRegistry().registerTransientEngineComponent("consumer",consumer);
  ServiceEndpoint endpoint=provider.getContext().activateEndpoint(SERVICE_NAME,ENDPOINT_NAME);
  MessageExchangeFactory mef=consumer.getChannel().createExchangeFactory(endpoint);
  InOnly mec=mef.createInOnlyExchange();
  NormalizedMessage m=mec.createMessage();
  m.setContent(new StreamSource(new ByteArrayInputStream(PAYLOAD.getBytes())));
  mec.setInMessage(m);
  consumer.getChannel().send(mec);
  InOnly mep=(InOnly)provider.getChannel().accept(10L);
  assertNotNull(mep);
  assertEquals(ExchangeStatus.ACTIVE,mep.getStatus());
  mep.setStatus(ExchangeStatus.DONE);
  provider.getChannel().send(mep);
  assertSame(mec,consumer.getChannel().accept(10L));
  assertEquals(ExchangeStatus.DONE,mec.getStatus());
  assertNull(consumer.getChannel().accept(10L));
  assertNull(provider.getChannel().accept(10L));
}
