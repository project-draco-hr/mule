{
  String notset=CoreMessages.notSet().getMessage();
  Manifest mf=MuleManifest.getManifest();
  Attributes att=mf.getMainAttributes();
  if (att.values().size() > 0) {
    doBody(StringUtils.defaultString(MuleManifest.getProductDescription(),notset));
    doBody(String.format("%s Build: %s",CoreMessages.version().getMessage(),StringUtils.defaultString(MuleManifest.getBuildNumber(),notset)));
    doBody(StringUtils.defaultString(MuleManifest.getVendorName(),notset));
    doBody(StringUtils.defaultString(MuleManifest.getProductMoreInfo(),notset));
  }
 else {
    doBody(CoreMessages.versionNotSet().getMessage());
  }
  doBody(" ");
  doBody(CoreMessages.serverStartedAt(System.currentTimeMillis()).getMessage());
  doBody(String.format("JDK: %s (%s)",System.getProperty("java.version"),System.getProperty("java.vm.info")));
  String patch=System.getProperty("sun.os.patch.level",null);
  doBody(String.format("OS: %s%s (%s, %s)",System.getProperty("os.name"),(patch != null && !"unknown".equalsIgnoreCase(patch) ? " - " + patch : ""),System.getProperty("os.version"),System.getProperty("os.arch")));
  try {
    InetAddress host=NetworkUtils.getLocalHost();
    doBody(String.format("Host: %s (%s)",host.getHostName(),host.getHostAddress()));
  }
 catch (  UnknownHostException e) {
  }
  if (!SecurityUtils.isDefaultSecurityModel()) {
    doBody("Security model: " + SecurityUtils.getSecurityModel());
  }
  if (RUNTIME_VERBOSE_PROPERTY.isEnabled()) {
    listPatchesIfPresent();
    listMuleSystemProperties();
  }
}
