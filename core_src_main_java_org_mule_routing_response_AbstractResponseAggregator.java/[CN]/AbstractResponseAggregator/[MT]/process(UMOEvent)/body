{
  EventGroup eg=addEvent(event);
  if (shouldAggregate(eg)) {
    UMOMessage returnMessage=aggregateEvents(eg);
    Object id=eg.getGroupId();
    removeEventGroup(id);
    UMOMessage previousResult=(UMOMessage)responseEvents.putIfAbsent(id,returnMessage);
    if (previousResult != null) {
      throw new IllegalStateException("Detected duplicate aggregation result message with id: " + id);
    }
    Latch l=(Latch)locks.get(id);
    if (l == null) {
      if (logger.isDebugEnabled()) {
        logger.debug("Creating latch for " + id + " in "+ this);
      }
      l=new Latch();
      Latch previous=(Latch)locks.putIfAbsent(id,l);
      if (previous != null) {
        l=previous;
      }
    }
    l.countDown();
  }
}
