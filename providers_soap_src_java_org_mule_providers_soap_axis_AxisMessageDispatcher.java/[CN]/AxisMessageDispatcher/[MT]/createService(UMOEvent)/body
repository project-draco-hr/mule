{
  SimpleProvider clientConfig=new SimpleProvider();
  Handler muleHandler=new MuleSoapHeadersHandler();
  SimpleChain reqHandler=new SimpleChain();
  SimpleChain respHandler=new SimpleChain();
  reqHandler.addHandler(muleHandler);
  respHandler.addHandler(muleHandler);
  Handler pivot=new MuleHttpSender();
  Handler transport=new SimpleTargetedChain(reqHandler,pivot,respHandler);
  clientConfig.deployTransport(HTTPTransport.DEFAULT_TRANSPORT_NAME,transport);
  String wsdlUrl=getWsdlUrl(event);
  if (wsdlUrl.length() > 0) {
    Parser parser=new Parser();
    parser.run(wsdlUrl);
    Map map=parser.getSymbolTable().getHashMap();
    List entries=new ArrayList();
    for (Iterator it=map.entrySet().iterator(); it.hasNext(); ) {
      Map.Entry entry=(Map.Entry)it.next();
      Vector v=(Vector)entry.getValue();
      for (Iterator it2=v.iterator(); it2.hasNext(); ) {
        SymTabEntry e=(SymTabEntry)it2.next();
        if (ServiceEntry.class.isInstance(e)) {
          entries.add(entry.getKey());
        }
      }
    }
    if (entries.size() != 1) {
      throw new Exception("Need one and only one service entry, found " + entries.size());
    }
    Service service=new Service(parser,(QName)entries.get(0));
    service.setEngineConfiguration(clientConfig);
    service.setEngine(new AxisClient(clientConfig));
    return service;
  }
 else {
    Service service=new Service();
    service.setEngineConfiguration(clientConfig);
    service.setEngine(new AxisClient(clientConfig));
    return service;
  }
}
