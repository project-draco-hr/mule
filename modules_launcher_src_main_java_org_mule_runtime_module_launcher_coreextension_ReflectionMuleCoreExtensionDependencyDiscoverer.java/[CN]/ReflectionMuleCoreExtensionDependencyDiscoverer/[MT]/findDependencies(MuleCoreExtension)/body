{
  List<LinkedMuleCoreExtensionDependency> result=new LinkedList<LinkedMuleCoreExtensionDependency>();
  final Method[] methods=coreExtension.getClass().getMethods();
  for (  Method method : methods) {
    if (method.getAnnotation(MuleCoreExtensionDependency.class) != null) {
      final Class<?>[] parameterTypes=method.getParameterTypes();
      if (parameterTypes.length == 1) {
        if (MuleCoreExtension.class.isAssignableFrom(parameterTypes[0])) {
          final LinkedMuleCoreExtensionDependency linkedMuleCoreExtensionDependency=new LinkedMuleCoreExtensionDependency((Class<? extends MuleCoreExtension>)parameterTypes[0],method);
          result.add(linkedMuleCoreExtensionDependency);
        }
      }
    }
  }
  return result;
}
