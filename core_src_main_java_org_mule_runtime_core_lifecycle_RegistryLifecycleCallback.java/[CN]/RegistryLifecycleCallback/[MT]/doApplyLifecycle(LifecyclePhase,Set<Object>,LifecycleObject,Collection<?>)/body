{
  if (CollectionUtils.isEmpty(targetObjects)) {
    return;
  }
  for (  Object target : targetObjects) {
    if (duplicates.contains(target)) {
      continue;
    }
    if (LOGGER.isDebugEnabled()) {
      LOGGER.debug("lifecycle phase: " + phase.getName() + " for object: "+ target);
    }
    if (interceptor.beforeLifecycle(phase,target)) {
      phase.applyLifecycle(target);
      duplicates.add(target);
      interceptor.afterLifecycle(phase,target);
    }
 else {
      if (LOGGER.isDebugEnabled()) {
        LOGGER.debug(String.format("Skipping the application of the '%s' lifecycle phase over a certain object " + "because a %s interceptor of type [%s] indicated so. Object is: %s",phase.getName(),LifecycleInterceptor.class.getSimpleName(),interceptor.getClass().getName(),target));
      }
    }
  }
  int originalTargetCount=targetObjects.size();
  targetObjects=lookupObjectsForLifecycle(lifecycleObject);
  if (targetObjects.size() > originalTargetCount) {
    doApplyLifecycle(phase,duplicates,lifecycleObject,targetObjects);
  }
}
