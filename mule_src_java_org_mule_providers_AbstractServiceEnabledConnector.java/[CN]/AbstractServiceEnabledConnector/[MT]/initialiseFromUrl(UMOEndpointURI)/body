{
  if (!getProtocol().equalsIgnoreCase(endpointUri.getScheme()) && !getProtocol().equalsIgnoreCase(endpointUri.getSchemeMetaInfo())) {
    throw new InitialisationException(new Message(Messages.SCHEME_X_NOT_COMPATIBLE_WITH_CONNECTOR_X,getProtocol(),getClass().getName()),this);
  }
  Properties props=new Properties();
  props.putAll(endpointUri.getParams());
  if (endpointUri.getUserInfo() != null) {
    props.setProperty("username",endpointUri.getUsername());
    props.setProperty("password",endpointUri.getPassword());
  }
  if (endpointUri.getHost() != null) {
    props.setProperty("hostname",endpointUri.getHost());
    props.setProperty("host",endpointUri.getHost());
  }
  if (endpointUri.getPort() > -1)   props.setProperty("port",String.valueOf(endpointUri.getPort()));
  BeanUtils.populateWithoutFail(this,props,true);
}
