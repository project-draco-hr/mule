{
  final CountDownLatch countDown=new CountDownLatch(2);
  EventCallback callback=new EventCallback(){
    @Override public void eventReceived(    MuleEventContext context,    Object component) throws Exception {
      int index=(int)countDown.getCount() - 1;
      assertEquals(FILE_NAMES[index],context.getMessage().getInboundProperty(FileConnector.PROPERTY_ORIGINAL_FILENAME));
      countDown.countDown();
    }
  }
;
  ((FunctionalTestComponent)getComponent(COMPONENT_NAME)).setEventCallback(callback);
  ((Connector)muleContext.getRegistry().lookupObject(FILE_CONNECTOR_NAME)).stop();
  File f1=FileUtils.newFile(getFileInsideWorkingDirectory(INPUT_FOLDER + File.separator + FILE_NAMES[0]).getAbsolutePath());
  assertTrue(f1.createNewFile());
  Thread.sleep(1000);
  File f2=FileUtils.newFile(getFileInsideWorkingDirectory(INPUT_FOLDER + File.separator + FILE_NAMES[1]).getAbsolutePath());
  assertTrue(f2.createNewFile());
  Thread.sleep(1000);
  ((Connector)muleContext.getRegistry().lookupObject(FILE_CONNECTOR_NAME)).start();
  assertTrue(countDown.await(TIMEOUT,TimeUnit.MILLISECONDS));
}
