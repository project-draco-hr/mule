{
  Object component=getComponent("testReceive" + method);
  assertNotNull(component);
  assertTrue("FunctionalTestComponent expected",component instanceof FunctionalTestComponent);
  FunctionalTestComponent ftc=(FunctionalTestComponent)component;
  ftc.setEventCallback(new EventCallback(){
    public void eventReceived(    MuleEventContext context,    Object component) throws Exception {
      MuleMessage message=context.getMessage();
      Assert.assertEquals(contentType,message.getStringProperty(HttpConstants.HEADER_CONTENT_TYPE,null));
      Assert.assertEquals("ISO-2022-JP",message.getEncoding());
      Object payload=message.getPayload();
      if (payload instanceof String) {
        Assert.assertEquals(getTestMessage(Locale.JAPAN),payload);
      }
 else       if (payload instanceof byte[]) {
        Assert.assertEquals(getTestMessage(Locale.JAPAN),new String((byte[])payload,message.getEncoding()));
      }
 else {
        fail();
      }
      cdl.countDown();
    }
  }
);
}
