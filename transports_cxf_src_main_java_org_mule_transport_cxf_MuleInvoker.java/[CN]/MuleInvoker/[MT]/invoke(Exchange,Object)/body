{
  MuleMessage message=null;
  try {
    CxfMessageAdapter messageAdapter=(CxfMessageAdapter)receiver.getConnector().getMessageAdapter(exchange.getInMessage());
    if (!receiver.isProxy()) {
      BindingOperationInfo bop=exchange.get(BindingOperationInfo.class);
      Service svc=exchange.get(Service.class);
      MethodDispatcher md=(MethodDispatcher)svc.get(MethodDispatcher.class.getName());
      Method m=md.getMethod(bop);
      if (targetClass != null) {
        m=matchMethod(m,targetClass);
      }
      messageAdapter.setProperty(MuleProperties.MULE_METHOD_PROPERTY,m);
    }
    DefaultMuleMessage muleReq=new DefaultMuleMessage(messageAdapter);
    String replyTo=(String)exchange.getInMessage().get(MuleProperties.MULE_REPLY_TO_PROPERTY);
    if (replyTo != null) {
      muleReq.setReplyTo(replyTo);
    }
    String corId=(String)exchange.getInMessage().get(MuleProperties.MULE_CORRELATION_ID_PROPERTY);
    if (corId != null) {
      muleReq.setCorrelationId(corId);
    }
    String corGroupSize=(String)exchange.getInMessage().get(MuleProperties.MULE_CORRELATION_GROUP_SIZE_PROPERTY);
    if (corGroupSize != null) {
      muleReq.setCorrelationGroupSize(Integer.valueOf(corGroupSize));
    }
    String corSeq=(String)exchange.getInMessage().get(MuleProperties.MULE_CORRELATION_SEQUENCE_PROPERTY);
    if (corSeq != null) {
      muleReq.setCorrelationSequence(Integer.valueOf(corSeq));
    }
    message=receiver.routeMessage(muleReq,synchronous);
  }
 catch (  MuleException e) {
    throw new Fault(e);
  }
  if (message != null) {
    if (message.getExceptionPayload() != null) {
      Throwable cause=message.getExceptionPayload().getException();
      if (cause instanceof ServiceException) {
        cause=cause.getCause();
      }
      exchange.getInMessage().put(FaultMode.class,FaultMode.UNCHECKED_APPLICATION_FAULT);
      if (cause instanceof Fault) {
        throw (Fault)cause;
      }
      throw new Fault(cause);
    }
 else     if (message.getPayload() instanceof NullPayload) {
      return null;
    }
 else {
      return new Object[]{message.getPayload()};
    }
  }
 else {
    return null;
  }
}
