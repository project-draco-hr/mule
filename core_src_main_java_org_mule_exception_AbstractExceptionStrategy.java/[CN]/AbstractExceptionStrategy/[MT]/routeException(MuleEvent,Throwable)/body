{
  if (!messageProcessors.isEmpty()) {
    try {
      logger.error("Message being processed is: " + (event.getMessage().getPayloadForLogging()));
      String component="Unknown";
      if (event.getFlowConstruct() != null) {
        component=event.getFlowConstruct().getName();
      }
      URI endpointUri=event.getMessageSourceURI();
      ExceptionMessage msg=new ExceptionMessage(event,t,component,endpointUri);
      MuleMessage exceptionMessage=new DefaultMuleMessage(msg,event.getMessage(),muleContext);
      DefaultMessageProcessorChainBuilder builder=new DefaultMessageProcessorChainBuilder(event.getFlowConstruct());
      for (      Object processor : messageProcessors) {
        if (processor instanceof MessageProcessor) {
          builder.chain((MessageProcessor)processor);
        }
 else         if (processor instanceof MessageProcessorBuilder) {
          builder.chain((MessageProcessorBuilder)processor);
        }
 else {
          throw new IllegalArgumentException("MessageProcessorBuilder should only have MessageProcessor's or MessageProcessorBuilder's configured");
        }
      }
      MessageProcessor messageProcessor=builder.build();
      messageProcessor.process(new DefaultMuleEvent(exceptionMessage,event));
    }
 catch (    Exception e) {
      logFatal(event,e);
    }
  }
  processOutboundRouterStatistics(event);
}
