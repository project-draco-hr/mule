{
switch (query) {
case ANY:
    return true;
case NAMED:
  if (instr.matches(getClassName()))   return !instr.isNegated();
return false;
case VERSION:
String v=major + "/" + minor;
if (instr.matches(v)) return !instr.isNegated();
return false;
case IMPLEMENTS:
for (int i=0; interfaces != null && i < interfaces.length; i++) {
if (instr.matches(interfaces[i])) return !instr.isNegated();
}
break;
case EXTENDS:
if (zuper == null) return false;
if (instr.matches(zuper)) return !instr.isNegated();
break;
case IMPORTS:
for (String imp : imports.keySet()) {
if (instr.matches(imp.replace('.','/'))) return !instr.isNegated();
}
}
if (zuper == null || classspace == null) return false;
Clazz clazz=classspace.get(zuper);
if (clazz == null) return false;
return clazz.is(query,instr,classspace);
}
