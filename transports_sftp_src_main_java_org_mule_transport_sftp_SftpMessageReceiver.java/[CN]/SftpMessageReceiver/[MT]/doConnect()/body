{
  if (!isConnected() || connecting.compareAndSet(false,true)) {
    if (logger.isDebugEnabled()) {
      logger.debug("Connecting: " + this);
    }
    retryTemplate.execute(new RetryCallback(){
      @Override public void doWork(      RetryContext context) throws Exception {
        try {
          if (logger.isDebugEnabled()) {
            logger.debug("Trying to connect/reconnect to SFTP server " + endpoint.getEndpointURI());
          }
          sftpRRUtil.getAvailableFiles(false);
          if (logger.isDebugEnabled()) {
            logger.debug("Successfully connected/reconnected to SFTP server " + endpoint.getEndpointURI());
          }
          connected.set(true);
          connecting.set(false);
        }
 catch (        Exception e) {
          if (logger.isDebugEnabled()) {
            logger.debug("Unable to connect/reconnect to SFTP server " + endpoint.getEndpointURI());
          }
          throw new Exception("Fail to connect",e);
        }
      }
      @Override public String getWorkDescription(){
        return "Trying to reconnect to SFTP server " + endpoint.getEndpointURI();
      }
      @Override public Connector getWorkOwner(){
        return getEndpoint().getConnector();
      }
    }
,getConnector().getMuleContext().getWorkManager());
  }
}
