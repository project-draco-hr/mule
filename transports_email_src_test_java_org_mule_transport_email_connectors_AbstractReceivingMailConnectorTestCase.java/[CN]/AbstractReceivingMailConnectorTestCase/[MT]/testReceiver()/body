{
  final CountDownLatch countDown=new CountDownLatch(1);
  EventCallback eventCallback=new EventCallback(){
    public synchronized void eventReceived(    MuleEventContext context,    Object component){
      try {
        logger.debug("woot - event received");
        logger.debug("context: " + context);
        logger.debug("component: " + component);
        assertMessageOk(context.getMessage().getOriginalPayload());
        countDown.countDown();
      }
 catch (      Exception e) {
        logger.error(e.getMessage(),e);
      }
    }
  }
;
  Flow flowConstruct=new Flow("testComponent",muleContext);
  flowConstruct.setMessageProcessors(new ArrayList<MessageProcessor>());
  FunctionalTestComponent component=new FunctionalTestComponent();
  component.setEventCallback(eventCallback);
  flowConstruct.getMessageProcessors().add(new DefaultJavaComponent(new SingletonObjectFactory(component)));
  EndpointBuilder eb=muleContext.getEndpointFactory().getEndpointBuilder(getTestEndpointURI());
  eb.setDisableTransportTransformer(true);
  InboundEndpoint ep=eb.buildInboundEndpoint();
  flowConstruct.setMessageSource(ep);
  muleContext.getRegistry().registerFlowConstruct(flowConstruct);
  if (!muleContext.isStarted()) {
    muleContext.start();
  }
  logger.debug("waiting for count down");
  assertTrue(countDown.await(WAIT_PERIOD_MS,TimeUnit.MILLISECONDS));
}
