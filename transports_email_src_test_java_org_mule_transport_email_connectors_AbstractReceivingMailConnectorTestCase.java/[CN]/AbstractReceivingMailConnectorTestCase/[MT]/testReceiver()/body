{
  final CountDownLatch countDown=new CountDownLatch(1);
  HashMap props=new HashMap();
  props.put("eventCallback",new EventCallback(){
    public synchronized void eventReceived(    MuleEventContext context,    Object component){
      try {
        logger.debug("woot - event received");
        logger.debug("context: " + context);
        logger.debug("component: " + component);
        assertMessageOk(context.getMessage().getOriginalPayload());
        countDown.countDown();
      }
 catch (      Exception e) {
        logger.error(e.getMessage(),e);
      }
    }
  }
);
  Service service=MuleTestUtils.getTestService(uniqueName("testComponent"),FunctionalTestComponent.class,props,muleContext,false);
  InboundEndpoint ep=muleContext.getRegistry().lookupEndpointFactory().getInboundEndpoint(getTestEndpointURI());
  InboundRouterCollection inboundRouter=new DefaultInboundRouterCollection();
  inboundRouter.addEndpoint(ep);
  service.setInboundRouter(inboundRouter);
  muleContext.getRegistry().registerService(service);
  if (!muleContext.isStarted()) {
    muleContext.start();
  }
  logger.debug("waiting for count down");
  assertTrue(countDown.await(WAIT_PERIOD_MS,TimeUnit.MILLISECONDS));
}
