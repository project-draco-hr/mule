{
  if (authentication instanceof UsernamePasswordAuthentication) {
    UsernamePasswordAuthentication upauth=(UsernamePasswordAuthentication)authentication;
    String user=upauth.getUsername();
    String password=upauth.getPassword();
    if (user == null) {
      throw new AuthenticationFailedException("Authentication failed");
    }
    if (password == null) {
      password="";
    }
    String passVal=userDataProp.getProperty(PREFIX + user + '.'+ ATTR_PASSWORD);
    if (isPasswordEncrypt) {
      password=EncryptUtils.encryptMD5(password);
    }
    if (password.equals(passVal)) {
      return getUserByName(user);
    }
 else {
      throw new AuthenticationFailedException("Authentication failed");
    }
  }
 else   if (authentication instanceof AnonymousAuthentication) {
    if (doesExist("anonymous")) {
      return getUserByName("anonymous");
    }
 else {
      throw new AuthenticationFailedException("Authentication failed");
    }
  }
 else {
    throw new IllegalArgumentException("Authentication not supported by this user manager");
  }
}
