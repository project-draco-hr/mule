{
  if (message instanceof Object[]) {
    this.message=((Object[])message)[0];
    if (((Object[])message).length > 1) {
      Map props=(Map)((Object[])message)[1];
      for (Iterator iterator=props.entrySet().iterator(); iterator.hasNext(); ) {
        Map.Entry e=(Map.Entry)iterator.next();
        String key=(String)e.getKey();
        Object value=e.getValue();
        if (value != null) {
          setProperty(key,value);
        }
      }
    }
  }
 else   if (message instanceof byte[]) {
    this.message=message;
  }
 else   if (message instanceof HttpResponse) {
    this.message=message;
    return;
  }
 else {
    throw new MessageTypeNotSupportedException(message,getClass());
  }
  String temp=getStringProperty(HttpConnector.HTTP_VERSION_PROPERTY,null);
  if (HttpConstants.HTTP10.equalsIgnoreCase(temp)) {
    http11=false;
  }
  Header contenttype=getHeader(HttpConstants.HEADER_CONTENT_TYPE);
  if (contenttype != null) {
    HeaderElement values[]=contenttype.getElements();
    if (values.length == 1) {
      NameValuePair param=values[0].getParameterByName("charset");
      if (param != null) {
        encoding=param.getValue();
      }
    }
  }
}
