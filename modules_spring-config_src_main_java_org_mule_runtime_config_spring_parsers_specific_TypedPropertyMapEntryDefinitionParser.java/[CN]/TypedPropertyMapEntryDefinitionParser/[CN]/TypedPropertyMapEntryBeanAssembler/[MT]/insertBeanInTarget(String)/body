{
  assertTargetPresent();
  PropertyValues sourceProperties=bean.getRawBeanDefinition().getPropertyValues();
  String newName=bestGuessName(targetConfig,oldName,target.getBeanClassName());
  MutablePropertyValues targetProperties=target.getPropertyValues();
  PropertyValue propertyValue=targetProperties.getPropertyValue(newName);
  @SuppressWarnings("unchecked") ManagedMap<String,Object> propertiesMap=(ManagedMap<String,Object>)(null == propertyValue ? null : propertyValue.getValue());
  if (propertiesMap == null) {
    propertiesMap=new ManagedMap<>();
    propertyValue=new PropertyValue(newName,propertiesMap);
    targetProperties.addPropertyValue(propertyValue);
  }
  PropertyValue propertyKey=sourceProperties.getPropertyValue(ChildMapEntryDefinitionParser.KEY);
  AbstractBeanDefinition typedValueBeanDefinition=getTypedValue(sourceProperties);
  propertiesMap.put((String)propertyKey.getValue(),typedValueBeanDefinition);
}
