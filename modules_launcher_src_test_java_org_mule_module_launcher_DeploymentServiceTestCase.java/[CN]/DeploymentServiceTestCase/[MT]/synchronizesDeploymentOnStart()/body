{
  addPackedAppFromBuilder(emptyAppFileBuilder);
  Thread deploymentServiceThread=new Thread(new Runnable(){
    @Override public void run(){
      deploymentService.start();
    }
  }
);
  final boolean[] lockedFromClient=new boolean[1];
  Mockito.doAnswer(new Answer(){
    @Override public Object answer(    InvocationOnMock invocation) throws Throwable {
      Thread deploymentClientThread=new Thread(new Runnable(){
        @Override public void run(){
          ReentrantLock deploymentLock=deploymentService.getLock();
          try {
            try {
              lockedFromClient[0]=deploymentLock.tryLock(1000,TimeUnit.MILLISECONDS);
            }
 catch (            InterruptedException e) {
            }
          }
  finally {
            if (deploymentLock.isHeldByCurrentThread()) {
              deploymentLock.unlock();
            }
          }
        }
      }
);
      deploymentClientThread.start();
      deploymentClientThread.join();
      return null;
    }
  }
).when(applicationDeploymentListener).onDeploymentStart(emptyAppFileBuilder.getId());
  deploymentServiceThread.start();
  assertApplicationDeploymentSuccess(applicationDeploymentListener,emptyAppFileBuilder.getId());
  assertFalse("Able to lock deployment service during start",lockedFromClient[0]);
}
