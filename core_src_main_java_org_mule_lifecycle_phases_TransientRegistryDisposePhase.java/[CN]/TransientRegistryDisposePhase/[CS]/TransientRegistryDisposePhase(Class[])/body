{
  super(Disposable.PHASE_NAME,Disposable.class,Initialisable.PHASE_NAME);
  Set disposeOrderedObjects=new LinkedHashSet();
  disposeOrderedObjects.add(new NotificationLifecycleObject(MuleContext.class));
  try {
    disposeOrderedObjects.add(new NotificationLifecycleObject(Connector.class,MuleContextNotification.class,MuleContextNotification.CONTEXT_DISPOSING_CONNECTORS,MuleContextNotification.CONTEXT_DISPOSED_CONNECTORS));
  }
 catch (  IllegalStateException e) {
  }
  disposeOrderedObjects.add(new NotificationLifecycleObject(Agent.class));
  disposeOrderedObjects.add(new NotificationLifecycleObject(Model.class));
  disposeOrderedObjects.add(new NotificationLifecycleObject(Disposable.class));
  setIgnoredObjectTypes(ignorredObjects);
  setOrderedLifecycleObjects(disposeOrderedObjects);
  registerSupportedPhase(LifecyclePhase.ALL_PHASES);
}
