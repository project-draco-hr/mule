{
  if (argumentTypes != null) {
    method=ClassUtils.getMethod(object.getClass(),methodName,argumentTypes);
    if (method == null) {
      throw new InitialisationException(CoreMessages.methodWithParamsNotFoundOnObject(methodName,argumentTypes,object.getClass()),this);
    }
  }
 else {
    List<Method> matchingMethods=new ArrayList<>();
    int argSize=arguments != null ? arguments.size() : 0;
    for (    Method methodCandidate : object.getClass().getMethods()) {
      if (methodCandidate.getName().equals(methodName) && methodCandidate.getParameterTypes().length == argSize)       matchingMethods.add(methodCandidate);
    }
    if (matchingMethods.size() == 1) {
      method=matchingMethods.get(0);
      argumentTypes=method.getParameterTypes();
    }
 else {
      throw new InitialisationException(CoreMessages.methodWithNumParamsNotFoundOnObject(methodName,arguments.size(),object),this);
    }
  }
  if (logger.isDebugEnabled()) {
    logger.debug(String.format("Initialised %s to use method: '%s'",this,method));
  }
}
