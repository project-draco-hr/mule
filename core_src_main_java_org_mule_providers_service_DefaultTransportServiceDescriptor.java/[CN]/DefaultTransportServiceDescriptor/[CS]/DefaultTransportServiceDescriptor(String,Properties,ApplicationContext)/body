{
  super(service,props);
  if (appContext != null) {
    context=new StaticApplicationContext(appContext);
    AbstractBeanFactory beanFactory=(AbstractBeanFactory)appContext.getAutowireCapableBeanFactory();
    context.getBeanFactory().copyConfigurationFrom(beanFactory);
  }
 else {
    context=new StaticApplicationContext();
  }
  messageReceiver=props.getProperty(MuleProperties.CONNECTOR_MESSAGE_RECEIVER_CLASS);
  messageAdapter=props.getProperty(MuleProperties.CONNECTOR_MESSAGE_ADAPTER);
  registerService(MuleProperties.CONNECTOR_CLASS,null,false);
  registerService(MuleProperties.CONNECTOR_FACTORY,null,false);
  registerService(MuleProperties.CONNECTOR_DISPATCHER_FACTORY,null,false);
  registerService(MuleProperties.CONNECTOR_MESSAGE_RECEIVER_CLASS,null,false);
  registerService(MuleProperties.CONNECTOR_TRANSACTED_MESSAGE_RECEIVER_CLASS,null,false);
  registerService(MuleProperties.CONNECTOR_MESSAGE_ADAPTER,null,false);
  registerService(MuleProperties.CONNECTOR_STREAM_MESSAGE_ADAPTER,null,false);
  registerService(MuleProperties.CONNECTOR_INBOUND_TRANSFORMER,null,false);
  registerService(MuleProperties.CONNECTOR_OUTBOUND_TRANSFORMER,null,false);
  registerService(MuleProperties.CONNECTOR_RESPONSE_TRANSFORMER,null,false);
  registerService(MuleProperties.CONNECTOR_ENDPOINT_BUILDER,null,false);
  registerService(MuleProperties.CONNECTOR_SESSION_HANDLER,MuleSessionHandler.class,false);
}
