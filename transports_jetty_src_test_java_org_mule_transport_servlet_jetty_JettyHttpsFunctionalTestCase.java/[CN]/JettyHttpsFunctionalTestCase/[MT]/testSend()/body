{
  final TestSedaService testSedaService=(TestSedaService)muleContext.getRegistry().lookupService("testComponent");
  FunctionalTestComponent testComponent=(FunctionalTestComponent)getComponent(testSedaService);
  assertNotNull(testComponent);
  final AtomicBoolean callbackMade=new AtomicBoolean(false);
  EventCallback callback=new EventCallback(){
    public void eventReceived(    MuleEventContext context,    Object component) throws Exception {
      assertTrue(callbackMade.compareAndSet(false,true));
    }
  }
;
  testComponent.setEventCallback(callback);
  MuleClient client=new MuleClient();
  Map<String,String> props=new HashMap<String,String>();
  props.put(HttpConstants.HEADER_CONTENT_TYPE,"text/plain;charset=UTF-8");
  MuleMessage result=client.send("clientEndpoint",TEST_MESSAGE,props);
  assertNotNull(result);
  assertEquals(TEST_MESSAGE + " Received",result.getPayloadAsString());
  assertTrue("Callback never fired",callbackMade.get());
}
