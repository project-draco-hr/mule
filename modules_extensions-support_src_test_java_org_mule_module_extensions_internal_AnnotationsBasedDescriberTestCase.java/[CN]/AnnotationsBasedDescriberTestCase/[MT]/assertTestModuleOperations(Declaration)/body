{
  assertThat(declaration.getOperations(),hasSize(10));
  assertOperation(declaration,SAY_MY_NAME_OPERATION,"");
  assertOperation(declaration,GET_ENEMY_OPERATION,"");
  assertOperation(declaration,KILL_OPERATION,"");
  assertOperation(declaration,KILL_CUSTOM_OPERATION,"");
  assertOperation(declaration,HIDE_METH_IN_EVENT_OPERATION,"");
  assertOperation(declaration,HIDE_METH_IN_MESSAGE_OPERATION,"");
  assertOperation(declaration,DIE,"");
  assertOperation(declaration,KILL_MANY,"");
  assertOperation(declaration,KILL_ONE,"");
  assertOperation(declaration,ALIAS,"");
  OperationDeclaration operation=getOperation(declaration,SAY_MY_NAME_OPERATION);
  assertThat(operation,is(notNullValue()));
  assertThat(operation.getParameters().isEmpty(),is(true));
  operation=getOperation(declaration,GET_ENEMY_OPERATION);
  assertThat(operation,is(notNullValue()));
  assertThat(operation.getParameters(),hasSize(1));
  assertParameter(operation.getParameters(),"index","",DataType.of(int.class),true,true,null);
  operation=getOperation(declaration,KILL_OPERATION);
  assertThat(operation,is(notNullValue()));
  assertThat(operation.getParameters(),hasSize(2));
  assertParameter(operation.getParameters(),"victim","",DataType.of(String.class),false,true,"#[payload]");
  assertParameter(operation.getParameters(),"goodbyeMessage","",DataType.of(String.class),true,true,null);
  operation=getOperation(declaration,KILL_CUSTOM_OPERATION);
  assertThat(operation,is(notNullValue()));
  assertThat(operation.getParameters(),hasSize(2));
  assertParameter(operation.getParameters(),"victim","",DataType.of(String.class),false,true,"#[payload]");
  assertParameter(operation.getParameters(),"goodbyeMessage","",DataType.of(String.class),true,true,null);
  operation=getOperation(declaration,HIDE_METH_IN_EVENT_OPERATION);
  assertThat(operation,is(notNullValue()));
  assertThat(operation.getParameters().isEmpty(),is(true));
  operation=getOperation(declaration,HIDE_METH_IN_MESSAGE_OPERATION);
  assertThat(operation,is(notNullValue()));
  assertThat(operation.getParameters().isEmpty(),is(true));
  operation=getOperation(declaration,ALIAS);
  assertParameter(operation.getParameters(),"myName","",DataType.of(String.class),false,true,HEISENBERG);
  assertParameter(operation.getParameters(),"age","",DataType.of(Integer.class),false,true,AGE);
}
