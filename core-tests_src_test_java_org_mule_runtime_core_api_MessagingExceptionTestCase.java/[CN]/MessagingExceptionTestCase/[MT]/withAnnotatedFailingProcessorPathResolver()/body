{
  Processor mockProcessor=mock(Processor.class,withSettings().extraInterfaces(AnnotatedObject.class));
  when(((AnnotatedObject)mockProcessor).getAnnotation(eq(docNameAttrName))).thenReturn("Mock Component");
  when(((AnnotatedObject)mockProcessor).getAnnotation(eq(sourceFileNameAttrName))).thenReturn("muleApp.xml");
  when(((AnnotatedObject)mockProcessor).getAnnotation(eq(sourceFileLineAttrName))).thenReturn(10);
  MessageProcessorPathResolver pathResolver=mock(MessageProcessorPathResolver.class,withSettings().extraInterfaces(FlowConstruct.class));
  when(pathResolver.getProcessorPath(eq(mockProcessor))).thenReturn("/flow/processor");
  MessagingException exception=new MessagingException(CoreMessages.createStaticMessage(""),mockEvent,mockProcessor);
  exception.getInfo().putAll(locationProvider.getContextInfo(mockEvent,mockProcessor,(FlowConstruct)pathResolver));
  assertThat(exception.getInfo().get(INFO_LOCATION_KEY).toString(),is("/flow/processor @ MessagingExceptionTestCase:muleApp.xml:10 (Mock Component)"));
}
