{
  super(connector,service,endpoint);
  if ("rest".equals(endpoint.getEndpointURI().getScheme())) {
    ServletConnector scon=(ServletConnector)new TransportFactory(connector.getMuleContext()).getConnectorByProtocol("servlet");
    if (scon == null) {
      scon=new ServletConnector();
      scon.setName(JETTY_SERVLET_CONNECTOR_NAME);
      scon.setServletUrl(endpoint.getEndpointURI().getAddress());
      scon.setMuleContext(connector.getMuleContext());
      try {
        connector.getMuleContext().getRegistry().registerConnector(scon);
      }
 catch (      MuleException e) {
        throw new CreateException(e,this);
      }
    }
    try {
      String path=endpoint.getEndpointURI().getPath();
      if (StringUtils.isEmpty(path)) {
        path="/";
      }
      EndpointBuilder endpointBuilder=new EndpointURIEndpointBuilder("servlet://" + path.substring(1),connector.getMuleContext());
      endpointBuilder.setTransformers(endpoint.getTransformers());
      InboundEndpoint ep=connector.getMuleContext().getRegistry().lookupEndpointFactory().getInboundEndpoint(endpointBuilder);
      scon.registerListener(service,ep);
    }
 catch (    Exception e) {
      throw new CreateException(e,this);
    }
  }
}
