{
  assertTargetPresent();
  PropertyValues sourceProperties=bean.getRawBeanDefinition().getPropertyValues();
  String newName=bestGuessName(targetConfig,oldName,target.getBeanClassName());
  MutablePropertyValues targetProperties=target.getPropertyValues();
  PropertyValue pv=targetProperties.getPropertyValue(newName);
  ManagedMap<String,String> oldValue=(ManagedMap<String,String>)(null == pv ? null : pv.getValue());
  if (null == oldValue) {
    oldValue=new ManagedMap<String,String>();
    pv=new PropertyValue(newName,oldValue);
    targetProperties.addPropertyValue(pv);
  }
  String importName=null;
  String importClassName=(String)sourceProperties.getPropertyValue(ChildMapEntryDefinitionParser.VALUE).getValue();
  PropertyValue namePropertyValue=sourceProperties.getPropertyValue(ChildMapEntryDefinitionParser.KEY);
  if (namePropertyValue != null) {
    importName=(String)namePropertyValue.getValue();
  }
 else {
    try {
      importName=Class.forName((String)importClassName).getSimpleName();
    }
 catch (    ClassNotFoundException e) {
      throw new RuntimeException(e);
    }
  }
  oldValue.put(importName,importClassName);
}
