{
  URL artifactLogConfig=getArtifactLoggingConfig(artifactClassLoader);
  final String artifactName=artifactClassLoader.getArtifactName();
  if (artifactLogConfig == null) {
    String logName=String.format(logFileNameTemplate,artifactName);
    File logDir=new File(MuleContainerBootstrapUtils.getMuleHome(),"logs");
    File logFile=new File(logDir,logName);
    DailyRollingFileAppender fileAppender=new DailyRollingFileAppender(new PatternLayout(PATTERN_LAYOUT),logFile.getAbsolutePath(),"'.'yyyy-MM-dd");
    fileAppender.setAppend(true);
    fileAppender.activateOptions();
    root.addAppender(fileAppender);
  }
 else {
    configureFrom(artifactLogConfig,repository);
    if (artifactLogConfig.toExternalForm().startsWith("file:")) {
      configWatchDog=new ConfigWatchDog(artifactClassLoader.getClassLoader(),artifactLogConfig.getFile(),repository);
      configWatchDog.setName(String.format("[%s].log4j.config.monitor",artifactName));
    }
 else {
      if (logger.isInfoEnabled()) {
        logger.info(String.format("Logging config %s is not an external file, will not be monitored for changes",artifactLogConfig));
      }
    }
  }
  return configWatchDog;
}
