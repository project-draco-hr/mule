{
  super(connector,flowConstruct,endpoint);
  this.setFrequency(((JdbcConnector)connector).getPollingFrequency());
  boolean transactedEndpoint=endpoint.getTransactionConfig().isTransacted();
  boolean xaTransactedEndpoint=(transactedEndpoint && endpoint.getTransactionConfig().getFactory() instanceof XaTransactionFactory);
  boolean receiveMessageInTransaction=MapUtils.getBooleanValue(endpoint.getProperties(),RECEIVE_MESSAGE_IN_TRANSCTION,false);
  this.setReceiveMessagesInTransaction(receiveMessageInTransaction && transactedEndpoint);
  if (receiveMessageInTransaction && !transactedEndpoint) {
    logger.warn(JdbcMessages.forcePropertyNoTransaction(RECEIVE_MESSAGE_IN_TRANSCTION,"transaction"));
    receiveMessageInTransaction=false;
  }
  receiveMessagesInXaTransaction=MapUtils.getBooleanValue(endpoint.getProperties(),RECEIVE_MESSAGES_IN_XA_TRANSCTION,false);
  if (receiveMessagesInXaTransaction && !receiveMessageInTransaction) {
    logger.warn(JdbcMessages.forceProperty(RECEIVE_MESSAGES_IN_XA_TRANSCTION,RECEIVE_MESSAGE_IN_TRANSCTION));
    receiveMessagesInXaTransaction=false;
  }
 else   if (receiveMessagesInXaTransaction && isReceiveMessagesInTransaction() && !xaTransactedEndpoint) {
    logger.warn(JdbcMessages.forcePropertyNoTransaction(RECEIVE_MESSAGES_IN_XA_TRANSCTION,"XA transaction"));
    receiveMessagesInXaTransaction=false;
  }
  this.connector=(JdbcConnector)connector;
  this.setReceiveMessagesInTransaction(endpoint.getTransactionConfig().isTransacted() && !this.connector.isTransactionPerMessage());
  this.readParams=new ArrayList();
  this.readStmt=this.connector.parseStatement(readStmt,this.readParams);
  this.ackParams=new ArrayList();
  this.ackStmt=this.connector.parseStatement(ackStmt,this.ackParams);
}
