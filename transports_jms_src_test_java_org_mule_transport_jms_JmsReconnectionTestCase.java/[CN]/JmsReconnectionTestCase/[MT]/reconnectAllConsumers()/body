{
  this.assertMessageRouted();
  final JmsConnector connector=muleContext.getRegistry().lookupObject("activemqconnector");
  Collection<MessageReceiver> receivers=connector.getReceivers().values();
  assertTrue(receivers != null && receivers.size() == 1);
  this.receiver=(MultiConsumerJmsMessageReceiver)receivers.iterator().next();
  assertConsumersCount();
  this.stopBroker();
  PollingProber prober=new PollingProber(TIMEOUT_MILLIS,500);
  prober.check(new Probe(){
    @Override public boolean isSatisfied(){
      return receiver.consumers.isEmpty();
    }
    @Override public String describeFailure(){
      return "consumers were never released";
    }
  }
);
  this.startBroker();
  prober.check(new Probe(){
    @Override public boolean isSatisfied(){
      try {
        assertConsumersCount();
        return true;
      }
 catch (      AssertionError e) {
        return false;
      }
    }
    @Override public String describeFailure(){
      return "receivers never came back";
    }
  }
);
  this.assertMessageRouted();
}
