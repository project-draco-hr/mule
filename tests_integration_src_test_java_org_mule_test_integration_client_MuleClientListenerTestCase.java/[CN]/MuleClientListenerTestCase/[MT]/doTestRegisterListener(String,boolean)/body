{
  MuleClient client=new MuleClient();
  client.getConfiguration().setDefaultSynchronousEndpoints(true);
  client.getConfiguration().setDefaultRemoteSync(true);
  if (!canSendWithoutReceiver) {
    try {
      client.send(urlString,"Test Client Send message",null);
      fail("There is no receiver for this endpointUri");
    }
 catch (    Exception e) {
      assertTrue(e.getCause() instanceof NoReceiverForEndpointException);
    }
  }
  TestReceiver receiver=new TestReceiver();
  String name="myComponent";
  MuleDescriptor descriptor=new MuleDescriptor();
  descriptor.setName(name);
  descriptor.setImplementationInstance(receiver);
  MuleEndpoint endpoint=new MuleEndpoint(urlString,true);
  endpoint.setTransformer(new ByteArrayToString());
  descriptor.setInboundRouter(new InboundMessageRouter());
  descriptor.getInboundRouter().addEndpoint(endpoint);
  client.registerComponent(descriptor);
  assertTrue(MuleManager.getInstance().getModel().isComponentRegistered(name));
  UMOMessage message=client.send(urlString,"Test Client Send message",null);
  assertNotNull(message);
  assertEquals("Received: Test Client Send message",message.getPayloadAsString());
  client.unregisterComponent(name);
  assertTrue(!MuleManager.getInstance().getModel().isComponentRegistered(name));
  if (!canSendWithoutReceiver) {
    try {
      message=client.send(urlString,"Test Client Send message",null);
      fail("There is no receiver for this endpointUri");
    }
 catch (    Exception e) {
      assertTrue(e.getCause() instanceof NoReceiverForEndpointException);
    }
  }
}
