{
  when(loggerMessageProcessor.logger.isTraceEnabled()).thenReturn("TRACE".equals(enabledLevel));
  when(loggerMessageProcessor.logger.isDebugEnabled()).thenReturn("DEBUG".equals(enabledLevel));
  when(loggerMessageProcessor.logger.isInfoEnabled()).thenReturn("INFO".equals(enabledLevel));
  when(loggerMessageProcessor.logger.isWarnEnabled()).thenReturn("WARN".equals(enabledLevel));
  when(loggerMessageProcessor.logger.isErrorEnabled()).thenReturn("ERROR".equals(enabledLevel));
  loggerMessageProcessor.log(muleEvent);
  verify(loggerMessageProcessor.logger,times("TRACE".equals(enabledLevel) ? 1 : 0)).trace(objectToLog);
  verify(loggerMessageProcessor.logger,times("DEBUG".equals(enabledLevel) ? 1 : 0)).debug(objectToLog);
  verify(loggerMessageProcessor.logger,times("INFO".equals(enabledLevel) ? 1 : 0)).info(objectToLog);
  verify(loggerMessageProcessor.logger,times("WARN".equals(enabledLevel) ? 1 : 0)).warn(objectToLog);
  verify(loggerMessageProcessor.logger,times("ERROR".equals(enabledLevel) ? 1 : 0)).error(objectToLog);
}
