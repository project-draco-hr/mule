{
  try {
    component=lookupComponent();
  }
 catch (  UMOException e) {
    throw new InitialisationException(e,this);
  }
  for (Iterator iterator=descriptor.getInboundRouter().getEndpoints().iterator(); iterator.hasNext(); ) {
    UMOImmutableEndpoint ep=(UMOImmutableEndpoint)iterator.next();
    if (!ep.isStreaming()) {
      logger.error("***********************************************");
      logger.error("setting streaming = true");
      logger.error("MULE-1752");
      logger.error("***********************************************");
      ((MuleEndpoint)ep).setStreaming(true);
    }
    if (ep.getTransformer() != null) {
      throw new InitialisationException(CoreMessages.streamingEndpointsDoNotSupportTransformers(),this);
    }
  }
  if (component instanceof Initialisable) {
    ((Initialisable)component).initialise();
  }
  try {
    entryPoint=model.getEntryPointResolver().resolveEntryPoint(descriptor);
  }
 catch (  Exception e) {
    throw new InitialisationException(e,this);
  }
}
