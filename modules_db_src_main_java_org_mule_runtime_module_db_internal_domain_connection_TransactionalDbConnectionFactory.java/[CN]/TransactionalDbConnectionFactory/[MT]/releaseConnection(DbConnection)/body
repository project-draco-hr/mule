{
  if (connection == null) {
    return;
  }
  try {
    if (connection.isClosed()) {
      return;
    }
  }
 catch (  SQLException e) {
    if (logger.isDebugEnabled()) {
      logger.debug("Error checking for closed connection on releasing connection",e);
    }
    return;
  }
  final Transaction transaction=dbTransactionManager.getTransaction();
  boolean closeConnection=false;
  if (connection.getTransactionalAction() == TransactionalAction.NOT_SUPPORTED) {
    closeConnection=true;
  }
 else   if (connection.getTransactionalAction() == TransactionalAction.JOIN_IF_POSSIBLE && transaction == null) {
    closeConnection=true;
  }
  if (closeConnection) {
    RuntimeException exception=null;
    try {
      if (!connection.getAutoCommit()) {
        connection.commit();
      }
    }
 catch (    SQLException e) {
      exception=new ConnectionCommitException(e);
    }
 finally {
      try {
        connection.close();
      }
 catch (      SQLException e) {
        if (exception == null) {
          exception=new ConnectionClosingException(e);
        }
      }
    }
    if (exception != null) {
      throw exception;
    }
  }
}
