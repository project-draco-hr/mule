{
  Domain domain=domainRepository.getDomain(descriptor.getDomain());
  if (domain == null) {
    throw new DeploymentException(CoreMessages.createStaticMessage(format("Domain '%s' has to be deployed in order to deploy Application '%s'",descriptor.getDomain(),descriptor.getName())));
  }
  ArtifactClassLoader parent=domain.getArtifactClassLoader();
  parent=getSharedLibClassLoader(descriptor,parent);
  final List<ApplicationPlugin> applicationPlugins=createContainerApplicationPlugins(parent,descriptor);
  applicationPlugins.addAll(createApplicationPlugins(parent,descriptor.getPlugins()));
  if (!applicationPlugins.isEmpty()) {
    parent=createCompositePluginClassLoader(parent,applicationPlugins);
  }
  final ArtifactClassLoader deploymentClassLoader=applicationClassLoaderFactory.create(parent,descriptor);
  DefaultMuleApplication delegate=new DefaultMuleApplication(descriptor,deploymentClassLoader,applicationPlugins,domainRepository);
  if (deploymentListener != null) {
    delegate.setDeploymentListener(deploymentListener);
  }
  return new ApplicationWrapper(delegate);
}
