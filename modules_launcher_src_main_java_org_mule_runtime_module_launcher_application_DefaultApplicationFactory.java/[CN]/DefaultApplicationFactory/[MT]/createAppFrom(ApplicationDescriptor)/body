{
  Domain domain=domainRepository.getDomain(descriptor.getDomain());
  if (domain == null) {
    throw new DeploymentException(createStaticMessage(format("Domain '%s' has to be deployed in order to deploy Application '%s'",descriptor.getDomain(),descriptor.getName())));
  }
  MuleApplicationClassLoader applicationClassLoader=applicationClassLoaderBuilderFactory.createArtifactClassLoaderBuilder().setDomain(domain).setPluginsSharedLibFolder(descriptor.getSharedPluginFolder()).addArtifactPluginDescriptors(descriptor.getPlugins().toArray(new ArtifactPluginDescriptor[0])).setArtifactId(descriptor.getName()).setArtifactDescriptor(descriptor).build();
  List<ArtifactPlugin> artifactPlugins=createArtifactPluginList(applicationClassLoader,descriptor.getPlugins());
  DefaultMuleApplication delegate=new DefaultMuleApplication(descriptor,applicationClassLoader,artifactPlugins,domainRepository);
  if (deploymentListener != null) {
    delegate.setDeploymentListener(deploymentListener);
  }
  return new ApplicationWrapper(delegate);
}
