{
  MuleConfiguration config=RegistryContext.getConfiguration();
  if (threadingProfile == null) {
    threadingProfile=config.getDefaultComponentThreadingProfile();
  }
 else   if (exceptionListener instanceof Initialisable) {
    ((Initialisable)exceptionListener).initialise();
  }
  if (exceptionListener instanceof Initialisable) {
    ((Initialisable)exceptionListener).initialise();
  }
  MuleEndpoint endpoint;
  if (inboundRouter == null) {
    inboundRouter=new InboundRouterCollection();
    inboundRouter.addRouter(new InboundPassThroughRouter());
  }
 else {
    if (inboundRouter.getCatchAllStrategy() != null && inboundRouter.getCatchAllStrategy().getEndpoint() != null) {
      inboundRouter.getCatchAllStrategy().getEndpoint().initialise();
    }
    for (Iterator iterator=inboundRouter.getEndpoints().iterator(); iterator.hasNext(); ) {
      endpoint=(MuleEndpoint)iterator.next();
      endpoint.initialise();
    }
  }
  if (responseRouter != null) {
    for (Iterator iterator=responseRouter.getEndpoints().iterator(); iterator.hasNext(); ) {
      endpoint=(MuleEndpoint)iterator.next();
      endpoint.initialise();
    }
  }
  if (outboundRouter == null) {
    outboundRouter=new OutboundRouterCollection();
    outboundRouter.addRouter(new OutboundPassThroughRouter());
  }
 else {
  }
  if (implementationReference instanceof String) {
    implementationReference=new ContainerKeyPair(container,implementationReference);
  }
  inboundRouter.initialise();
  outboundRouter.initialise();
  if (responseRouter != null) {
    responseRouter.initialise();
  }
  if (nestedRouter != null) {
    nestedRouter.initialise();
  }
}
