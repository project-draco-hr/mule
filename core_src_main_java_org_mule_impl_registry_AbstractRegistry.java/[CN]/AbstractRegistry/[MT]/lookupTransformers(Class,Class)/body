{
  List results=(List)transformerCache.get(input.getName() + output.getName());
  if (results != null) {
    return results;
  }
  results=new ArrayList(2);
  Collection transformers=getTransformers();
  for (Iterator itr=transformers.iterator(); itr.hasNext(); ) {
    UMOTransformer t=(UMOTransformer)itr.next();
    if (t instanceof UMOHeaderOnlyTransformer) {
      continue;
    }
    Class c=t.getReturnClass();
    if (c == null) {
      c=Object.class;
    }
    if (output.isAssignableFrom(c) && t.isSourceTypeSupported(input)) {
      results.add(t);
    }
  }
  transformerCache.put(input.getName() + output.getName(),results);
  return results;
}
