{
  when(mockMuleContext.getRegistry().get(MuleProperties.OBJECT_STORE_MANAGER)).thenReturn(mockObjectStoreManager);
  when(mockObjectStoreManager.getObjectStore(OBJECT_STOR_NAME_PREFIX + ".expiredAndDispatchedGroups",USE_PERSISTENT_STORE)).thenReturn(mockExpireGroupsObjectStore);
  when(mockObjectStoreManager.getObjectStore(OBJECT_STOR_NAME_PREFIX + ".processedGroups",USE_PERSISTENT_STORE,EventCorrelator.MAX_PROCESSED_GROUPS,-1,1000)).thenReturn(mockProcessedGroups);
  doReturn(memoryObjectStore).when(mockObjectStoreManager).getObjectStore(OBJECT_STOR_NAME_PREFIX + ".eventGroups",USE_PERSISTENT_STORE);
  memoryObjectStore.store(TEST_GROUP_ID,mockEventGroup);
  when(mockEventGroup.getGroupId()).thenReturn(TEST_GROUP_ID);
  when(mockEventGroup.toMessageCollection()).thenReturn(null);
  return new EventCorrelator(mockEventCorrelatorCallback,mockTimeoutMessageProcessor,mockMessagingInfoMapping,mockMuleContext,"flowName",USE_PERSISTENT_STORE,OBJECT_STOR_NAME_PREFIX);
}
