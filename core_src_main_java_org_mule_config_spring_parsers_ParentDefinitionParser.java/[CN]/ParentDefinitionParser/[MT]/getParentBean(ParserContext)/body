{
  AbstractBeanDefinition beanDef=(AbstractBeanDefinition)parserContext.getRegistry().getBeanDefinition(parentName);
  try {
    Class beanClass=ClassUtils.getClass(beanDef.getBeanClassName());
    if (!(parentClass.isAssignableFrom(beanClass))) {
      throw new IllegalArgumentException("Class for " + parentName + " not a subclass of "+ parentClass);
    }
    return beanDef;
  }
 catch (  ClassNotFoundException e) {
    throw (IllegalStateException)(new IllegalStateException("Bean does not exist!")).initCause(e);
  }
}
