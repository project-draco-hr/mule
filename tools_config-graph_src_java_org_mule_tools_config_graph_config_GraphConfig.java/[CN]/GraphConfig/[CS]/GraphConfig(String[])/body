{
  init();
  String filesString=getOpt(args,ARG_FILES,null);
  if (filesString != null) {
    files=new ArrayList();
    for (StringTokenizer stringTokenizer=new StringTokenizer(filesString,","); stringTokenizer.hasMoreTokens(); ) {
      files.add(stringTokenizer.nextToken());
    }
  }
  String outputDir=getOpt(args,ARG_OUTPUT_DIR,".");
  outputDirectory=new File(outputDir);
  if (!outputDirectory.exists())   outputDirectory.mkdirs();
  System.out.println("Outputting graphs to: " + outputDirectory.getAbsolutePath());
  outputFilename=getOpt(args,ARG_OUTPUT_FILE,null);
  caption=getOpt(args,ARG_CAPTION,null);
  executeCommand=getOpt(args,ARG_EXEC,null);
  keepDotFiles=Boolean.valueOf(getOpt(args,ARG_KEEP_DOT_FILES,"false")).booleanValue();
  combineFiles=Boolean.valueOf(getOpt(args,ARG_COMBINE_FILES,"false")).booleanValue();
  String temp=getOpt(args,ARG_MAPPINGS,null);
  if (temp != null) {
    mappingsFile=new File(temp);
    System.out.println("Using mappings file: " + mappingsFile.getAbsolutePath());
    if (mappingsFile.exists()) {
      mappings=new Properties();
      mappings.load(new FileInputStream(mappingsFile));
      System.out.println("Using Mappings: ");
      mappings.list(System.out);
    }
 else {
      throw new FileNotFoundException("Could not find file: " + mappingsFile.getAbsolutePath());
    }
  }
 else {
    System.out.println("No mappings file set");
  }
  temp=getOpt(args,ARG_URLS,null);
  if (temp != null) {
    urlsFile=new File(temp);
    System.out.println("Using urls file: " + urlsFile.getAbsolutePath());
    if (urlsFile.exists()) {
      urls=new Properties();
      urls.load(new FileInputStream(urlsFile));
      System.out.println("Using urls: ");
      urls.list(System.out);
    }
  }
 else {
    System.out.println("No urls file set");
  }
}
