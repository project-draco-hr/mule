{
  Flow flow=getTestFlow("test",Apple.class);
  MuleSession session=getTestSession(flow,muleContext);
  TestEventAggregator router=new TestEventAggregator(3);
  router.setMuleContext(muleContext);
  router.setFlowConstruct(flow);
  router.initialise();
  MuleMessage message1=MuleMessage.builder().payload("test event A").build();
  MuleMessage message2=MuleMessage.builder().payload("test event B").build();
  MuleMessage message3=MuleMessage.builder().payload("test event C").build();
  MuleEvent event1=new DefaultMuleEvent(create(flow,message1.getUniqueId()),message1,flow,session);
  MuleEvent event2=new DefaultMuleEvent(create(flow,message1.getUniqueId()),message2,flow,session);
  MuleEvent event3=new DefaultMuleEvent(create(flow,message1.getUniqueId()),message3,flow,session);
  assertNull(router.process(event1));
  assertNull(router.process(event2));
  MuleEvent result=router.process(event3);
  assertNotNull(result);
  assertTrue(result.getMessageAsString().contains("test event A"));
  assertTrue(result.getMessageAsString().contains("test event B"));
  assertTrue(result.getMessageAsString().contains("test event C"));
  assertTrue(result.getMessageAsString().matches("test event [A,B,C] test event [A,B,C] test event [A,B,C] "));
}
