{
  Flow flow=getTestFlow("test",Apple.class);
  MuleSession session=getTestSession(flow,muleContext);
  TestEventAggregator router=new TestEventAggregator(3);
  router.setMuleContext(muleContext);
  router.setFlowConstruct(flow);
  router.initialise();
  EventContext context=DefaultEventContext.create(flow,TEST_CONNECTOR,"foo");
  InternalMessage message1=InternalMessage.builder().payload("test event A").build();
  InternalMessage message2=InternalMessage.builder().payload("test event B").build();
  InternalMessage message3=InternalMessage.builder().payload("test event C").build();
  Event event1=Event.builder(context).message(message1).flow(flow).session(session).build();
  Event event2=Event.builder(context).message(message2).flow(flow).session(session).build();
  Event event3=Event.builder(context).message(message3).flow(flow).session(session).build();
  assertNull(router.process(event1));
  assertNull(router.process(event2));
  Event result=router.process(event3);
  assertNotNull(result);
  assertTrue(result.getMessageAsString(muleContext).contains("test event A"));
  assertTrue(result.getMessageAsString(muleContext).contains("test event B"));
  assertTrue(result.getMessageAsString(muleContext).contains("test event C"));
  assertTrue(result.getMessageAsString(muleContext).matches("test event [A,B,C] test event [A,B,C] test event [A,B,C] "));
}
