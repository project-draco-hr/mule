{
  if (TransformerUtils.isDefined(transformers) && transformers.size() > 0) {
    Iterator iterator=transformers.iterator();
    while (iterator.hasNext()) {
      UMOTransformer transformer=(UMOTransformer)iterator.next();
      if (getPayload() == null) {
        if (transformer.isAcceptNull()) {
          setPayload(NullPayload.getInstance());
        }
 else {
          if (logger.isDebugEnabled()) {
            logger.debug("Transformer " + transformer + " doesn't support the null payload.");
          }
          break;
        }
      }
      Class srcCls=getPayload().getClass();
      if (transformer.isSourceTypeSupported(srcCls)) {
        Object result=transformer.transform(this);
        if (originalAdapter == null && DebugOptions.isCacheMessageOriginalPayload()) {
          originalAdapter=adapter;
        }
        if (result instanceof UMOMessage) {
synchronized (this) {
            adapter=((UMOMessage)result).getAdapter();
          }
        }
 else {
          setPayload(result);
        }
      }
 else       if (!transformer.isIgnoreBadInput()) {
        if (logger.isDebugEnabled()) {
          logger.debug("Transformer " + transformer + " doesn't support the source payload: "+ srcCls);
        }
        break;
      }
    }
  }
}
