{
  try {
    if (!poolInitialised.get() && enablePooling) {
      initialisePool();
      proxyPool.start();
    }
 else     if (!componentPerRequest) {
      componentProxy=createComponentProxy();
    }
    workManager.start();
    workManager.scheduleWork(this,WorkManager.INDEFINITE,null,null);
  }
 catch (  Exception e) {
    throw new LifecycleException(new Message(Messages.FAILED_TO_START_X,"Component: " + descriptor.getName()),e,this);
  }
}
