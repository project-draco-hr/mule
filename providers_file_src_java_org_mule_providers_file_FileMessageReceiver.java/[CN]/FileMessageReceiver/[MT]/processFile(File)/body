{
  File destinationFile=null;
  String orginalFilename=file.getName();
  if (moveDir != null) {
    String fileName=file.getName();
    if (moveToPattern != null) {
      fileName=((FileConnector)connector).getFilenameParser().getFilename(null,moveToPattern);
    }
    destinationFile=new File(moveDir,fileName);
  }
  boolean resultOfFileMoveOperation=false;
  try {
    if (!(file.canRead() && file.exists() && file.isFile())) {
      throw new MuleException(new Message(Messages.FILE_X_DOES_NTO_EXIST,file.getName()));
    }
 else {
      if (destinationFile != null) {
        resultOfFileMoveOperation=file.renameTo(destinationFile);
        if (!resultOfFileMoveOperation) {
          throw new MuleException(new Message("file",4,file.getAbsolutePath(),destinationFile.getAbsolutePath()));
        }
        file=destinationFile;
      }
      UMOMessageAdapter msgAdapter=connector.getMessageAdapter(file);
      msgAdapter.setProperty(FileConnector.PROPERTY_ORIGINAL_FILENAME,orginalFilename);
      if (((FileConnector)connector).isAutoDelete()) {
        msgAdapter.getPayloadAsBytes();
        if (destinationFile == null) {
          resultOfFileMoveOperation=file.delete();
          if (!resultOfFileMoveOperation) {
            throw new MuleException(new Message("file",3,file.getAbsolutePath()));
          }
        }
      }
      UMOMessage message=new MuleMessage(msgAdapter);
      routeMessage(message,endpoint.isSynchronous());
    }
  }
 catch (  Exception e) {
    boolean resultOfRollbackFileMove=false;
    if (resultOfFileMoveOperation) {
      resultOfRollbackFileMove=rollbackFileMove(destinationFile,file.getAbsolutePath());
    }
    Exception ex=new MuleException(new Message("file",2,file.getName(),(resultOfRollbackFileMove ? "successful" : "unsuccessful")),e);
    handleException(ex);
  }
}
