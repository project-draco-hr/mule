{
  Component component=muleContext.getRegistry().lookupService(SERVICE_NAME).getComponent();
  assertTrue(component instanceof RestServiceWrapper);
  RestServiceWrapper restServiceWrapper=(RestServiceWrapper)component;
  assertEquals(restServiceWrapper.getServiceUrl(),SERVICE_URL);
  assertEquals(restServiceWrapper.getHttpMethod(),"POST");
  assertEquals(restServiceWrapper.isUrlFromMessage(),true);
  assertEquals(restServiceWrapper.getErrorExpression(),"ErrorExp");
  assertNotNull(restServiceWrapper.getFilter());
  assertEquals(NotFilter.class,restServiceWrapper.getFilter().getClass());
  NotFilter filter=(NotFilter)restServiceWrapper.getFilter();
  assertEquals(filter.getFilter().getClass(),WildcardFilter.class);
  WildcardFilter innerFilter=(WildcardFilter)filter.getFilter();
  assertEquals(innerFilter.getPattern(),"*xyz*");
  assertNotNull(restServiceWrapper.getPayloadParameterNames());
  assertEquals(restServiceWrapper.getPayloadParameterNames().size(),2);
  assertEquals(restServiceWrapper.getPayloadParameterNames().get(0),"test-property1");
  assertEquals(restServiceWrapper.getPayloadParameterNames().get(1),"test-property2");
  assertNotNull(restServiceWrapper.getRequiredParams());
  assertEquals(restServiceWrapper.getRequiredParams().size(),2);
  assertEquals(restServiceWrapper.getRequiredParams().get("r1"),"rv1");
  assertEquals(restServiceWrapper.getRequiredParams().get("r2"),"rv2");
  assertNotNull(restServiceWrapper.getOptionalParams());
  assertEquals(restServiceWrapper.getOptionalParams().size(),2);
  assertEquals(restServiceWrapper.getOptionalParams().get("o1"),"ov1");
  assertEquals(restServiceWrapper.getOptionalParams().get("o2"),"ov2");
}
