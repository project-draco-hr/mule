{
  MuleMessage message=event.getMessage();
  List recipients=null;
  try {
    recipients=getRecipients(message);
  }
 catch (  RequiredValueException e) {
  }
  if (recipients == null) {
    int endpointsCount=routes.size();
    recipients=new ArrayList(endpointsCount);
    for (int i=0; i < endpointsCount; i++) {
      recipients.add(getRoute(i,message));
    }
  }
  if (recipients == null || recipients.size() == 0) {
    throw new RoutePathNotFoundException(CoreMessages.noEndpointsForRouter(),event,null);
  }
  if (enableCorrelation != CorrelationMode.NEVER) {
    boolean correlationSet=message.getCorrelationId() != null;
    if (correlationSet && (enableCorrelation == CorrelationMode.IF_NOT_SET)) {
      logger.debug("CorrelationId is already set, not setting Correlation group size");
    }
 else {
      message.setCorrelationGroupSize(recipients.size());
    }
  }
  MuleEvent result=null;
  OutboundEndpoint endpoint=null;
  MuleMessage request=null;
  boolean success=false;
  for (Iterator iterator=recipients.iterator(); iterator.hasNext(); ) {
    request=new DefaultMuleMessage(message.getPayload(),message,muleContext);
    endpoint=getRecipientEndpoint(request,iterator.next());
    boolean lastEndpoint=!iterator.hasNext();
    if (!lastEndpoint && !endpoint.getExchangePattern().hasResponse()) {
      throw new CouldNotRouteOutboundMessageException(MessageFactory.createStaticMessage("The ExceptionBasedRouter does not support asynchronous endpoints, make sure all endpoints on the router are configured as synchronous"),event,endpoint);
    }
    if (endpoint.getExchangePattern().hasResponse()) {
      try {
        MuleMessage resultMessage=null;
        result=sendRequest(event,request,endpoint,true);
        if (result != null) {
          resultMessage=result.getMessage();
        }
        if (resultMessage != null) {
          resultMessage.applyTransformers(result,endpoint.getResponseTransformers());
        }
        if (!exceptionPayloadAvailable(resultMessage)) {
          if (logger.isDebugEnabled()) {
            logger.debug("Successful invocation detected, stopping further processing.");
          }
          success=true;
          break;
        }
      }
 catch (      MuleException e) {
        if (logger.isWarnEnabled()) {
          Throwable t=ExceptionHelper.getRootException(e);
          logger.warn("Failed to send to endpoint: " + endpoint.getEndpointURI().toString() + ". Error was: "+ t+ ". Trying next endpoint",t);
        }
      }
    }
 else {
      try {
        sendRequest(event,request,endpoint,false);
        success=true;
        break;
      }
 catch (      MuleException e) {
        logger.info("Failed to dispatch to endpoint: " + endpoint.getEndpointURI().toString() + ". Error was: "+ e.getMessage()+ ". Trying next endpoint");
      }
    }
  }
  if (!success) {
    throw new CouldNotRouteOutboundMessageException(event,endpoint);
  }
  return result;
}
