{
  if (model == null) {
    System.err.println("model is null");
    return;
  }
  List descriptors=model.getChildren("mule-descriptor");
  for (Iterator iter=descriptors.iterator(); iter.hasNext(); ) {
    Element descriptor=(Element)iter.next();
    String name=descriptor.getAttributeValue("name");
    GraphNode node=graph.addNode();
    node.getInfo().setHeader(name);
    node.getInfo().setFillColor("grey");
    StringBuffer caption=new StringBuffer();
    caption.append(descriptor.getAttributeValue("implementation") + "\n");
    Element threadingProfile=descriptor.getChild("threading-profile");
    if (threadingProfile != null) {
      caption.append("maxBufferSize = " + threadingProfile.getAttributeValue("maxBufferSize") + "\n");
      caption.append("threadTTL = " + threadingProfile.getAttributeValue("threadTTL") + "\n");
      caption.append("maxThreadsActive = " + threadingProfile.getAttributeValue("maxThreadsActive") + "\n");
      caption.append("maxThreadsIdle = " + threadingProfile.getAttributeValue("maxThreadsIdle") + "\n");
    }
    Element poolingProfile=descriptor.getChild("pooling-profile");
    if (threadingProfile != null) {
      caption.append("exhaustedAction = " + poolingProfile.getAttributeValue("exhaustedAction") + "\n");
      caption.append("maxActive = " + poolingProfile.getAttributeValue("maxActive") + "\n");
      caption.append("maxIdle = " + poolingProfile.getAttributeValue("maxIdle") + "\n");
      caption.append("maxWait = " + poolingProfile.getAttributeValue("maxWait") + "\n");
    }
    appendProperties(descriptor,caption);
    appendDescription(descriptor,caption);
    node.getInfo().setCaption(caption.toString());
    processShortestNotation(graph,descriptor,node);
    processExceptionStrategy(graph,descriptor,node);
    processInboundRouters(graph,descriptor,node);
    processOutBoundRouters(graph,descriptor,node);
    processResponseRouter(graph,descriptor,node);
  }
}
