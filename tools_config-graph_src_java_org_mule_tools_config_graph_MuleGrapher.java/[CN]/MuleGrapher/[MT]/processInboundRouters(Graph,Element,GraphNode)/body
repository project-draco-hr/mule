{
  Element inboundRouter=descriptor.getChild("inbound-router");
  if (inboundRouter != null) {
    GraphNode endpointsLink=node;
    Element router=inboundRouter.getChild("router");
    if (router != null) {
      GraphNode routerNode=graph.addNode();
      routerNode.getInfo().setCaption(router.getAttributeValue("className"));
      routerNode.getInfo().setFillColor(COLOR_ROUTER);
      graph.addEdge(routerNode,node).getInfo().setCaption("inbound router");
      endpointsLink=routerNode;
    }
    List inbounEndpoints=inboundRouter.getChildren(TAG_ENDPOINT);
    for (Iterator iterator=inbounEndpoints.iterator(); iterator.hasNext(); ) {
      Element inEndpoint=(Element)iterator.next();
      String url=inEndpoint.getAttributeValue(TAG_ATTRIBUTE_ADDRESS);
      if (url != null) {
        GraphNode in=(GraphNode)endpoints.get(url);
        StringBuffer caption=new StringBuffer();
        if (in == null) {
          in=graph.addNode();
          in.getInfo().setFillColor(COLOR_ENDPOINT);
          caption.append(url).append("\n");
          appendProperties(inEndpoint,caption);
          appendDescription(inEndpoint,caption);
          in.getInfo().setCaption(caption.toString());
        }
 else {
          caption.append(url).append("\n");
          appendProperties(inEndpoint,caption);
          appendDescription(inEndpoint,caption);
          in.getInfo().setCaption(caption.toString());
        }
        if (in != null) {
          processInboundFilter(graph,inEndpoint,in,endpointsLink);
        }
      }
    }
  }
}
