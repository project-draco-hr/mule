{
  endpoints.clear();
  SAXBuilder builder=new SAXBuilder();
  builder.setValidation(true);
  builder.setEntityResolver(new MuleDtdResolver());
  Graph graph=GraphFactory.newGraph();
  builder.setIgnoringElementContentWhitespace(true);
  for (Iterator iterator=files.iterator(); iterator.hasNext(); ) {
    String s=(String)iterator.next();
    File myFile=new File(s);
    System.out.println("processing file " + myFile.getCanonicalPath());
    Document doc=builder.build(myFile);
    Element root=doc.getRootElement();
    if (files.size() == 1) {
      if (caption == null) {
        caption=root.getAttribute("id").getValue();
        if (caption != null) {
          caption=caption.replaceAll("_"," ");
        }
 else {
          caption="Mule Configuration";
        }
      }
      StringBuffer captionBuffer=new StringBuffer();
      captionBuffer.append(caption);
      appendDescription(root,captionBuffer);
      graph.getInfo().setCaption(captionBuffer.toString());
    }
    parseEndpointIdentifiers(graph,root);
    parseEndpoints(graph,root);
    Element model=root.getChild("model");
    if (model != null) {
      parseModel(graph,model);
    }
 else {
      parseModel(graph,root);
    }
    parseConnectors(graph,root);
  }
  if (files.size() > 1) {
    if (caption == null)     caption="(no caption set)";
    graph.getInfo().setCaption(caption);
  }
  clearHiddenNodes(graph);
  saveGraph(graph,fileName,outputDir);
  return graph;
}
