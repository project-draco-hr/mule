{
  MuleClient client=new MuleClient(muleContext);
  Object ftc=getComponent("testComponent");
  assertTrue("FunctionalStreamingTestComponent expected",ftc instanceof FunctionalStreamingTestComponent);
  final CountDownLatch latch=new CountDownLatch(1);
  final AtomicReference<String> message=new AtomicReference<String>();
  ((FunctionalStreamingTestComponent)ftc).setEventCallback(newCallback(latch,message),TEST_MESSAGE.length());
  client.dispatch(((InboundEndpoint)client.getMuleContext().getRegistry().lookupObject("testInbound")).getAddress(),TEST_MESSAGE,new HashMap<String,Object>());
  latch.await(10,TimeUnit.SECONDS);
  assertEquals(RESULT,message.get());
  final CountDownLatch latch2=new CountDownLatch(1);
  final AtomicReference<String> message2=new AtomicReference<String>();
  ((FunctionalStreamingTestComponent)ftc).setEventCallback(newCallback(latch2,message2),TEST_MESSAGE_2.length());
  client.dispatch(((InboundEndpoint)client.getMuleContext().getRegistry().lookupObject("testInbound")).getAddress(),TEST_MESSAGE_2,new HashMap<String,Object>());
  latch2.await(10,TimeUnit.SECONDS);
  assertEquals(RESULT_2,message2.get());
}
