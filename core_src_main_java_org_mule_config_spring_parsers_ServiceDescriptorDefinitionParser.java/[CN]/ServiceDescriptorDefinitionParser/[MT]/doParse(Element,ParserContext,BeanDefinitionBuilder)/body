{
  Element parent=(Element)element.getParentNode();
  String modelName=parent.getAttribute(ATTRIBUTE_NAME);
  builder.addPropertyValue("modelName",modelName);
  builder.setSingleton(true);
  builder.addDependsOn(modelName);
  String implClass=element.getAttribute("implementation");
  if (StringUtils.isNotBlank(implClass)) {
    BeanDefinitionBuilder serviceFactory=BeanDefinitionBuilder.rootBeanDefinition(SimpleObjectFactory.class);
    serviceFactory.addPropertyValue("objectClassName",implClass);
    String serviceName=element.getAttribute("name") + "-factory";
    builder.addPropertyReference("serviceFactory",serviceName);
    BeanDefinitionHolder holder=new BeanDefinitionHolder(serviceFactory.getBeanDefinition(),serviceName);
    registerBeanDefinition(holder,parserContext.getRegistry());
    element.removeAttribute("implementation");
  }
  super.doParse(element,parserContext,builder);
}
