{
  String contentTypeSubType=HttpParser.getContentTypeSubType(contentType);
  MimeMultipart mimeMultipartContent=new HttpMimeMultipart(contentType,contentTypeSubType);
  final Collection<HttpPart> parts=body.getParts();
  for (  HttpPart part : parts) {
    final InternetHeaders internetHeaders=new InternetHeaders();
    for (    String headerName : part.getHeaderNames()) {
      final Collection<String> headerValues=part.getHeaders(headerName);
      for (      String headerValue : headerValues) {
        internetHeaders.addHeader(headerName,headerValue);
      }
    }
    if (internetHeaders.getHeader(CONTENT_DISPOSITION) == null) {
      String partType=contentTypeSubType.equals(FORM_DATA) ? FORM_DATA : ATTACHMENT;
      internetHeaders.addHeader(CONTENT_DISPOSITION,getContentDisposition(part,partType));
    }
    if (internetHeaders.getHeader(CONTENT_TYPE) == null && part.getContentType() != null) {
      internetHeaders.addHeader(CONTENT_TYPE,part.getContentType());
    }
    try {
      final byte[] partContent=IOUtils.toByteArray(part.getInputStream());
      mimeMultipartContent.addBodyPart(new MimeBodyPart(internetHeaders,partContent));
    }
 catch (    Exception e) {
      throw new RuntimeException(e);
    }
  }
  return mimeMultipartContent;
}
