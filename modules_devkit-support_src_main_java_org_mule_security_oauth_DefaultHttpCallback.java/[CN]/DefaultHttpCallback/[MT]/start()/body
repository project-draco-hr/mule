{
  String dynamicFlowName=String.format("DynamicFlow-%s:%d/%s",domain,localPort,callbackPath);
  flow=new Flow(dynamicFlowName,muleContext);
  connectorDelegate=getConnectorDelegate(connector);
  url=buildUrl();
  this.localUrl=url.replaceFirst(domain,"localhost");
  if (localUrl.indexOf((":" + String.valueOf(remotePort))) == -1) {
    this.localUrl=localUrl.replaceFirst("localhost",("localhost:" + String.valueOf(localPort)));
  }
 else {
    this.localUrl=localUrl.replaceFirst(String.valueOf(remotePort),String.valueOf(localPort));
  }
  MessageSource source=connectorDelegate.getMessageSource();
  if (source instanceof FlowConstructAware) {
    ((FlowConstructAware)source).setFlowConstruct(flow);
  }
  flow.setMessageSource(source);
  MessageProcessor messageProcessor;
  if (callbackFlow != null) {
    messageProcessor=new DefaultHttpCallback.FlowRefMessageProcessor();
  }
 else {
    messageProcessor=callbackMessageProcessor;
  }
  if (async) {
    messageProcessor=wrapMessageProcessorInAsyncChain(messageProcessor);
  }
  List<MessageProcessor> messageProcessors=new ArrayList<>();
  messageProcessors.add(messageProcessor);
  flow.setMessageProcessors(messageProcessors);
  if (exceptionHandler != null) {
    flow.setExceptionListener(exceptionHandler);
  }
  flow.initialise();
  flow.start();
  LOGGER.debug(String.format("Created flow with http inbound endpoint listening at: %s",url));
}
