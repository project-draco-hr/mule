{
  ExceptionTypeFilter filter=new ExceptionTypeFilter();
  assertThat(filter.getExpectedType(),nullValue());
  InternalMessage m=InternalMessage.builder().payload("test").build();
  assertThat(filter.accept(m,mock(Event.Builder.class)),is(false));
  m=InternalMessage.builder(m).exceptionPayload(new DefaultExceptionPayload(new IllegalArgumentException("test"))).build();
  assertThat(filter.accept(m,mock(Event.Builder.class)),is(true));
  filter=new ExceptionTypeFilter(IOException.class);
  assertThat(filter.accept(m,mock(Event.Builder.class)),is(false));
  m=InternalMessage.builder(m).exceptionPayload(new DefaultExceptionPayload(new IOException("test"))).build();
  assertThat(filter.accept(m,mock(Event.Builder.class)),is(true));
}
