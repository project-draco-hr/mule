{
  Converter inputStreamToString=new MockConverterBuilder().named("inputStreamToString").from(INPUT_STREAM_DATA_TYPE).to(STRING_DATA_TYPE).build();
  graph.addConverter(inputStreamToString);
  Converter inputStreamToJson=new MockConverterBuilder().named("inputStreamToJson").from(INPUT_STREAM_DATA_TYPE).to(JSON_DATA_TYPE).build();
  graph.addConverter(inputStreamToJson);
  Converter jsonToXml=new MockConverterBuilder().named("jsonToXml").from(JSON_DATA_TYPE).to(XML_DATA_TYPE).build();
  graph.addConverter(jsonToXml);
  Converter jsonToString=new MockConverterBuilder().named("jsonToString").from(JSON_DATA_TYPE).to(STRING_DATA_TYPE).build();
  graph.addConverter(jsonToString);
  Converter stringToXml=new MockConverterBuilder().named("stringToXml").from(STRING_DATA_TYPE).to(XML_DATA_TYPE).build();
  graph.addConverter(stringToXml);
  Converter stringToJson=new MockConverterBuilder().named("stringToJson").from(STRING_DATA_TYPE).to(JSON_DATA_TYPE).build();
  graph.addConverter(stringToJson);
  List<Converter> converters=lookupStrategyTransformation.lookupConverters(INPUT_STREAM_DATA_TYPE,XML_DATA_TYPE);
  assertEquals(4,converters.size());
  assertContainsCompositeTransformer(converters,inputStreamToString,stringToXml);
  assertContainsCompositeTransformer(converters,inputStreamToJson,jsonToXml);
  assertContainsCompositeTransformer(converters,inputStreamToString,stringToJson,jsonToXml);
}
