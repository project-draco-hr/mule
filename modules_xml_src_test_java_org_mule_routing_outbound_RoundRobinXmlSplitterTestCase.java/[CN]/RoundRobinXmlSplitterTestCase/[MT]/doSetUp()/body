{
  endpoint1=getTestOutboundEndpoint("Test1Endpoint","test://endpointUri.1");
  endpoint2=getTestOutboundEndpoint("Test2Endpoint","test://endpointUri.2");
  endpoint3=getTestOutboundEndpoint("Test3Endpoint","test://endpointUri.3");
  mockendpoint1=RouterTestUtils.getMockEndpoint(endpoint1);
  mockendpoint2=RouterTestUtils.getMockEndpoint(endpoint2);
  mockendpoint3=RouterTestUtils.getMockEndpoint(endpoint3);
  endpoint4=getTestOutboundEndpoint("Test4Endpoint","test://endpointUri.4?synchronous=true");
  endpoint5=getTestOutboundEndpoint("Test5Endpoint","test://endpointUri.5?synchronous=true");
  endpoint6=getTestOutboundEndpoint("Test6Endpoint","test://endpointUri.6?synchronous=true");
  mockendpoint4=RouterTestUtils.getMockEndpoint(endpoint4);
  mockendpoint5=RouterTestUtils.getMockEndpoint(endpoint5);
  mockendpoint6=RouterTestUtils.getMockEndpoint(endpoint6);
  asyncXmlSplitter=new XmlMessageSplitter();
  asyncXmlSplitter.setValidateSchema(true);
  asyncXmlSplitter.setExternalSchemaLocation("purchase-order.xsd");
  asyncXmlSplitter.setMuleContext(muleContext);
  Map namespaces=new HashMap();
  namespaces.put("e","http://www.example.com");
  asyncXmlSplitter.setSplitExpression("/e:purchaseOrder/e:items/e:item");
  asyncXmlSplitter.setNamespaces(namespaces);
  asyncXmlSplitter.addEndpoint((OutboundEndpoint)mockendpoint1.proxy());
  asyncXmlSplitter.addEndpoint((OutboundEndpoint)mockendpoint2.proxy());
  asyncXmlSplitter.addEndpoint((OutboundEndpoint)mockendpoint3.proxy());
  syncXmlSplitter=new XmlMessageSplitter();
  syncXmlSplitter.setMuleContext(muleContext);
  syncXmlSplitter.setValidateSchema(true);
  syncXmlSplitter.setExternalSchemaLocation("purchase-order.xsd");
  syncXmlSplitter.setSplitExpression("/e:purchaseOrder/e:items/e:item");
  syncXmlSplitter.setNamespaces(namespaces);
  syncXmlSplitter.addEndpoint((OutboundEndpoint)mockendpoint4.proxy());
  syncXmlSplitter.addEndpoint((OutboundEndpoint)mockendpoint5.proxy());
  syncXmlSplitter.addEndpoint((OutboundEndpoint)mockendpoint6.proxy());
}
