{
  Collection routerParsers=context.getRegistry().lookupObjects(RouterAnnotationParser.class);
  OutboundRouter router=null;
  List<AnnotationMetaData> annotations=AnnotationUtils.getClassAndMethodAnnotations(componentFactoryClass);
  for (  AnnotationMetaData metaData : annotations) {
    Router routerAnnotation=metaData.getAnnotation().annotationType().getAnnotation(Router.class);
    if (routerAnnotation != null && routerAnnotation.type() == RouterType.Outbound) {
      if (router != null) {
        throw new IllegalStateException("You can only configure one outbound router on a service");
      }
      RouterAnnotationParser parser=parserFactory.getRouterParser(metaData.getAnnotation(),metaData.getClazz(),metaData.getMember());
      if (parser != null) {
        router=(OutboundRouter)parser.parseRouter(metaData.getAnnotation());
      }
 else {
        throw new IllegalStateException("Cannot find parser for router annotation: " + metaData.getAnnotation().toString());
      }
    }
  }
  if (router == null) {
    router=new OutboundPassThroughRouter();
  }
  if (router instanceof MuleContextAware) {
    ((MuleContextAware)router).setMuleContext(context);
  }
  router.initialise();
  return router;
}
