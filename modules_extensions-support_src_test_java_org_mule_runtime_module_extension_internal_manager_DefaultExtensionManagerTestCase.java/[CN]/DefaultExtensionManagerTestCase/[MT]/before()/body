{
  DefaultExtensionManager extensionsManager=new DefaultExtensionManager();
  extensionsManager.setMuleContext(muleContext);
  extensionsManager.initialise();
  this.extensionsManager=extensionsManager;
  when(extensionModel1.getName()).thenReturn(EXTENSION1_NAME);
  mockClassLoaderModelProperty(extensionModel1,getClass().getClassLoader());
  when(extensionModel1.getConfigurationModels()).thenReturn(asList(extension1ConfigurationModel));
  when(extensionModel2.getName()).thenReturn(EXTENSION2_NAME);
  when(extensionModel3WithRepeatedName.getName()).thenReturn(EXTENSION2_NAME);
  when(extensionModel1.getVendor()).thenReturn(MULESOFT);
  when(extensionModel2.getVendor()).thenReturn(MULESOFT);
  when(extensionModel3WithRepeatedName.getVendor()).thenReturn(OTHER_VENDOR);
  when(extensionModel1.getVersion()).thenReturn(EXTENSION1_VERSION);
  when(extensionModel2.getVersion()).thenReturn(EXTENSION2_VERSION);
  mockClassLoaderModelProperty(extensionModel1,getClass().getClassLoader());
  when(extensionModel3WithRepeatedName.getVersion()).thenReturn(EXTENSION2_VERSION);
  when(extension1ConfigurationModel.getName()).thenReturn(EXTENSION1_CONFIG_NAME);
  mockConfigurationInstance(extension1ConfigurationModel,configInstance);
  mockInterceptors(extension1ConfigurationModel,null);
  when(extension1ConfigurationModel.getOperationModels()).thenReturn(ImmutableList.of());
  when(extension1ConfigurationModel.getSourceModels()).thenReturn(ImmutableList.of());
  when(extension1ConfigurationModel.getParameterModels()).thenReturn(ImmutableList.of());
  mockConfigurationInstance(extension1ConfigurationModel,configInstance);
  when(extensionModel1.getConfigurationModel(EXTENSION1_CONFIG_NAME)).thenReturn(Optional.of(extension1ConfigurationModel));
  when(extensionModel1.getOperationModel(EXTENSION1_OPERATION_NAME)).thenReturn(Optional.of(extension1OperationModel));
  when(extension1OperationModel.getName()).thenReturn(EXTENSION1_OPERATION_NAME);
  when(extension1ConfigurationInstance.getValue()).thenReturn(configInstance);
  when(extension1ConfigurationInstance.getModel()).thenReturn(extension1ConfigurationModel);
  when(extension1ConfigurationInstance.getName()).thenReturn(EXTENSION1_CONFIG_INSTANCE_NAME);
  when(extension1ConfigurationProvider.get(event)).thenReturn(extension1ConfigurationInstance);
  when(extension1ConfigurationProvider.getConfigurationModel()).thenReturn(extension1ConfigurationModel);
  when(extension1ConfigurationProvider.getExtensionModel()).thenReturn(extensionModel1);
  when(extension1ConfigurationProvider.getName()).thenReturn(EXTENSION1_CONFIG_INSTANCE_NAME);
  mockExecutorFactory(extension1OperationModel,executorFactory);
  when(executorFactory.createExecutor(extension1OperationModel)).thenReturn(executor);
  classLoader=getClass().getClassLoader();
  registerExtensions(extensionModel1,extensionModel2,extensionModel3WithRepeatedName);
  stubRegistryKeys(muleContext,EXTENSION1_CONFIG_INSTANCE_NAME,EXTENSION1_OPERATION_NAME,EXTENSION1_NAME);
}
