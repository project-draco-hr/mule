{
  if (!useTemplates) {
    return (UMOImmutableEndpoint)endpoints.get(index);
  }
 else {
    UMOImmutableEndpoint ep=(UMOImmutableEndpoint)endpoints.get(index);
    String uri=ep.getEndpointURI().toString();
    if (logger.isDebugEnabled()) {
      logger.debug("Uri before parsing is: " + uri);
    }
    Map props=new HashMap();
    props.putAll(ep.getProperties());
    for (Iterator iterator=message.getPropertyNames().iterator(); iterator.hasNext(); ) {
      String propertyKey=(String)iterator.next();
      props.put(propertyKey,message.getProperty(propertyKey));
    }
    String newUriString=parser.parse(props,uri);
    if (logger.isDebugEnabled()) {
      logger.debug("Uri after parsing is: " + uri);
    }
    try {
      UMOEndpointURI newUri=new MuleEndpointURI(newUriString);
      if (!newUri.getScheme().equalsIgnoreCase(ep.getEndpointURI().getScheme())) {
        throw new CouldNotRouteOutboundMessageException(CoreMessages.schemeCannotChangeForRouter(ep.getEndpointURI().getScheme(),newUri.getScheme()),message,ep);
      }
      ep=new DynamicEndpointURIEndpoint(ep,newUri);
    }
 catch (    EndpointException e) {
      throw new CouldNotRouteOutboundMessageException(CoreMessages.templateCausedMalformedEndpoint(uri,newUriString),message,ep,e);
    }
    return ep;
  }
}
