{
  Map<String,Object> invocationContext=(Map<String,Object>)message.get(Message.INVOCATION_CONTEXT);
  Map<String,Object> requestContext=(Map<String,Object>)invocationContext.get(Client.REQUEST_CONTEXT);
  for (  String outboundProperty : requestContext.keySet()) {
    if (outboundProperty.startsWith(SOAP_HEADERS_PROPERTY_PREFIX)) {
      Object value=requestContext.get(outboundProperty);
      try {
        Transformer transformer=muleContext.getRegistry().lookupTransformer(DataTypeFactory.createFromObject(value),new SimpleDataType(Document.class));
        Document document=(Document)transformer.transform(value);
        QName qname=new QName(null,document.getDocumentElement().getTagName());
        message.getHeaders().add(new SoapHeader(qname,document.getDocumentElement()));
      }
 catch (      TransformerException e) {
        MuleEvent event=(MuleEvent)message.getExchange().get(CxfConstants.MULE_EVENT);
        throw new InvalidSoapHeaderException(CoreMessages.createStaticMessage("Outbound property %s " + "contains an invalid XML string",outboundProperty),e,event);
      }
    }
  }
}
