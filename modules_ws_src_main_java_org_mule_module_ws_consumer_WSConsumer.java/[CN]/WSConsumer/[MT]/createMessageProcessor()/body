{
  MessageProcessorChainBuilder chainBuilder=new DefaultMessageProcessorChainBuilder();
  final AutoTransformer autoTransformer=new AutoTransformer();
  autoTransformer.setReturnDataType(DataType.STRING_DATA_TYPE);
  chainBuilder.chain(new ResponseMessageProcessorAdapter(autoTransformer));
  chainBuilder.chain(new AbstractInterceptingMessageProcessor(){
    @Override public MuleEvent process(    MuleEvent event) throws MuleException {
      try {
        return processNext(event);
      }
 catch (      DispatchException e) {
        if (e.getCause() instanceof SoapFault) {
          SoapFault soapFault=(SoapFault)e.getCause();
          event.getMessage().setPayload(soapFault.getDetail());
          autoTransformer.process(event);
          throw new SoapFaultException(event,soapFault.getFaultCode(),soapFault.getSubCode(),soapFault.getMessage(),soapFault.getDetail());
        }
 else {
          throw e;
        }
      }
    }
  }
);
  chainBuilder.chain(createCxfOutboundMessageProcessor(config.getSecurity()));
  chainBuilder.chain(config.createOutboundEndpoint());
  return chainBuilder.build();
}
