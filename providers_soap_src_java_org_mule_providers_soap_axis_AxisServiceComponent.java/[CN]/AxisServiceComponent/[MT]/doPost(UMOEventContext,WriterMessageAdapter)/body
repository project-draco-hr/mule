{
  long t0=0L;
  long t1=0L;
  long t2=0L;
  long t3=0L;
  long t4=0L;
  String soapAction=null;
  AxisEngine engine=getAxisServer();
  if (engine == null) {
    ServletException se=new ServletException(Messages.getMessage("noEngine00"));
    logger.debug("No Engine!",se);
    throw se;
  }
  MessageContext msgContext=new MessageContext(engine);
  if (logger.isDebugEnabled()) {
    logger.debug("Enter: doPost()");
  }
  if (tlog.isDebugEnabled()) {
    t0=System.currentTimeMillis();
  }
  Message responseMsg=null;
  String contentType=null;
  try {
    UMOEndpointURI endpointUri=getEndpoint(context);
    populateMessageContext(msgContext,context,endpointUri);
    if (securityProvider != null) {
      if (logger.isDebugEnabled()) {
        logger.debug("securityProvider:" + securityProvider);
      }
      msgContext.setProperty("securityProvider",securityProvider);
    }
    String request=context.getTransformedMessageAsString();
    Message requestMsg=new Message(request,false,(String)context.getProperty(HTTPConstants.HEADER_CONTENT_TYPE),(String)context.getProperty(HTTPConstants.HEADER_CONTENT_LOCATION));
    if (logger.isDebugEnabled()) {
      logger.debug("Request Message:" + requestMsg);
    }
    msgContext.setRequestMessage(requestMsg);
    msgContext.setProperty("transport.url",endpointUri.toString());
    soapAction=getSoapAction(context);
    if (soapAction != null) {
      msgContext.setUseSOAPAction(true);
      msgContext.setSOAPActionURI(soapAction);
    }
    if (tlog.isDebugEnabled()) {
      t1=System.currentTimeMillis();
    }
    if (logger.isDebugEnabled()) {
      logger.debug("Invoking Axis Engine.");
    }
    engine.invoke(msgContext);
    if (logger.isDebugEnabled()) {
      logger.debug("Return from Axis Engine.");
    }
    if (tlog.isDebugEnabled()) {
      t2=System.currentTimeMillis();
    }
    if (RequestContext.getExceptionPayload() instanceof Exception) {
      throw (Exception)RequestContext.getExceptionPayload().getException();
    }
    responseMsg=msgContext.getResponseMessage();
    if (responseMsg == null)     throw new Exception(Messages.getMessage("noResponse01"));
  }
 catch (  AxisFault fault) {
    processAxisFault(fault);
    configureResponseFromAxisFault(response,fault);
    responseMsg=msgContext.getResponseMessage();
    if (responseMsg == null)     responseMsg=new Message(fault);
  }
catch (  Exception e) {
    responseMsg=msgContext.getResponseMessage();
    response.setProperty(HttpConnector.HTTP_STATUS_PROPERTY,"500");
    responseMsg=convertExceptionToAxisFault(e,responseMsg);
  }
  contentType=responseMsg.getContentType(msgContext.getSOAPConstants());
  if (tlog.isDebugEnabled())   t3=System.currentTimeMillis();
  if (responseMsg != null)   sendResponse((String)context.getProperty(HttpConnector.HTTP_STATUS_PROPERTY),contentType,response,responseMsg);
  if (logger.isDebugEnabled()) {
    logger.debug("Response sent.");
    logger.debug("Exit: doPost()");
  }
  if (tlog.isDebugEnabled()) {
    t4=System.currentTimeMillis();
    tlog.debug("axisServlet.doPost: " + soapAction + " pre="+ (t1 - t0)+ " invoke="+ (t2 - t1)+ " post="+ (t3 - t2)+ " send="+ (t4 - t3)+ " "+ msgContext.getTargetService()+ "."+ (msgContext.getOperation() != null ? msgContext.getOperation().getName() : ""));
  }
}
