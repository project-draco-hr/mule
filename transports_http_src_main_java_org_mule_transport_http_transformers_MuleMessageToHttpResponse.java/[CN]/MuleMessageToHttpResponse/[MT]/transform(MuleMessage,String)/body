{
  Object src=msg.getPayload();
  if (msg.getExceptionPayload() != null) {
  }
  if (src instanceof NullPayload) {
    src=StringUtils.EMPTY;
  }
  try {
    HttpResponse response;
    if (src instanceof HttpResponse) {
      response=(HttpResponse)src;
    }
 else {
      response=createResponse(src,outputEncoding,msg);
    }
    if (!response.containsHeader(HttpConstants.HEADER_CONTENT_TYPE)) {
      response.addHeader(new Header(HttpConstants.HEADER_CONTENT_TYPE,HttpConstants.DEFAULT_CONTENT_TYPE));
    }
    if (!response.containsHeader(HttpConstants.HEADER_CONTENT_LENGTH) && !response.containsHeader(HttpConstants.HEADER_TRANSFER_ENCODING)) {
      if (response.hasBody()) {
        long len=response.getContentLength();
        if (len < 0) {
          if (response.getHttpVersion().lessEquals(HttpVersion.HTTP_1_0)) {
            throw new IOException("Chunked encoding not supported for HTTP version " + response.getHttpVersion());
          }
          Header header=new Header(HttpConstants.HEADER_TRANSFER_ENCODING,"chunked");
          response.addHeader(header);
        }
 else {
          Header header=new Header(HttpConstants.HEADER_CONTENT_LENGTH,Long.toString(len));
          response.setHeader(header);
        }
      }
 else {
        Header header=new Header(HttpConstants.HEADER_CONTENT_LENGTH,"0");
        response.addHeader(header);
      }
    }
    String connHeader=msg.getStringProperty(HttpConstants.HEADER_CONNECTION,null);
    if (connHeader != null) {
      if (connHeader.equalsIgnoreCase("keep-alive")) {
        response.setKeepAlive(true);
      }
      if (connHeader.equalsIgnoreCase("close")) {
        response.setKeepAlive(false);
      }
    }
    if ("HEAD".equalsIgnoreCase(msg.getStringProperty(HttpConnector.HTTP_METHOD_PROPERTY,null))) {
      response.setBody((MuleMessage)null);
    }
    return response;
  }
 catch (  IOException e) {
    throw new TransformerException(this,e);
  }
}
