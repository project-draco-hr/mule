{
  builder.chain(new ServiceLoggingMessageObserver(this));
  builder.chain(new ServiceStatisticsMessageObserver(this));
  builder.chain(new ServiceSetEventRequestContextMessageObserver());
  if (getThreadingProfile().isDoThreading()) {
    builder.chain(new SedaStageInterceptingMessageProcessor(getName(),queueProfile,queueTimeout,new WorkManagerSource(){
      public WorkManager getWorkManager() throws MuleException {
        return workManager;
      }
    }
,lifecycleManager.getState(),stats,muleContext));
  }
  builder.chain(new ServiceInternalMessageProcessor(this));
  if (asyncReplyMessageSource.getEndpoints().size() > 0) {
    builder.chain(createAsyncReplyProcessor());
  }
  builder.chain(new ServiceOutboundMessageProcessor(this));
  builder.chain(new ServiceOutboundStatisticsObserver(this));
  builder.chain(outboundRouter);
}
