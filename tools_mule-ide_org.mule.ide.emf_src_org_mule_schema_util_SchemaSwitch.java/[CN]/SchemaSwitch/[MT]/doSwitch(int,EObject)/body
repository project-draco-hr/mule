{
switch (classifierID) {
case SchemaPackage.AGENTS_TYPE:
{
      AgentsType agentsType=(AgentsType)theEObject;
      Object result=caseAgentsType(agentsType);
      if (result == null)       result=defaultCase(theEObject);
      return result;
    }
case SchemaPackage.AGENT_TYPE:
{
    AgentType agentType=(AgentType)theEObject;
    Object result=caseAgentType(agentType);
    if (result == null)     result=defaultCase(theEObject);
    return result;
  }
case SchemaPackage.CATCH_ALL_STRATEGY_TYPE:
{
  CatchAllStrategyType catchAllStrategyType=(CatchAllStrategyType)theEObject;
  Object result=caseCatchAllStrategyType(catchAllStrategyType);
  if (result == null)   result=defaultCase(theEObject);
  return result;
}
case SchemaPackage.COMPONENT_FACTORY_TYPE:
{
ComponentFactoryType componentFactoryType=(ComponentFactoryType)theEObject;
Object result=caseComponentFactoryType(componentFactoryType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.COMPONENT_LIFECYCLE_ADAPTER_FACTORY_TYPE:
{
ComponentLifecycleAdapterFactoryType componentLifecycleAdapterFactoryType=(ComponentLifecycleAdapterFactoryType)theEObject;
Object result=caseComponentLifecycleAdapterFactoryType(componentLifecycleAdapterFactoryType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.COMPONENT_POOL_FACTORY_TYPE:
{
ComponentPoolFactoryType componentPoolFactoryType=(ComponentPoolFactoryType)theEObject;
Object result=caseComponentPoolFactoryType(componentPoolFactoryType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.CONNECTION_STRATEGY_TYPE:
{
ConnectionStrategyType connectionStrategyType=(ConnectionStrategyType)theEObject;
Object result=caseConnectionStrategyType(connectionStrategyType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.CONNECTOR_TYPE:
{
ConnectorType connectorType=(ConnectorType)theEObject;
Object result=caseConnectorType(connectorType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.CONSTRAINT_TYPE:
{
ConstraintType constraintType=(ConstraintType)theEObject;
Object result=caseConstraintType(constraintType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.CONTAINER_CONTEXT_TYPE:
{
ContainerContextType containerContextType=(ContainerContextType)theEObject;
Object result=caseContainerContextType(containerContextType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.CONTAINER_ENTRY_TYPE:
{
ContainerEntryType containerEntryType=(ContainerEntryType)theEObject;
Object result=caseContainerEntryType(containerEntryType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.CONTAINER_PROPERTY_TYPE:
{
ContainerPropertyType containerPropertyType=(ContainerPropertyType)theEObject;
Object result=caseContainerPropertyType(containerPropertyType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.DOCUMENT_ROOT:
{
DocumentRoot documentRoot=(DocumentRoot)theEObject;
Object result=caseDocumentRoot(documentRoot);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.ENCRYPTION_STRATEGY_TYPE:
{
EncryptionStrategyType encryptionStrategyType=(EncryptionStrategyType)theEObject;
Object result=caseEncryptionStrategyType(encryptionStrategyType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.ENDPOINT_IDENTIFIERS_TYPE:
{
EndpointIdentifiersType endpointIdentifiersType=(EndpointIdentifiersType)theEObject;
Object result=caseEndpointIdentifiersType(endpointIdentifiersType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.ENDPOINT_IDENTIFIER_TYPE:
{
EndpointIdentifierType endpointIdentifierType=(EndpointIdentifierType)theEObject;
Object result=caseEndpointIdentifierType(endpointIdentifierType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.ENDPOINT_TYPE:
{
EndpointType endpointType=(EndpointType)theEObject;
Object result=caseEndpointType(endpointType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.ENTRY_POINT_RESOLVER_TYPE:
{
EntryPointResolverType entryPointResolverType=(EntryPointResolverType)theEObject;
Object result=caseEntryPointResolverType(entryPointResolverType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.ENTRY_TYPE:
{
EntryType entryType=(EntryType)theEObject;
Object result=caseEntryType(entryType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.ENVIRONMENT_PROPERTIES_TYPE:
{
EnvironmentPropertiesType environmentPropertiesType=(EnvironmentPropertiesType)theEObject;
Object result=caseEnvironmentPropertiesType(environmentPropertiesType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.EXCEPTION_STRATEGY_TYPE:
{
ExceptionStrategyType exceptionStrategyType=(ExceptionStrategyType)theEObject;
Object result=caseExceptionStrategyType(exceptionStrategyType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.FACTORY_ENTRY_TYPE:
{
FactoryEntryType factoryEntryType=(FactoryEntryType)theEObject;
Object result=caseFactoryEntryType(factoryEntryType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.FACTORY_PROPERTY_TYPE:
{
FactoryPropertyType factoryPropertyType=(FactoryPropertyType)theEObject;
Object result=caseFactoryPropertyType(factoryPropertyType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.FILE_PROPERTIES_TYPE:
{
FilePropertiesType filePropertiesType=(FilePropertiesType)theEObject;
Object result=caseFilePropertiesType(filePropertiesType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.FILTER_TYPE:
{
FilterType filterType=(FilterType)theEObject;
Object result=caseFilterType(filterType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.GLOBAL_ENDPOINTS_TYPE:
{
GlobalEndpointsType globalEndpointsType=(GlobalEndpointsType)theEObject;
Object result=caseGlobalEndpointsType(globalEndpointsType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.GLOBAL_ENDPOINT_TYPE:
{
GlobalEndpointType globalEndpointType=(GlobalEndpointType)theEObject;
Object result=caseGlobalEndpointType(globalEndpointType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.INBOUND_ROUTER_TYPE:
{
InboundRouterType inboundRouterType=(InboundRouterType)theEObject;
Object result=caseInboundRouterType(inboundRouterType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.INTERCEPTOR_STACK_TYPE:
{
InterceptorStackType interceptorStackType=(InterceptorStackType)theEObject;
Object result=caseInterceptorStackType(interceptorStackType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.INTERCEPTOR_TYPE:
{
InterceptorType interceptorType=(InterceptorType)theEObject;
Object result=caseInterceptorType(interceptorType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.LEFT_FILTER_TYPE:
{
LeftFilterType leftFilterType=(LeftFilterType)theEObject;
Object result=caseLeftFilterType(leftFilterType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.LIST_TYPE:
{
ListType listType=(ListType)theEObject;
Object result=caseListType(listType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.MAP_TYPE:
{
MapType mapType=(MapType)theEObject;
Object result=caseMapType(mapType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.MODEL_TYPE:
{
ModelType modelType=(ModelType)theEObject;
Object result=caseModelType(modelType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.MULE_CONFIGURATION_TYPE:
{
MuleConfigurationType muleConfigurationType=(MuleConfigurationType)theEObject;
Object result=caseMuleConfigurationType(muleConfigurationType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.MULE_DESCRIPTOR_TYPE:
{
MuleDescriptorType muleDescriptorType=(MuleDescriptorType)theEObject;
Object result=caseMuleDescriptorType(muleDescriptorType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.MULE_ENVIRONMENT_PROPERTIES_TYPE:
{
MuleEnvironmentPropertiesType muleEnvironmentPropertiesType=(MuleEnvironmentPropertiesType)theEObject;
Object result=caseMuleEnvironmentPropertiesType(muleEnvironmentPropertiesType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.OUTBOUND_ROUTER_TYPE:
{
OutboundRouterType outboundRouterType=(OutboundRouterType)theEObject;
Object result=caseOutboundRouterType(outboundRouterType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.PERSISTENCE_STRATEGY_TYPE:
{
PersistenceStrategyType persistenceStrategyType=(PersistenceStrategyType)theEObject;
Object result=casePersistenceStrategyType(persistenceStrategyType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.POOLING_PROFILE_TYPE:
{
PoolingProfileType poolingProfileType=(PoolingProfileType)theEObject;
Object result=casePoolingProfileType(poolingProfileType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.PROPERTIES_TYPE:
{
PropertiesType propertiesType=(PropertiesType)theEObject;
Object result=casePropertiesType(propertiesType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.PROPERTY_TYPE:
{
PropertyType propertyType=(PropertyType)theEObject;
Object result=casePropertyType(propertyType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.QUEUE_PROFILE_TYPE:
{
QueueProfileType queueProfileType=(QueueProfileType)theEObject;
Object result=caseQueueProfileType(queueProfileType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.REPLY_TO_TYPE:
{
ReplyToType replyToType=(ReplyToType)theEObject;
Object result=caseReplyToType(replyToType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.RESPONSE_ROUTER_TYPE:
{
ResponseRouterType responseRouterType=(ResponseRouterType)theEObject;
Object result=caseResponseRouterType(responseRouterType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.RIGHT_FILTER_TYPE:
{
RightFilterType rightFilterType=(RightFilterType)theEObject;
Object result=caseRightFilterType(rightFilterType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.ROUTER_TYPE:
{
RouterType routerType=(RouterType)theEObject;
Object result=caseRouterType(routerType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.SECURITY_FILTER_TYPE:
{
SecurityFilterType securityFilterType=(SecurityFilterType)theEObject;
Object result=caseSecurityFilterType(securityFilterType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.SECURITY_MANAGER_TYPE:
{
SecurityManagerType securityManagerType=(SecurityManagerType)theEObject;
Object result=caseSecurityManagerType(securityManagerType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.SECURITY_PROVIDER_TYPE:
{
SecurityProviderType securityProviderType=(SecurityProviderType)theEObject;
Object result=caseSecurityProviderType(securityProviderType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.SYSTEM_ENTRY_TYPE:
{
SystemEntryType systemEntryType=(SystemEntryType)theEObject;
Object result=caseSystemEntryType(systemEntryType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.SYSTEM_PROPERTY_TYPE:
{
SystemPropertyType systemPropertyType=(SystemPropertyType)theEObject;
Object result=caseSystemPropertyType(systemPropertyType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.TEXT_PROPERTY_TYPE:
{
TextPropertyType textPropertyType=(TextPropertyType)theEObject;
Object result=caseTextPropertyType(textPropertyType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.THREADING_PROFILE_TYPE:
{
ThreadingProfileType threadingProfileType=(ThreadingProfileType)theEObject;
Object result=caseThreadingProfileType(threadingProfileType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.TRANSACTION_MANAGER_TYPE:
{
TransactionManagerType transactionManagerType=(TransactionManagerType)theEObject;
Object result=caseTransactionManagerType(transactionManagerType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.TRANSACTION_TYPE:
{
TransactionType transactionType=(TransactionType)theEObject;
Object result=caseTransactionType(transactionType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.TRANSFORMERS_TYPE:
{
TransformersType transformersType=(TransformersType)theEObject;
Object result=caseTransformersType(transformersType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case SchemaPackage.TRANSFORMER_TYPE:
{
TransformerType transformerType=(TransformerType)theEObject;
Object result=caseTransformerType(transformerType);
if (result == null) result=defaultCase(theEObject);
return result;
}
default :
return defaultCase(theEObject);
}
}
