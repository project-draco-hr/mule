{
  final CountDownLatch countDownLatch=new CountDownLatch(2);
  FunctionalTestComponent ftc=getFunctionalTestComponent("consumeFileWithStreamingAndRollback");
  ftc.setEventCallback(new EventCallback(){
    @Override public void eventReceived(    MuleEventContext context,    Object component) throws Exception {
      countDownLatch.countDown();
      throw new RuntimeException();
    }
  }
);
  inputDir=new File(".mule/temp/input-streaming-rollback");
  inputFile=createDataFile(inputDir,"test1.txt");
  if (!countDownLatch.await(RECEIVE_TIMEOUT,TimeUnit.MILLISECONDS)) {
    fail("file should not be consumed");
  }
}
