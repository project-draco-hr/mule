{
  Optional<Dependency> pluginSharedLibDependency=discoverDependency(pluginSharedLibCoords,rootArtifact,directDependencies);
  if (!pluginSharedLibDependency.isPresent() || !pluginSharedLibDependency.get().getScope().equals(TEST)) {
    throw new IllegalStateException("Plugin shared lib artifact '" + pluginSharedLibCoords + "' in order to be resolved has to be declared as "+ TEST+ " dependency of your Maven project ("+ rootArtifact+ ")");
  }
  return pluginSharedLibDependency.get();
}
