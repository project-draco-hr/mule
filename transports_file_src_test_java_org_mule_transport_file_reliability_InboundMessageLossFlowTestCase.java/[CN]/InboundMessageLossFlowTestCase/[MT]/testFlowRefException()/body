{
  if (variant.equals(ConfigVariant.SERVICE)) {
    return;
  }
  final Latch exceptionThrownLatch=new Latch();
  tmpDir=createFolder(getFileInsideWorkingDirectory("flowRefException").getAbsolutePath());
  final File file=createDataFile(tmpDir,"test1.txt");
  FunctionalTestComponent ftc=getFunctionalTestComponent("failingFlow");
  ftc.setEventCallback(new EventCallback(){
    @Override public void eventReceived(    MuleEventContext context,    Object component) throws Exception {
      exceptionThrownLatch.release();
      throw new RuntimeException();
    }
  }
);
  Flow flow=(Flow)getFlowConstruct("FlowRefException");
  flow.stop();
  prober.check(new Probe(){
    @Override public boolean isSatisfied(){
      return file.exists();
    }
    @Override public String describeFailure(){
      return "File should have been restored";
    }
  }
);
}
