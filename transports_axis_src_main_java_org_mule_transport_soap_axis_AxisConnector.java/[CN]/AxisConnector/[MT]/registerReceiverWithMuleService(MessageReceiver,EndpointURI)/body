{
  if (axisComponent == null) {
    axisComponent=getOrCreateAxisComponent();
  }
 else {
    muleContext.getRegistry().unregisterService(AXIS_SERVICE_PROPERTY + getName());
  }
  String serviceName=((AxisMessageReceiver)receiver).getSoapService().getName();
  String endpoint;
  String scheme=ep.getScheme().toLowerCase();
  if (scheme.equals("jms") || scheme.equals("vm") || scheme.equals("servlet")) {
    endpoint=ep.toString();
  }
 else {
    endpoint=receiver.getEndpointURI().getAddress() + "/" + serviceName;
  }
  if (logger.isDebugEnabled()) {
    logger.debug("Modified endpoint with " + scheme + " scheme to "+ endpoint);
  }
  EndpointBuilder serviceEndpointbuilder=new EndpointURIEndpointBuilder(endpoint,muleContext);
  serviceEndpointbuilder.setExchangePattern(receiver.getEndpoint().getExchangePattern());
  serviceEndpointbuilder.setName(ep.getScheme() + ":" + serviceName);
  serviceEndpointbuilder.setTransformers(receiver.getEndpoint().getTransformers().isEmpty() ? null : receiver.getEndpoint().getTransformers());
  serviceEndpointbuilder.setResponseTransformers(receiver.getEndpoint().getResponseTransformers().isEmpty() ? null : receiver.getEndpoint().getResponseTransformers());
  serviceEndpointbuilder.addMessageProcessor(new MessageFilter(receiver.getEndpoint().getFilter()));
  serviceEndpointbuilder.setSecurityFilter(receiver.getEndpoint().getSecurityFilter());
  AbstractEndpointBuilder receiverEndpointBuilder=new EndpointURIEndpointBuilder(receiver.getEndpoint());
  List<MessageProcessor> procs=receiverEndpointBuilder.getMessageProcessors();
  CollectionUtils.removeType(procs,MessageFilter.class);
  CollectionUtils.removeType(procs,EndpointSecurityFilter.class);
  receiverEndpointBuilder.setMessageProcessors(procs);
  receiverEndpointBuilder.setSecurityFilter(null);
  InboundEndpoint serviceEndpoint=muleContext.getRegistry().lookupEndpointFactory().getInboundEndpoint(serviceEndpointbuilder);
  InboundEndpoint receiverEndpoint=muleContext.getRegistry().lookupEndpointFactory().getInboundEndpoint(receiverEndpointBuilder);
  receiver.setEndpoint(receiverEndpoint);
  axisComponent.getMessageSource().addSource(serviceEndpoint);
}
