{
  getMuleContextForApp(CLIENT_APP).getClient().dispatch(queueAddress(inQueue),InternalMessage.builder().payload("test").build());
  final AtomicReference<InternalMessage> response=new AtomicReference<>();
  new PollingProber(10000,100).check(new Probe(){
    @Override public boolean isSatisfied(){
      InternalMessage responseMessage=null;
      try {
        Either<Error,Optional<InternalMessage>> result=getMuleContextForApp(CLIENT_APP).getClient().request(queueAddress(outQueue),10);
        if (result.getRight().isPresent()) {
          responseMessage=result.getRight().get();
        }
      }
 catch (      MuleException e) {
        throw new RuntimeException(e);
      }
      if (responseMessage != null) {
        response.set(responseMessage);
        return true;
      }
      return false;
    }
    @Override public String describeFailure(){
      return "response message never arrived";
    }
  }
);
  assertThat(getPayloadAsString(response.get(),getMuleContextForApp(CLIENT_APP)),is("works"));
}
