{
  MessageExpressionEvaluator eval=new MessageExpressionEvaluator();
  MuleMessage message=new DefaultMuleMessage("test");
  message.setCorrelationId(message.getUniqueId());
  message.setCorrelationSequence(1);
  message.setCorrelationGroupSize(2);
  message.setReplyTo("foo");
  message.setEncoding("UTF-8");
  Exception e=new Exception("dummy");
  message.setExceptionPayload(new DefaultExceptionPayload(e));
  Object result=eval.evaluate(null,message);
  assertNotNull(result);
  assertEquals(message,result);
  result=eval.evaluate(null,new ArrayList(1));
  assertNotNull(result);
  assertTrue(result instanceof List);
  result=eval.evaluate(null,null);
  assertNull(result);
  assertEquals(message.getUniqueId(),eval.evaluate("id",message));
  assertEquals(message.getUniqueId(),eval.evaluate("correlationId",message));
  assertEquals(new Integer(1),eval.evaluate("correlationSequence",message));
  assertEquals(new Integer(2),eval.evaluate("correlationGroupSize",message));
  assertEquals("foo",eval.evaluate("replyTo",message));
  assertEquals(e,eval.evaluate("exception",message));
  assertEquals("UTF-8",eval.evaluate("encoding",message));
  assertEquals("test",eval.evaluate("payload",message));
  try {
    eval.evaluate("xxx",message);
    fail("xxx is not a supported expresion");
  }
 catch (  Exception e1) {
  }
}
