{
  MuleContext context;
  if (isDisposeContextPerClass() && muleContext != null) {
    context=muleContext;
  }
 else {
    final ClassLoader executionClassLoader=getExecutionClassLoader();
    final ClassLoader originalContextClassLoader=Thread.currentThread().getContextClassLoader();
    try {
      Thread.currentThread().setContextClassLoader(executionClassLoader);
      MuleContextFactory muleContextFactory=new DefaultMuleContextFactory();
      List<ConfigurationBuilder> builders=new ArrayList<>();
      builders.add(new SimpleConfigurationBuilder(getStartUpProperties()));
      builders.add(getBuilder());
      addBuilders(builders);
      MuleContextBuilder contextBuilder=new DefaultMuleContextBuilder();
      DefaultMuleConfiguration muleConfiguration=new DefaultMuleConfiguration();
      String workingDirectory=this.workingDirectory.getRoot().getAbsolutePath();
      logger.info("Using working directory for test: " + workingDirectory);
      muleConfiguration.setWorkingDirectory(workingDirectory);
      contextBuilder.setMuleConfiguration(muleConfiguration);
      contextBuilder.setExecutionClassLoader(executionClassLoader);
      configureMuleContext(contextBuilder);
      context=muleContextFactory.createMuleContext(builders,contextBuilder);
      if (!isGracefulShutdown()) {
        ((DefaultMuleConfiguration)context.getConfiguration()).setShutdownTimeout(0);
      }
    }
  finally {
      Thread.currentThread().setContextClassLoader(originalContextClassLoader);
    }
  }
  return context;
}
