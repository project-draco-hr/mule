{
  this.systemProperties=properties;
  String value;
  Map.Entry entry;
  if (systemProperties != null) {
    for (Iterator iterator=systemProperties.entrySet().iterator(); iterator.hasNext(); ) {
      entry=(Map.Entry)iterator.next();
      value=entry.getValue().toString();
      value=templateParser.parse(systemProperties,value);
      value=templateParser.parse((Map)managementContext.getRegistry().lookupObject(MuleProperties.OBJECT_MULE_APPLICATION_PROPERTIES),value);
      System.setProperty(entry.getKey().toString(),value);
    }
  }
  if (includeSystemProperties) {
    Map props=System.getProperties();
    for (Iterator iterator=props.entrySet().iterator(); iterator.hasNext(); ) {
      entry=(Map.Entry)iterator.next();
      value=entry.getValue().toString();
      value=templateParser.parse((Map)managementContext.getRegistry().lookupObject(MuleProperties.OBJECT_MULE_APPLICATION_PROPERTIES),value.toString());
      try {
        Map muleProps=((Map)managementContext.getRegistry().lookupObject(MuleProperties.OBJECT_MULE_APPLICATION_PROPERTIES));
        if (muleProps == null) {
          muleProps=new HashMap();
          muleProps.put(entry.getKey(),value);
          managementContext.getRegistry().registerObject(MuleProperties.OBJECT_MULE_APPLICATION_PROPERTIES,muleProps,managementContext);
        }
 else {
          muleProps.put(entry.getKey(),value);
        }
      }
 catch (      RegistrationException e) {
        logger.error(e);
      }
    }
  }
}
