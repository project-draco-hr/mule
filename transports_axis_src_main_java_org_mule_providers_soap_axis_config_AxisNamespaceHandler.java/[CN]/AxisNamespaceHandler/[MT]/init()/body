{
  registerMuleBeanDefinitionParser("endpoint",new TransportGlobalEndpointDefinitionParser(AxisConnector.AXIS,TransportGlobalEndpointDefinitionParser.META,false,new String[]{},new String[]{})).addMapping(AxisConnector.USE,USE_MAP).addMapping(AxisConnector.STYLE,STYLE_MAP).addAlias(SoapConstants.SOAP_ACTION_PROPERTY,SoapConstants.SOAP_ACTION_PROPERTY_CAPS);
  registerMuleBeanDefinitionParser("inbound-endpoint",new TransportEndpointDefinitionParser(AxisConnector.AXIS,TransportGlobalEndpointDefinitionParser.META,false,InboundEndpointFactoryBean.class,new String[]{},new String[]{})).addMapping(AxisConnector.USE,USE_MAP).addMapping(AxisConnector.STYLE,STYLE_MAP).addAlias(SoapConstants.SOAP_ACTION_PROPERTY,SoapConstants.SOAP_ACTION_PROPERTY_CAPS);
  registerMuleBeanDefinitionParser("outbound-endpoint",new TransportEndpointDefinitionParser(AxisConnector.AXIS,TransportGlobalEndpointDefinitionParser.META,false,OutboundEndpointFactoryBean.class,new String[]{},new String[]{})).addMapping(AxisConnector.USE,USE_MAP).addMapping(AxisConnector.STYLE,STYLE_MAP).addAlias(SoapConstants.SOAP_ACTION_PROPERTY,SoapConstants.SOAP_ACTION_PROPERTY_CAPS);
  registerBeanDefinitionParser("connector",new MuleOrphanDefinitionParser(AxisConnector.class,true));
  registerBeanDefinitionParser("supported-scheme",new ChildListEntryDefinitionParser("supportedSchemes","value"));
  registerBeanDefinitionParser("soap-method",new ElementInNestedMapDefinitionParser(PROPERTIES,AxisConnector.SOAP_METHODS,"method"));
  registerBeanDefinitionParser("soap-parameter",new SoapParameterDefinitionParser());
  registerBeanDefinitionParser("soap-return",new SoapReturnDefinitionParser());
  registerMuleBeanDefinitionParser("soap-service",new NestedListDefinitionParser(PROPERTIES,SoapConstants.SERVICE_INTERFACES,"interface"));
  registerMuleBeanDefinitionParser("options",new NestedMapWithAttributesDefinitionParser(PROPERTIES,AxisMessageReceiver.AXIS_OPTIONS));
  registerMuleBeanDefinitionParser("option",new SimplePropertyDefinitionParser());
  registerMuleBeanDefinitionParser("bean-type",new ParentContextDefinitionParser("connector",new ChildListEntryDefinitionParser(AxisMessageReceiver.BEAN_TYPES,"interface")).otherwise(new NestedListDefinitionParser(PROPERTIES,AxisMessageReceiver.BEAN_TYPES,"interface")));
}
