{
  final DataType expectedDataType=DataType.builder().type(Map.class).mediaType(UNKNOWN).charset(CUSTOM_ENCODING).build();
  MuleEvent testEvent=getTestEvent(TEST_MESSAGE);
  final Map<String,String> propertyValue=new HashMap<>();
  propertyValue.put(INNER_PROPERTY_NAME,TEST_MESSAGE);
  testEvent=setVariable(testEvent,propertyValue,expectedDataType);
  CompiledExpression compiledExpression=compileMelExpression(expression,testEvent);
  dataTypePropagator.propagate(testEvent,new TypedValue(propertyValue,DataType.STRING),compiledExpression);
  assertThat(getVariableDataType(testEvent),like(Map.class,UNKNOWN,CUSTOM_ENCODING));
}
