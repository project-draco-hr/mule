{
  final DataType expectedDataType=DataType.builder().type(Map.class).mediaType(UNKNOWN).charset(CUSTOM_ENCODING).build();
  final Map<String,String> propertyValue=new HashMap<>();
  propertyValue.put(INNER_PROPERTY_NAME,TEST_MESSAGE);
  Event event=setVariable(testEvent(),propertyValue,expectedDataType);
  final Builder builder=Event.builder(event);
  CompiledExpression compiledExpression=compileMelExpression(expression,event,builder);
  event=builder.build();
  dataTypePropagator.propagate(event,builder,new DefaultTypedValue<>(propertyValue,DataType.STRING),compiledExpression);
  event=builder.build();
  assertThat(getVariableDataType(event),like(Map.class,UNKNOWN,CUSTOM_ENCODING));
}
