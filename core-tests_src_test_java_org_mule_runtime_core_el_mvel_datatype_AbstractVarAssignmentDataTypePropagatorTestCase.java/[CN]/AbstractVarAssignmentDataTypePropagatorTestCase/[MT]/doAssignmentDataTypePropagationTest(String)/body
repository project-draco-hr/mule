{
  DataType expectedDataType=DataType.builder().type(String.class).mediaType(JSON).charset(CUSTOM_ENCODING).build();
  final Builder builder=Event.builder(testEvent());
  CompiledExpression compiledExpression=compileMelExpression(expression,testEvent(),builder);
  Event event=builder.build();
  dataTypePropagator.propagate(event,builder,new DefaultTypedValue<>(TEST_MESSAGE,expectedDataType),compiledExpression);
  event=builder.build();
  assertThat(getVariableDataType(event),like(String.class,JSON,CUSTOM_ENCODING));
}
