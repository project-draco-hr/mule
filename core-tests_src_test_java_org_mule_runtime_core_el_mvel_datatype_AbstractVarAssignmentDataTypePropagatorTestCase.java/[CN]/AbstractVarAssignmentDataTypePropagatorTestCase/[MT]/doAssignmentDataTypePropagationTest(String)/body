{
  DataType<String> expectedDataType=DataType.builder().type(String.class).mimeType(JSON).encoding(CUSTOM_ENCODING).build();
  MuleEvent testEvent=getTestEvent(TEST_MESSAGE);
  CompiledExpression compiledExpression=compileMelExpression(expression,testEvent);
  dataTypePropagator.propagate(testEvent,new TypedValue(TEST_MESSAGE,expectedDataType),compiledExpression);
  assertThat(getVariableDataType(testEvent),like(String.class,JSON,CUSTOM_ENCODING));
}
