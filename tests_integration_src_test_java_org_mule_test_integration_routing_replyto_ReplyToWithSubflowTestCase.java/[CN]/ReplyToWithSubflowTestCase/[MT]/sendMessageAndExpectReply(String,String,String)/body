{
  final CountDownLatch subFlowLatch=new CountDownLatch(1);
  getFunctionalTestComponent(flow).setEventCallback(new EventCallback(){
    @Override public void eventReceived(    MuleEventContext context,    Object component) throws Exception {
      subFlowLatch.countDown();
    }
  }
);
  MuleMessage message=new DefaultMuleMessage(TEST_MESSAGE,muleContext);
  message.setReplyTo(OUTPUT_QUEUE);
  muleContext.getClient().dispatch(path,message);
  message=muleContext.getClient().request(OUTPUT_QUEUE,RECEIVE_TIMEOUT);
  assertNotNull("Message was not received",message);
  assertEquals(expectedMessage,message.getPayload());
  subFlowLatch.await(LOCK_TIMEOUT,TimeUnit.MILLISECONDS);
  message=muleContext.getClient().request(OUTPUT_QUEUE,DUPLICATE_RESPONSE_TIMEOUT);
  assertNull("Response was received twice",message);
}
