{
  UMOMessage resultToReturn=null;
  final int endpointsCount=endpoints.size();
  if (endpoints == null || endpointsCount == 0) {
    throw new RoutePathNotFoundException(new Message(Messages.NO_ENDPOINTS_FOR_ROUTER),message,null);
  }
  logger.debug("About to chain " + endpointsCount + " endpoints.");
  UMOEndpoint endpoint=null;
  try {
    UMOMessage intermediaryResult=message;
    for (int i=0; i < endpointsCount; i++) {
      endpoint=getEndpoint(i,intermediaryResult);
      boolean lastEndpointInChain=(i == endpointsCount - 1);
      if (logger.isDebugEnabled()) {
        logger.debug("Sending Chained message '" + i + "': "+ (intermediaryResult == null ? "null" : intermediaryResult.toString()));
      }
      if (!lastEndpointInChain) {
        UMOMessage tempResult=send(session,intermediaryResult,endpoint);
        if (tempResult != null) {
          tempResult.setCorrelationId(intermediaryResult.getCorrelationId());
          tempResult.setCorrelationSequence(intermediaryResult.getCorrelationSequence());
          tempResult.setCorrelationGroupSize(intermediaryResult.getCorrelationGroupSize());
          tempResult.setReplyTo(intermediaryResult.getReplyTo());
        }
        intermediaryResult=tempResult;
        if (logger.isDebugEnabled()) {
          logger.debug("Received Chain result '" + i + "': "+ (intermediaryResult == null ? "null" : intermediaryResult.toString()));
        }
        if (intermediaryResult == null) {
          logger.warn("Chaining router cannot process any further endpoints. " + "There was no result returned from endpoint invocation: " + endpoint);
          break;
        }
      }
 else {
        if (synchronous) {
          resultToReturn=send(session,intermediaryResult,endpoint);
          if (logger.isDebugEnabled()) {
            logger.debug("Received final Chain result '" + i + "': "+ (resultToReturn == null ? "null" : resultToReturn.toString()));
          }
        }
 else {
          resultToReturn=null;
          dispatch(session,intermediaryResult,endpoint);
        }
      }
    }
  }
 catch (  UMOException e) {
    throw new CouldNotRouteOutboundMessageException(message,endpoint,e);
  }
  return resultToReturn;
}
