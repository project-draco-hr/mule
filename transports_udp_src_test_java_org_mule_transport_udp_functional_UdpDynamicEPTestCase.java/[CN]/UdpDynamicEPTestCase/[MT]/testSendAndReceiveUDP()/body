{
  int outPort=61000;
  DatagramSocket socket=null;
  try {
    socket=new DatagramSocket();
    ByteArrayOutputStream bytesOut=new ByteArrayOutputStream();
    DataOutputStream dataOut=new DataOutputStream(bytesOut);
    dataOut.writeFloat(1.0f);
    dataOut.writeFloat(2.0f);
    byte[] bytesToSend=bytesOut.toByteArray();
    DatagramPacket outboundPacket=new DatagramPacket(bytesToSend,bytesToSend.length,NetworkUtils.getLocalHost(),outPort);
    socket.send(outboundPacket);
    byte[] receiveBuffer=new byte[bytesToSend.length];
    DatagramPacket inboundPacket=new DatagramPacket(receiveBuffer,receiveBuffer.length);
    socket.receive(inboundPacket);
    assertEquals(Arrays.toString(outboundPacket.getData()),Arrays.toString(inboundPacket.getData()));
    ByteArrayInputStream bytesIn=new ByteArrayInputStream(inboundPacket.getData());
    DataInputStream dataIn=new DataInputStream(bytesIn);
    assertEquals(1.0f,dataIn.readFloat(),0.1f);
    assertEquals(2.0f,dataIn.readFloat(),0.1f);
  }
  finally {
    try {
      if (socket != null) {
        socket.close();
      }
      socket=null;
    }
 catch (    Exception e) {
      e.printStackTrace();
    }
  }
  CustomUdpConnector udpConnector=(CustomUdpConnector)muleContext.getRegistry().lookupConnector("connector.udp.0");
  ConfigurableKeyedObjectPool pool=udpConnector.getDispatchers();
  assertEquals(0,pool.getNumActive());
}
