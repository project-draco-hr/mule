{
  ConnectionHandlingStrategyFactory factoryDecorator=new ConnectionHandlingStrategyFactory(){
    @Override public ConnectionHandlingStrategy supportsPooling(    PoolingProfile defaultPoolingProfile){
      return handlingStrategyFactory.supportsPooling(resolvePoolingProfile(defaultPoolingProfile));
    }
    @Override public ConnectionHandlingStrategy requiresPooling(    PoolingProfile defaultPoolingProfile){
      return handlingStrategyFactory.requiresPooling(resolvePoolingProfile(defaultPoolingProfile));
    }
    @Override public ConnectionHandlingStrategy cached(){
      return handlingStrategyFactory.cached();
    }
    @Override public ConnectionHandlingStrategy none(){
      return handlingStrategyFactory.none();
    }
    private PoolingProfile resolvePoolingProfile(    PoolingProfile defaultPoolingProfile){
      return poolingProfile != null ? poolingProfile : defaultPoolingProfile;
    }
  }
;
  return super.getHandlingStrategy(factoryDecorator);
}
