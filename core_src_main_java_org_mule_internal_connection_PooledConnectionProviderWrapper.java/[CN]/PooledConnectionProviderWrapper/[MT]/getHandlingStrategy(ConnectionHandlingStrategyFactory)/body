{
  ConnectionHandlingStrategyFactory factoryDecorator=new ConnectionHandlingStrategyFactoryWrapper(handlingStrategyFactory){
    public ConnectionHandlingStrategy supportsPooling(    PoolingProfile defaultPoolingProfile,    PoolingListener poolingListener){
      return super.supportsPooling(resolvePoolingProfile(defaultPoolingProfile),poolingListener);
    }
    @Override public ConnectionHandlingStrategy supportsPooling(    PoolingProfile defaultPoolingProfile){
      return super.supportsPooling(resolvePoolingProfile(defaultPoolingProfile));
    }
    @Override public ConnectionHandlingStrategy requiresPooling(    PoolingProfile defaultPoolingProfile,    PoolingListener poolingListener){
      return super.requiresPooling(resolvePoolingProfile(defaultPoolingProfile),poolingListener);
    }
    @Override public ConnectionHandlingStrategy requiresPooling(    PoolingProfile defaultPoolingProfile){
      return super.requiresPooling(resolvePoolingProfile(defaultPoolingProfile));
    }
    private PoolingProfile resolvePoolingProfile(    PoolingProfile defaultPoolingProfile){
      return poolingProfile != null ? poolingProfile : defaultPoolingProfile;
    }
  }
;
  return super.getHandlingStrategy(factoryDecorator);
}
