{
  final LocalComplexType collectionComplexType=new LocalComplexType();
  final ExplicitGroup sequence=new ExplicitGroup();
  collectionComplexType.setSequence(sequence);
  final TopLevelElement collectionItemElement=createTopLevelElement(name,ZERO,SchemaConstants.UNBOUNDED);
  final DataType genericType=getFirstGenericType(type);
  genericType.getQualifier().accept(new AbstractDataQualifierVisitor(){
    @Override public void onPojo(){
      collectionItemElement.setComplexType(newLocalComplexTypeWithBase(genericType,description));
    }
    @Override protected void defaultOperation(){
      LocalComplexType complexType=new LocalComplexType();
      complexType.getAttributeOrAttributeGroup().add(createAttribute(ATTRIBUTE_NAME_VALUE,genericType,true,SUPPORTED));
      collectionItemElement.setComplexType(complexType);
    }
  }
);
  sequence.getParticle().add(objectFactory.createElement(collectionItemElement));
  return collectionComplexType;
}
