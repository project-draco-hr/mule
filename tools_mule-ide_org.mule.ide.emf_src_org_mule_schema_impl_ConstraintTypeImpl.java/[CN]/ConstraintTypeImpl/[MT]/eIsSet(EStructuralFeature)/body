{
switch (eDerivedStructuralFeatureID(eFeature)) {
case SchemaPackage.CONSTRAINT_TYPE__MIXED:
    return mixed != null && !mixed.isEmpty();
case SchemaPackage.CONSTRAINT_TYPE__LEFT_FILTER:
  return getLeftFilter() != null;
case SchemaPackage.CONSTRAINT_TYPE__RIGHT_FILTER:
return getRightFilter() != null;
case SchemaPackage.CONSTRAINT_TYPE__FILTER:
return getFilter() != null;
case SchemaPackage.CONSTRAINT_TYPE__BATCH_SIZE:
return BATCH_SIZE_EDEFAULT == null ? batchSize != null : !BATCH_SIZE_EDEFAULT.equals(batchSize);
case SchemaPackage.CONSTRAINT_TYPE__CLASS_NAME:
return CLASS_NAME_EDEFAULT == null ? className != null : !CLASS_NAME_EDEFAULT.equals(className);
case SchemaPackage.CONSTRAINT_TYPE__EXPECTED_TYPE:
return EXPECTED_TYPE_EDEFAULT == null ? expectedType != null : !EXPECTED_TYPE_EDEFAULT.equals(expectedType);
case SchemaPackage.CONSTRAINT_TYPE__EXPRESSION:
return EXPRESSION_EDEFAULT == null ? expression != null : !EXPRESSION_EDEFAULT.equals(expression);
case SchemaPackage.CONSTRAINT_TYPE__FREQUENCY:
return FREQUENCY_EDEFAULT == null ? frequency != null : !FREQUENCY_EDEFAULT.equals(frequency);
case SchemaPackage.CONSTRAINT_TYPE__PATH:
return PATH_EDEFAULT == null ? path != null : !PATH_EDEFAULT.equals(path);
case SchemaPackage.CONSTRAINT_TYPE__PATTERN:
return PATTERN_EDEFAULT == null ? pattern != null : !PATTERN_EDEFAULT.equals(pattern);
}
return eDynamicIsSet(eFeature);
}
