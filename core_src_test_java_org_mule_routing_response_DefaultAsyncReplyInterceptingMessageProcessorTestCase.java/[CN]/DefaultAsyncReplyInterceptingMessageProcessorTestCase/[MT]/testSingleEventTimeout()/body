{
  AsyncReplyInterceptingMessageProcessor asyncReplyMP=new DefaultAsyncReplyInterceptingMessageProcessor(1);
  SensingNullMessageProcessor target=getSensingNullMessageProcessor();
  target.setWaitTime(50);
  AsyncInterceptingMessageProcessor asyncMP=new AsyncInterceptingMessageProcessor(new WorkManagerSource(){
    public WorkManager getWorkManager() throws MuleException {
      return muleContext.getWorkManager();
    }
  }
,true,DefaultAsyncReplyInterceptingMessageProcessorTestCase.this);
  asyncMP.setListener(target);
  asyncReplyMP.setListener(asyncMP);
  asyncReplyMP.setReplySource(target.getMessageSource());
  MuleEvent event=getTestEvent(TEST_MESSAGE,(Service)null,getTestInboundEndpoint(MessageExchangePattern.ONE_WAY));
  try {
    asyncReplyMP.process(event);
    fail("ResponseTimeoutException expected");
  }
 catch (  Exception e) {
    assertEquals(ResponseTimeoutException.class,e.getClass());
  }
}
