{
  if (initialised.get()) {
    throw new InitialisationException(new Message(Messages.OBJECT_X_ALREADY_INITIALSIED,"Component '" + descriptor.getName() + "'"),this);
  }
  descriptor.initialise();
  this.exceptionListener=descriptor.getExceptionListener();
  stats=new ComponentStatistics(getName(),descriptor.getPoolingProfile().getMaxActive(),descriptor.getThreadingProfile().getMaxThreadsActive());
  stats.setEnabled(((MuleManager)MuleManager.getInstance()).getStatistics().isEnabled());
  ((MuleManager)MuleManager.getInstance()).getStatistics().add(stats);
  stats.setOutboundRouterStat(getDescriptor().getOutboundRouter().getStatistics());
  stats.setInboundRouterStat(getDescriptor().getInboundRouter().getStatistics());
  ThreadingProfile tp=descriptor.getThreadingProfile();
  workManager=tp.createWorkManager(descriptor.getName());
  try {
    queue=descriptor.getQueueProfile().createQueue(descriptor.getName());
    queue.setDeleteOnTake(false);
    qProfile=descriptor.getQueueProfile();
  }
 catch (  InitialisationException e) {
    throw e;
  }
catch (  Throwable e) {
    throw new InitialisationException(new Message(Messages.X_FAILED_TO_INITIALISE,"Compoennt Queue"),e,this);
  }
  initialised.set(true);
  model.fireEvent(new ComponentEvent(descriptor,ComponentEvent.COMPONENT_INITIALISED));
}
