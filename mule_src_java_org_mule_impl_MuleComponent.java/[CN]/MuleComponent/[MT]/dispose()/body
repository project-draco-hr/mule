{
  try {
    if (!stopped.get())     stop();
  }
 catch (  UMOException e) {
    logger.error("Failed to stop component: " + descriptor.getName(),e);
  }
  try {
    if (queue != null)     queue.dispose();
  }
 catch (  Exception e) {
    logger.error("Persistent Queue did not close properly: " + e);
  }
  try {
    if (threadPool != null)     threadPool.shutdownNow();
  }
 catch (  Exception e) {
    logger.error("Component Thread Pool did not close properly: " + e);
  }
  try {
    if (proxyPool != null)     proxyPool.clearPool();
  }
 catch (  Exception e) {
    logger.error("Proxy Pool did not close properly: " + e);
  }
  model.fireEvent(new ComponentEvent(descriptor,ComponentEvent.COMPONENT_DISPOSED));
  ((MuleManager)MuleManager.getInstance()).getStatistics().remove(stats);
}
