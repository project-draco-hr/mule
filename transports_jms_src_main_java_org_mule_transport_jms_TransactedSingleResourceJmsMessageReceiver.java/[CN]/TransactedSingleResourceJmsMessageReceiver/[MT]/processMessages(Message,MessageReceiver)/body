{
  TransactionTemplate<Void> tt=TransactionTemplateFactory.<Void>createMainTransactionTemplate(endpoint.getTransactionConfig(),connector.getMuleContext());
  final String encoding=endpoint.getEncoding();
  if (receiveMessagesInTransaction) {
    TransactionCallback<Void> cb=new MessageTransactionCallback<Void>(message){
      public Void doInTransaction() throws Exception {
        Transaction tx=TransactionCoordination.getInstance().getTransaction();
        if (tx != null) {
          tx.bindResource(connector.getConnection(),ReusableSessionWrapperFactory.createWrapper(session));
        }
        if (tx instanceof JmsClientAcknowledgeTransaction) {
          tx.bindResource(message,message);
        }
        if (logger.isDebugEnabled()) {
          logger.debug("Message received it is of type: " + ClassUtils.getSimpleName(message.getClass()));
          if (message.getJMSDestination() != null) {
            logger.debug("Message received on " + message.getJMSDestination() + " ("+ message.getJMSDestination().getClass().getName()+ ")");
          }
 else {
            logger.debug("Message received on unknown destination");
          }
          logger.debug("Message CorrelationId is: " + message.getJMSCorrelationID());
          logger.debug("Jms Message Id is: " + message.getJMSMessageID());
        }
        if (message.getJMSRedelivered()) {
          if (logger.isDebugEnabled()) {
            logger.debug("Message with correlationId: " + message.getJMSCorrelationID() + " is redelivered. handing off to Exception Handler");
          }
          redeliveryHandler.handleRedelivery(message,receiver.getEndpoint(),receiver.getFlowConstruct());
        }
        MuleMessage messageToRoute=createMuleMessage(message,encoding);
        routeMessage(messageToRoute);
        return null;
      }
    }
;
    tt.execute(cb);
  }
 else {
    MuleMessage messageToRoute=createMuleMessage(message,encoding);
    routeMessage(messageToRoute);
  }
}
