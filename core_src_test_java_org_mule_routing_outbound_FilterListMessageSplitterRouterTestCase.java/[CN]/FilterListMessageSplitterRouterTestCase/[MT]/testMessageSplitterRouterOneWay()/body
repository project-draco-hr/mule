{
  OutboundEndpoint endpoint1=getTestOutboundEndpoint("Test1endpoint","test://endpointUri.1",null,new PayloadTypeFilter(Apple.class),null);
  OutboundEndpoint mockendpoint1=RouterTestUtils.createMockEndpoint(endpoint1);
  OutboundEndpoint endpoint2=getTestOutboundEndpoint("Test2Endpoint","test://endpointUri.2",null,new PayloadTypeFilter(Orange.class),null);
  OutboundEndpoint mockendpoint2=RouterTestUtils.createMockEndpoint(endpoint2);
  OutboundEndpoint endpoint3=getTestOutboundEndpoint("Test3Endpoint","test://endpointUri.3");
  OutboundEndpoint mockendpoint3=RouterTestUtils.createMockEndpoint(endpoint3);
  ListMessageSplitter router=createObject(ListMessageSplitter.class);
  router.setFilter(new PayloadTypeFilter(List.class));
  router.addRoute(mockendpoint1);
  router.addRoute(mockendpoint2);
  router.addRoute(mockendpoint3);
  MuleMessage message=new DefaultMuleMessage(payload,muleContext);
  assertTrue(router.isMatch(message));
  when(mockendpoint1.process(any(MuleEvent.class))).thenAnswer(new MuleEventCheckAnswer());
  when(mockendpoint2.process(any(MuleEvent.class))).thenAnswer(new MuleEventCheckAnswer());
  when(mockendpoint3.process(any(MuleEvent.class))).thenAnswer(new MuleEventCheckAnswer());
  router.route(new OutboundRoutingTestEvent(message,session,muleContext));
}
