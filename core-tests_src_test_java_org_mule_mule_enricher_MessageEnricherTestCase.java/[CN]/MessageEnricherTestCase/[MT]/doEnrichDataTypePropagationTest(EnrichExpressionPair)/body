{
  final DataType<?> dataType=DataTypeFactory.create(String.class,JSON);
  dataType.setEncoding(StandardCharsets.UTF_16.name());
  MessageEnricher enricher=new MessageEnricher();
  enricher.setMuleContext(muleContext);
  enricher.addEnrichExpressionPair(pair);
  enricher.setEnrichmentMessageProcessor(new MessageProcessor(){
    @Override public MuleEvent process(    MuleEvent event) throws MuleException {
      event.getMessage().setPayload("bar",dataType);
      return event;
    }
  }
);
  MuleEvent in=getTestEvent("");
  MuleEvent out=enricher.process(in);
  assertEquals("bar",out.getMessage().getInvocationProperty("foo"));
  assertThat(out.getMessage().getPropertyDataType("foo",PropertyScope.INVOCATION),DataTypeMatcher.like(String.class,JSON,StandardCharsets.UTF_16.name()));
}
