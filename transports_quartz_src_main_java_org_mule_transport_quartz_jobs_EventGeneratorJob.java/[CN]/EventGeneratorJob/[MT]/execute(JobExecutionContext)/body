{
  MuleContext muleContext;
  try {
    muleContext=(MuleContext)jobExecutionContext.getScheduler().getContext().get(MuleProperties.MULE_CONTEXT_PROPERTY);
  }
 catch (  SchedulerException e) {
    throw new JobExecutionException("Failed to retrieve Mulecontext from the Scheduler Context: " + e.getMessage(),e);
  }
  JobDataMap map=jobExecutionContext.getJobDetail().getJobDataMap();
  String receiverKey=(String)map.get(QuartzMessageReceiver.QUARTZ_RECEIVER_PROPERTY);
  if (receiverKey == null) {
    throw new JobExecutionException(QuartzMessages.receiverNotInJobDataMap().getMessage());
  }
  String connectorName=(String)map.get(QuartzMessageReceiver.QUARTZ_CONNECTOR_PROPERTY);
  if (connectorName == null) {
    throw new JobExecutionException(QuartzMessages.connectorNotInJobDataMap().getMessage());
  }
  AbstractConnector connector=(AbstractConnector)muleContext.getRegistry().lookupConnector(connectorName);
  if (connector == null) {
    throw new JobExecutionException(QuartzMessages.noConnectorFound(connectorName).getMessage());
  }
  AbstractMessageReceiver receiver=(AbstractMessageReceiver)connector.lookupReceiver(receiverKey);
  if (receiver == null) {
    throw new JobExecutionException(QuartzMessages.noReceiverInConnector(receiverKey,connectorName).getMessage());
  }
  Object payload=jobExecutionContext.getJobDetail().getJobDataMap().get(QuartzConnector.PROPERTY_PAYLOAD);
  try {
    if (payload == null) {
      String ref=jobExecutionContext.getJobDetail().getJobDataMap().getString(QuartzConnector.PROPERTY_PAYLOAD);
      if (ref == null) {
        payload=NullPayload.getInstance();
      }
 else {
        payload=muleContext.getRegistry().lookupObject(ref);
      }
      if (payload == null) {
        logger.warn("There is no payload attached to this quartz job. Sending Null payload");
        payload=NullPayload.getInstance();
      }
    }
    MuleMessage msg=receiver.createMuleMessage(payload,receiver.getEndpoint().getEncoding());
    msg.setInvocationProperty(QuartzConnector.PROPERTY_JOB_DATA,jobExecutionContext.getJobDetail().getJobDataMap());
    receiver.routeMessage(msg);
  }
 catch (  Exception e) {
    receiver.getFlowConstruct().getExceptionListener().exceptionThrown(e);
  }
}
