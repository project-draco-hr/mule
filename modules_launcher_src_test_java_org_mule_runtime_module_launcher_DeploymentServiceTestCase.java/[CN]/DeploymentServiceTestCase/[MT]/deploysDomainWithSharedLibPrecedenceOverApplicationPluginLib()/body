{
  final String domainId="shared-lib";
  final ApplicationPluginFileBuilder pluginFileBuilder=new ApplicationPluginFileBuilder("echoPlugin1").configuredWith(EXPORTED_CLASS_PACKAGES_PROPERTY,"org.foo").containingClass("org/foo/Plugin1Echo.clazz").usingLibrary("lib/bar-2.0.jar");
  final ApplicationFileBuilder applicationFileBuilder=new ApplicationFileBuilder("shared-lib-precedence-app").definedBy("app-shared-lib-precedence-config.xml").containingPlugin(pluginFileBuilder).deployedWith(PROPERTY_DOMAIN,domainId);
  final DomainFileBuilder domainFileBuilder=new DomainFileBuilder(domainId).usingLibrary("lib/bar-1.0.jar").containing(applicationFileBuilder);
  addPackedDomainFromBuilder(domainFileBuilder);
  deploymentService.start();
  assertDeploymentSuccess(domainDeploymentListener,domainFileBuilder.getId());
  assertApplicationDeploymentSuccess(applicationDeploymentListener,applicationFileBuilder.getId());
  Application application=deploymentService.getApplications().get(0);
  Flow mainFlow=(Flow)application.getMuleContext().getRegistry().lookupFlowConstruct("main");
  DefaultMuleMessage muleMessage=new DefaultMuleMessage(TEST_MESSAGE);
  mainFlow.process(new DefaultMuleEvent(muleMessage,MessageExchangePattern.REQUEST_RESPONSE,mainFlow));
}
