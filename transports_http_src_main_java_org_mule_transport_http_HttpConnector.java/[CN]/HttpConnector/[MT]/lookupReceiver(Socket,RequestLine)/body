{
  InetSocketAddress socketAddress=(InetSocketAddress)socket.getLocalSocketAddress();
  int port=socketAddress.getPort();
  String host=socketAddress.getHostName();
  List<MessageReceiver> selectedReceivers=new LinkedList<>();
  for (  MessageReceiver messageReceiver : receivers.values()) {
    if (messageReceiver.getEndpointURI().getPort() == port && matchesHost(messageReceiver,host)) {
      selectedReceivers.add(messageReceiver);
    }
  }
  if (selectedReceivers.isEmpty()) {
    throw new NoReceiverForEndpointException(HttpMessages.noReceiverFoundForUrl(requestLine.getUrlWithoutParams()));
  }
  String requestUriWithoutParams=requestLine.getUrlWithoutParams();
  HttpMessageReceiver receiver=null;
  if (logger.isDebugEnabled()) {
    logger.debug(String.format(LOOKUP_DEBUG_MESSAGE_FORMAT,"Primary",getName(),getUri(host,port,requestUriWithoutParams)));
  }
  for (  MessageReceiver selectedReceiver : selectedReceivers) {
    if (matchesPath(selectedReceiver,requestUriWithoutParams)) {
      receiver=(HttpMessageReceiver)selectedReceiver;
      break;
    }
  }
  if (receiver == null && !ROOT_PATH.equals(requestUriWithoutParams)) {
    if (logger.isDebugEnabled()) {
      logger.debug(String.format(LOOKUP_DEBUG_MESSAGE_FORMAT,"Secondary",getName(),getUri(host,port,requestUriWithoutParams)));
    }
    receiver=(HttpMessageReceiver)findReceiverByStem(selectedReceivers,requestUriWithoutParams);
    if (receiver == null && logger.isWarnEnabled()) {
      logger.warn(String.format(LOOKUP_DEBUG_MESSAGE_FORMAT,"No receiver found with secondary",getName(),getUri(host,port,requestUriWithoutParams)));
      logger.warn("Receivers on connector are: " + MapUtils.toString(getReceivers(),true));
    }
  }
  if (receiver == null) {
    throw new NoReceiverForEndpointException(HttpMessages.noReceiverFoundForUrl(requestUriWithoutParams));
  }
  return receiver;
}
