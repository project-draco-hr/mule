{
  Class<?>[] parameterTypes;
  if (operationModel.getParameterModels().isEmpty()) {
    parameterTypes=org.apache.commons.lang.ArrayUtils.EMPTY_CLASS_ARRAY;
  }
 else {
    parameterTypes=new Class<?>[operationModel.getParameterModels().size()];
    int i=0;
    for (    ParameterModel parameterModel : operationModel.getParameterModels()) {
      parameterTypes[i++]=parameterModel.getType().getRawType();
    }
  }
  Collection<Method> methods=getAllMethods(declaringClass,withAnnotation(Operation.class),withModifier(Modifier.PUBLIC),withName(operationModel.getName()),withParameters(parameterTypes));
  checkArgument(!methods.isEmpty(),String.format("Could not find method %s in class %s",operationModel.getName(),declaringClass.getName()));
  checkArgument(methods.size() == 1,String.format("More than one matching method was found in class %s for operation %s",declaringClass.getName(),operationModel.getName()));
  return methods.iterator().next();
}
