{
  if (payload instanceof org.dom4j.Document) {
    DOMWriter writer=new DOMWriter();
    org.w3c.dom.Document w3cDocument=writer.write((org.dom4j.Document)payload);
    return w3cDocument;
  }
 else   if (payload instanceof org.w3c.dom.Document) {
    return (org.w3c.dom.Document)payload;
  }
 else   if (payload instanceof org.xml.sax.InputSource) {
    return parseXML((InputSource)payload);
  }
 else   if (payload instanceof javax.xml.transform.Source || payload instanceof javax.xml.stream.XMLStreamReader) {
    DOMResult result=new DOMResult();
    Transformer idTransformer=getTransformer();
    Source source=(payload instanceof Source) ? (Source)payload : toXmlSource(null,true,payload);
    idTransformer.transform(source,result);
    return (Document)result.getNode();
  }
 else   if (payload instanceof java.io.InputStream) {
    InputStreamReader input=new InputStreamReader((InputStream)payload);
    return parseXML(input);
  }
 else   if (payload instanceof String) {
    Reader input=new StringReader((String)payload);
    return parseXML(input);
  }
 else   if (payload instanceof byte[]) {
    Reader input=new StringReader(new String((byte[])payload));
    return parseXML(input);
  }
 else   if (payload instanceof File) {
    Reader input=new FileReader((File)payload);
    return parseXML(input);
  }
 else {
    return null;
  }
}
