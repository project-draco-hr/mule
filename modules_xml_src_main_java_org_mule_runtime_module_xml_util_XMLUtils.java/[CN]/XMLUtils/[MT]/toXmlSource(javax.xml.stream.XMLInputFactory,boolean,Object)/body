{
  if (src instanceof javax.xml.transform.Source) {
    return (Source)src;
  }
 else   if (src instanceof byte[]) {
    ByteArrayInputStream stream=new ByteArrayInputStream((byte[])src);
    return toStreamSource(xmlInputFactory,useStaxSource,stream);
  }
 else   if (src instanceof InputStream) {
    return toStreamSource(xmlInputFactory,useStaxSource,(InputStream)src);
  }
 else   if (src instanceof String) {
    if (useStaxSource) {
      return new StaxSource(xmlInputFactory.createXMLStreamReader(new StringReader((String)src)));
    }
 else {
      return new StreamSource(new StringReader((String)src));
    }
  }
 else   if (src instanceof org.dom4j.Document) {
    return new DocumentSource((org.dom4j.Document)src);
  }
 else   if (src instanceof org.xml.sax.InputSource) {
    return new SAXSource((InputSource)src);
  }
 else   if (src instanceof XMLStreamReader) {
    return toXmlSource((XMLStreamReader)src);
  }
 else   if (src instanceof org.w3c.dom.Document || src instanceof org.w3c.dom.Element) {
    return new DOMSource((org.w3c.dom.Node)src);
  }
 else   if (src instanceof DelayedResult) {
    DelayedResult result=((DelayedResult)src);
    DOMResult domResult=new DOMResult();
    result.write(domResult);
    return new DOMSource(domResult.getNode());
  }
 else   if (src instanceof OutputHandler) {
    OutputHandler handler=((OutputHandler)src);
    ByteArrayOutputStream output=new ByteArrayOutputStream();
    handler.write(getCurrentEvent(),output);
    return toStreamSource(xmlInputFactory,useStaxSource,new ByteArrayInputStream(output.toByteArray()));
  }
 else {
    return null;
  }
}
