{
  try {
    serviceDescriptor=(TransportServiceDescriptor)RegistryContext.getRegistry().lookupServiceDescriptor(ServiceDescriptorFactory.PROVIDER_SERVICE_TYPE,getProtocol().toLowerCase(),serviceOverrides);
    if (serviceDescriptor == null) {
      throw new ServiceException(CoreMessages.noServiceTransportDescriptor(getProtocol()));
    }
    if (logger.isDebugEnabled()) {
      logger.debug("Loading DispatcherFactory for connector: " + getName() + " ("+ getClass().getName()+ ")");
    }
    UMOMessageDispatcherFactory df=serviceDescriptor.createDispatcherFactory();
    if (df != null) {
      this.setDispatcherFactory(df);
    }
 else     if (logger.isDebugEnabled()) {
      logger.debug("Transport '" + getProtocol() + "' will not support outbound endpoints: ");
    }
    sessionHandler=serviceDescriptor.createSessionHandler();
    Map props=new HashMap();
    PropertiesUtils.getPropertiesWithPrefix(managementContext.getRegistry().lookupProperties(),getProtocol().toLowerCase(),props);
    if (props.size() > 0) {
      props=PropertiesUtils.removeNamespaces(props);
      org.mule.util.BeanUtils.populateWithoutFail(this,props,true);
    }
  }
 catch (  Exception e) {
    throw new InitialisationException(e,this);
  }
}
