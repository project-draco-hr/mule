{
  if (this.isDisposed()) {
    return;
  }
  if (this.isStarted()) {
    if (logger.isInfoEnabled()) {
      logger.info("Stopping: " + this);
    }
    this.doStop();
    started.set(false);
    if (receivers != null) {
      for (Iterator iterator=receivers.values().iterator(); iterator.hasNext(); ) {
        UMOMessageReceiver mr=(UMOMessageReceiver)iterator.next();
        if (logger.isDebugEnabled()) {
          logger.debug("Stopping receiver on endpoint: " + mr.getEndpoint().getEndpointURI());
        }
        mr.stop();
      }
    }
    scheduler.shutdown();
    scheduler=null;
  }
  if (this.isConnected()) {
    try {
      this.disconnect();
    }
 catch (    Exception e) {
      logger.error("Failed to disconnect: " + e.getMessage(),e);
    }
  }
  if (logger.isInfoEnabled()) {
    logger.info("Stopped: " + this);
  }
}
