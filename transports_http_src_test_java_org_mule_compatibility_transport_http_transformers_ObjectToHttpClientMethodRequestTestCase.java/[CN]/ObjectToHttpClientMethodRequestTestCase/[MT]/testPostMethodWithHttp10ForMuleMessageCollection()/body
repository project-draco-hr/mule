{
  MutableMuleMessage messageOne=setupRequestContext("http://localhost:8080/services",METHOD_POST);
  final MutableMuleMessage message=setupRequestContextForCollection("http://localhost:8080/services",METHOD_POST,singletonList(messageOne));
  final String contentType="text/plain";
  String payload="I'm a payload";
  messageOne.setPayload(payload);
  message.setOutboundProperty(HEADER_CONTENT_TYPE,contentType);
  message.setOutboundProperty(HTTP_VERSION_PROPERTY,HTTP10);
  final ObjectToHttpClientMethodRequest transformer=createTransformer();
  final Object response=transformer.transform(message);
  assertTrue(response instanceof PostMethod);
  final HttpMethod httpMethod=(HttpMethod)response;
  assertEquals(null,httpMethod.getQueryString());
  final byte[] byteArrayContent=((ByteArrayRequestEntity)((PostMethod)httpMethod).getRequestEntity()).getContent();
  final byte[] expectedByteArrayContent=SerializationUtils.serialize((Serializable)message.getPayload());
  assertArrayEquals(expectedByteArrayContent,byteArrayContent);
}
