{
  String notset=new Message(Messages.NOT_SET).getMessage();
  List message=new ArrayList();
  Manifest mf=config.getManifest();
  Map att=mf.getMainAttributes();
  if (att.values().size() > 0) {
    message.add(PropertiesHelper.getStringProperty(att,new Attributes.Name("Specification-Title"),notset) + new Message(Messages.VERSION).getMessage() + PropertiesHelper.getStringProperty(att,new Attributes.Name("Implementation-Version"),notset));
    message.add(PropertiesHelper.getStringProperty(att,new Attributes.Name("Specification-Vendor"),notset));
    message.add(PropertiesHelper.getStringProperty(att,new Attributes.Name("Implementation-Vendor"),notset));
  }
 else {
    message.add(new Message(Messages.VERSION_INFO_NOT_SET).getMessage());
  }
  message.add(" ");
  message.add(new Message(Messages.SERVER_STARTED_AT_X,new Date(getStartDate())).getMessage());
  message.add("JDK: " + System.getProperty("java.version") + " ("+ System.getProperty("java.vm.info")+ ")");
  message.add(" ");
  if (agents.size() == 0) {
    message.add(new Message(Messages.AGENTS_RUNNING).getMessage() + " " + new Message(Messages.NONE).getMessage());
  }
 else {
    message.add(new Message(Messages.AGENTS_RUNNING).getMessage());
    UMOAgent umoAgent;
    for (Iterator iterator=agents.values().iterator(); iterator.hasNext(); ) {
      umoAgent=(UMOAgent)iterator.next();
      message.add("  " + umoAgent.getDescription());
    }
  }
  return StringMessageHelper.getBoilerPlate(message,'*',70);
}
