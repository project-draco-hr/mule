{
  try {
    Class<URLClassLoader> clazz=URLClassLoader.class;
    Field ucp=clazz.getDeclaredField("ucp");
    ucp.setAccessible(true);
    Object urlClassPath=ucp.get(this);
    Field loaders=urlClassPath.getClass().getDeclaredField("loaders");
    loaders.setAccessible(true);
    Collection<?> jarLoaders=(Collection<?>)loaders.get(urlClassPath);
    for (    Object jarLoader : jarLoaders) {
      try {
        Field loader=jarLoader.getClass().getDeclaredField("jar");
        loader.setAccessible(true);
        Object jarFile=loader.get(jarLoader);
        ((JarFile)jarFile).close();
      }
 catch (      Throwable t) {
      }
    }
  }
 catch (  Throwable t) {
  }
  try {
    Class<ClassLoader> clazz=ClassLoader.class;
    Field nativeLibraries=clazz.getDeclaredField("nativeLibraries");
    nativeLibraries.setAccessible(true);
    Vector<?> nativelib=(Vector<?>)nativeLibraries.get(this);
    for (    Object lib : nativelib) {
      Method finalize=lib.getClass().getDeclaredMethod("finalize");
      finalize.setAccessible(true);
      finalize.invoke(lib);
    }
  }
 catch (  Exception ex) {
  }
}
