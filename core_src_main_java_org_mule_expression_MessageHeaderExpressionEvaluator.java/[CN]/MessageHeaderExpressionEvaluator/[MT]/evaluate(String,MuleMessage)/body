{
  Object result;
  boolean required;
  if (expression.endsWith(OPTIONAL_ARGUMENT)) {
    expression=expression.substring(0,expression.length() - OPTIONAL_ARGUMENT.length());
    required=false;
  }
 else {
    required=true;
  }
  final String[] tokens=expression.split(":",2);
  PropertyScope scope=PropertyScope.OUTBOUND;
  if (tokens.length == 2) {
    final String candidate=tokens[0];
    scope=PropertyScope.get(candidate.toLowerCase());
    if (scope == null) {
      throw new IllegalArgumentException(String.format("'%s' is not a valid property scope.",candidate));
    }
    expression=expression.substring(candidate.length() + 1);
  }
  result=message.getProperty(expression,scope);
  if (result == null && RequestContext.getEventContext() != null) {
    result=RequestContext.getEventContext().getEndpointURI().getParams().get(expression);
  }
  if (result == null && required) {
    throw new RequiredValueException(CoreMessages.expressionEvaluatorReturnedNull(NAME,expression));
  }
  return result;
}
