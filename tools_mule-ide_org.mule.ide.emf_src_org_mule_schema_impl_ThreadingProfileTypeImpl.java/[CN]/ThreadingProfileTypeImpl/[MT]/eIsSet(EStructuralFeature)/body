{
switch (eDerivedStructuralFeatureID(eFeature)) {
case MulePackage.THREADING_PROFILE_TYPE__MIXED:
    return mixed != null && !mixed.isEmpty();
case MulePackage.THREADING_PROFILE_TYPE__DO_THREADING:
  return isSetDoThreading();
case MulePackage.THREADING_PROFILE_TYPE__ID:
return isSetId();
case MulePackage.THREADING_PROFILE_TYPE__MAX_BUFFER_SIZE:
return MAX_BUFFER_SIZE_EDEFAULT == null ? maxBufferSize != null : !MAX_BUFFER_SIZE_EDEFAULT.equals(maxBufferSize);
case MulePackage.THREADING_PROFILE_TYPE__MAX_THREADS_ACTIVE:
return MAX_THREADS_ACTIVE_EDEFAULT == null ? maxThreadsActive != null : !MAX_THREADS_ACTIVE_EDEFAULT.equals(maxThreadsActive);
case MulePackage.THREADING_PROFILE_TYPE__MAX_THREADS_IDLE:
return MAX_THREADS_IDLE_EDEFAULT == null ? maxThreadsIdle != null : !MAX_THREADS_IDLE_EDEFAULT.equals(maxThreadsIdle);
case MulePackage.THREADING_PROFILE_TYPE__POOL_EXHAUSTED_ACTION:
return isSetPoolExhaustedAction();
case MulePackage.THREADING_PROFILE_TYPE__THREAD_TTL:
return THREAD_TTL_EDEFAULT == null ? threadTTL != null : !THREAD_TTL_EDEFAULT.equals(threadTTL);
case MulePackage.THREADING_PROFILE_TYPE__THREAD_WAIT_TIMEOUT:
return THREAD_WAIT_TIMEOUT_EDEFAULT == null ? threadWaitTimeout != null : !THREAD_WAIT_TIMEOUT_EDEFAULT.equals(threadWaitTimeout);
}
return eDynamicIsSet(eFeature);
}
