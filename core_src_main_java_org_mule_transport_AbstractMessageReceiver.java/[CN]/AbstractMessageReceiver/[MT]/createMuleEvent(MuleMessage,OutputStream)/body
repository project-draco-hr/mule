{
  ResponseOutputStream ros=null;
  if (outputStream != null) {
    if (outputStream instanceof ResponseOutputStream) {
      ros=(ResponseOutputStream)outputStream;
    }
 else {
      ros=new ResponseOutputStream(outputStream);
    }
  }
  MuleSession session;
  try {
    session=connector.getSessionHandler().retrieveSessionInfoFromMessage(message);
  }
 catch (  SerializationException e) {
    logger.warn("Unable to deserialize session info from the message, will attempt to use LegacySessionHandler in case it was generated by a previous Mule version: " + e.getMessage());
    session=new LegacySessionHandler().retrieveSessionInfoFromMessage(message);
  }
  if (session != null) {
    session.setFlowConstruct(flowConstruct);
  }
 else {
    session=new DefaultMuleSession(flowConstruct,connector.getMuleContext());
  }
  return new DefaultMuleEvent(message,endpoint,session,ros);
}
