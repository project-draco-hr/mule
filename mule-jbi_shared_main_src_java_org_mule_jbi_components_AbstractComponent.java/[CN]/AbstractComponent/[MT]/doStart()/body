{
  this.workManager.start();
  this.meListener=new Thread(new Runnable(){
    public void run(){
      try {
        DeliveryChannel channel=AbstractComponent.this.context.getDeliveryChannel();
        while (true) {
          final MessageExchange me=channel.accept();
          if (me.isTransacted()) {
            TransactionManager mgr=(TransactionManager)AbstractComponent.this.context.getTransactionManager();
            Transaction tx=(Transaction)me.getProperty(MessageExchange.JTA_TRANSACTION_PROPERTY_NAME);
            if (tx == mgr.getTransaction()) {
              mgr.suspend();
            }
          }
          AbstractComponent.this.workManager.scheduleWork(new Work(){
            public void release(){
            }
            public void run(){
              try {
                if (me.isTransacted()) {
                  TransactionManager mgr=(TransactionManager)AbstractComponent.this.context.getTransactionManager();
                  Transaction tx=(Transaction)me.getProperty(MessageExchange.JTA_TRANSACTION_PROPERTY_NAME);
                  mgr.resume(tx);
                }
                AbstractComponent.this.process(me);
              }
 catch (              Exception e) {
                logger.error("Error processing message",e);
              }
            }
          }
);
        }
      }
 catch (      Exception e) {
        throw new RuntimeException(e);
      }
    }
  }
);
  this.meListener.setDaemon(true);
  this.meListener.start();
}
