{
  try {
    while (!Thread.interrupted()) {
      Thread.sleep(1000);
      if (unusedMarks.size() > 0) {
        Long pendingMark;
        if (pendingMarks.size() > 0) {
          pendingMark=(Long)pendingMarks.first();
        }
 else {
          pendingMark=new Long(Long.MAX_VALUE);
        }
synchronized (unusedMarks) {
          SortedSet marks=unusedMarks.headSet(pendingMark);
          if (marks.size() > 0) {
            if (logger.isDebugEnabled()) {
              logger.debug("Marking to " + Long.toHexString(((Long)marks.last()).longValue()));
            }
            try {
              journal.mark(((Long)marks.last()).longValue());
              marks.clear();
            }
 catch (            InterruptedException e) {
              throw e;
            }
catch (            Exception e) {
              logger.error("Could not mark",e);
            }
          }
 else {
            logger.debug("No new marks");
          }
        }
      }
    }
  }
 catch (  InterruptedException e) {
    logger.debug("Marker thread interrupted");
  }
}
