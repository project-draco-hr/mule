{
  if (!getArgumentClass().isAssignableFrom(type) || isNonMatching(source,result)) {
    return null;
  }
  Class annotatedType=(result instanceof CollectionDataType ? ((CollectionDataType)result).getItemType() : result.getType());
  boolean isAnnotated=matchingClasses.contains(annotatedType);
  if (!isAnnotated) {
    isAnnotated=findAnnotation(annotatedType);
  }
  if (!isAnnotated) {
    annotatedType=source.getType();
    isAnnotated=matchingClasses.contains(annotatedType);
    if (!isAnnotated) {
      isAnnotated=AnnotationUtils.hasAnnotationWithPackage(getAnnotationsPackageName(),annotatedType);
    }
  }
  Object argument=context.getRegistry().lookupObject(getArgumentClass());
  if (!isAnnotated) {
    nonMatchingClasses.add(source.getType());
    nonMatchingClasses.add(result.getType());
    return (T)argument;
  }
 else {
    matchingClasses.add(annotatedType);
  }
  if (argument == null) {
    logger.info("No common Object of type '" + getArgumentClass() + "' configured, creating a local one for: "+ source+ ", "+ result);
    argument=createArgument(annotatedType,context);
  }
  return (T)argument;
}
