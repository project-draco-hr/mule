{
  if (!muleContext.isPrimaryPollingInstance()) {
    return;
  }
  List<EventGroup> expired=new ArrayList<EventGroup>(1);
  try {
    for (    Serializable o : (List<Serializable>)correlatorStore.allKeys(getEventGroupsPartitionKey())) {
      EventGroup group=getEventGroup(o);
      if (group != null && group.getCreated() + getTimeout() < System.currentTimeMillis()) {
        expired.add(group);
      }
    }
  }
 catch (  ObjectStoreException e) {
    logger.warn("expiry failed dues to ObjectStoreException " + e);
  }
  for (  final EventGroup group : expired) {
    ExecutionTemplate<MuleEvent> executionTemplate=ErrorHandlingExecutionTemplate.createErrorHandlingExecutionTemplate(muleContext,flowConstruct.getExceptionListener());
    try {
      executionTemplate.execute(new ExecutionCallback<MuleEvent>(){
        @Override public MuleEvent process() throws Exception {
          handleGroupExpiry(group);
          return null;
        }
      }
);
    }
 catch (    MessagingException e) {
    }
catch (    Exception e) {
      muleContext.getExceptionListener().handleException(e);
    }
  }
}
