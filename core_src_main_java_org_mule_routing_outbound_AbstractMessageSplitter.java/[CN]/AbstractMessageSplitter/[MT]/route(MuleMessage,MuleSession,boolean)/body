{
  String correlationId=messageInfoMapping.getCorrelationId(message);
  this.initialise(message);
  OutboundEndpoint endpoint;
  MuleMessage result=null;
  List list=getEndpoints();
  int correlationSequence=1;
  for (Iterator iterator=list.iterator(); iterator.hasNext(); ) {
    endpoint=(OutboundEndpoint)iterator.next();
    message=getMessagePart(message,endpoint);
    if (message == null) {
      logger.warn("Message part is null for endpoint: " + endpoint.getEndpointURI().toString());
    }
    while (message != null) {
      if (honorSynchronicity) {
        synchronous=endpoint.isSynchronous();
      }
      try {
        if (enableCorrelation != ENABLE_CORRELATION_NEVER) {
          boolean correlationSet=message.getCorrelationId() != null;
          if (!correlationSet && (enableCorrelation == ENABLE_CORRELATION_IF_NOT_SET)) {
            message.setCorrelationId(correlationId);
          }
          final int groupSize=message.getCorrelationGroupSize();
          message.setCorrelationGroupSize(groupSize);
          message.setCorrelationSequence(correlationSequence++);
        }
        if (honorSynchronicity) {
          message.setBooleanProperty(MuleProperties.MULE_REMOTE_SYNC_PROPERTY,endpoint.isRemoteSync());
        }
        if (synchronous) {
          result=send(session,message,endpoint);
        }
 else {
          dispatch(session,message,endpoint);
        }
      }
 catch (      MuleException e) {
        throw new CouldNotRouteOutboundMessageException(message,endpoint,e);
      }
      if (!multimatch) {
        break;
      }
      message=this.getMessagePart(message,endpoint);
    }
  }
  this.cleanup();
  return result;
}
