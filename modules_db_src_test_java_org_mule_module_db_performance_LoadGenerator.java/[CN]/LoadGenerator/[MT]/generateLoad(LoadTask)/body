{
  Collection<Callable<Integer>> solvers=new ArrayList<Callable<Integer>>(getThreadCount());
  for (int i=1; i <= getThreadCount(); i++) {
    solvers.add(new Callable<Integer>(){
      public Integer call() throws Exception {
        for (int message=1; message <= getMessagesPerThread(); message++) {
          try {
            loadTask.execute(message);
          }
 catch (          Exception e) {
            logger.error("Error sending message: " + e.getMessage());
          }
          Thread.sleep(getMessageDelay());
        }
        return getMessagesPerThread();
      }
    }
);
  }
  ExecutorService exec=Executors.newFixedThreadPool(getThreadCount());
  CompletionService<Integer> executorCompletionService=new ExecutorCompletionService<Integer>(exec);
  for (  Callable<Integer> s : solvers) {
    executorCompletionService.submit(s);
  }
  Integer count=0;
  for (int i=0; i < getThreadCount(); ++i) {
    count=count + executorCompletionService.take().get();
    logger.info("Current row processed count: " + count);
  }
  logger.info("Load generation completed");
}
