{
  MessageContentsList objs=MessageContentsList.getContentsList(message);
  if (objs == null || objs.size() == 0) {
    return;
  }
  List<Object> originalParts=(List<Object>)objs.clone();
  objs.clear();
  for (  Object o : originalParts) {
    if (o instanceof MuleMessage) {
      try {
        MuleMessage muleMsg=(MuleMessage)o;
        final Object payload=cleanUpPayload(muleMsg.getPayload());
        if (payload instanceof DelayedResult) {
          o=getDelayedResultCallback((DelayedResult)payload);
        }
 else         if (payload instanceof XMLStreamReader) {
          o=new XMLStreamWriterCallback(){
            @Override public void write(            XMLStreamWriter writer) throws Fault, XMLStreamException {
              XMLStreamReader xsr=(XMLStreamReader)payload;
              StaxUtils.copy(xsr,writer);
              writer.flush();
              xsr.close();
            }
          }
;
        }
 else         if (payload instanceof NullPayload) {
          break;
        }
 else {
          o=muleMsg.getMuleContext().getTransformationService().transform(muleMsg,DataType.fromType(XMLStreamReader.class)).getPayload();
        }
        objs.add(o);
      }
 catch (      TransformerException e) {
        throw new Fault(e);
      }
    }
 else {
      objs.add(o);
    }
  }
  if (!isRequestor(message)) {
    BindingOperationInfo bop=message.getExchange().get(BindingOperationInfo.class);
    if (bop != null) {
      ensurePartIndexMatchListIndex(objs,bop.getOutput().getMessageParts());
    }
  }
}
