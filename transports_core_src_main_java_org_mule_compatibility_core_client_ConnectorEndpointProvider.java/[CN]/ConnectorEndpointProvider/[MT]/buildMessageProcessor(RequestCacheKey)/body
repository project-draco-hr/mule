{
  if (cacheKey.getOperationOptions().isOutbound()) {
    return endpointCache.getOutboundEndpoint(cacheKey.getUrl(),cacheKey.getExchangePattern(),null);
  }
 else {
    final Long timeout=cacheKey.getOperationOptions().getResponseTimeout();
    return new MessageProcessor(){
      @Override public MuleEvent process(      MuleEvent event) throws MuleException {
        final InboundEndpoint inboundEndpoint=endpointCache.getInboundEndpoint(cacheKey.getUrl(),cacheKey.getExchangePattern());
        MuleMessage message;
        try {
          message=inboundEndpoint.request(timeout);
        }
 catch (        Exception e) {
          throw new ReceiveException(inboundEndpoint,timeout,e);
        }
        return message != null ? new DefaultMuleEvent(message,new MuleClientFlowConstruct(muleContext)) : null;
      }
    }
;
  }
}
