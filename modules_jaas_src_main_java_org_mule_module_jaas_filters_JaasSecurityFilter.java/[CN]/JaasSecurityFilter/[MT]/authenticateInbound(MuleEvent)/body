{
  String userHeader=(String)getCredentialsAccessor().getCredentials(event);
  if (userHeader == null) {
    throw new CredentialsNotSetException(event.getMessage(),event.getSession().getSecurityContext(),event.getEndpoint(),this);
  }
  Credentials user=new MuleCredentials(userHeader,getSecurityManager());
  Authentication authResult;
  Authentication authentication=new JaasAuthentication(user);
  try {
    authResult=getSecurityManager().authenticate(authentication);
  }
 catch (  SecurityException se) {
    if (logger.isDebugEnabled()) {
      logger.debug("Security Exception raised. Authentication request for user: " + user.getUsername() + " failed: "+ se.toString());
    }
    throw se;
  }
catch (  Exception e) {
    if (logger.isDebugEnabled()) {
      logger.debug("Authentication request for user: " + user.getUsername() + " failed: "+ e.toString());
    }
    throw new UnauthorisedException(CoreMessages.authFailedForUser(user.getUsername()),event.getMessage(),e);
  }
  if (logger.isDebugEnabled()) {
    logger.debug("Authentication success: " + authResult.toString());
  }
  SecurityContext context=getSecurityManager().createSecurityContext(authResult);
  context.setAuthentication(authResult);
  event.getSession().setSecurityContext(context);
}
