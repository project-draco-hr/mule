{
  List methods=ClassUtils.getSatisfiableMethods(FruitBowl.class,new Class[]{Apple.class},true,true,ignoreMethods);
  assertNotNull(methods);
  assertEquals(2,methods.size());
  methods=ClassUtils.getSatisfiableMethods(FruitBowl.class,new Class[]{Apple.class},false,true,ignoreMethods);
  assertNotNull(methods);
  assertEquals(0,methods.size());
  methods=ClassUtils.getSatisfiableMethods(DummyObject.class,new Class[]{WaterMelon.class},true,false,ignoreMethods);
  assertNotNull(methods);
  assertEquals(0,methods.size());
  methods=ClassUtils.getSatisfiableMethods(DummyObject.class,new Class[]{WaterMelon.class},true,true,ignoreMethods);
  assertNotNull(methods);
  assertEquals(2,methods.size());
  methods=ClassUtils.getSatisfiableMethods(DummyObject.class,new Class[]{WaterMelon.class},false,true,ignoreMethods);
  assertNotNull(methods);
  assertEquals(1,methods.size());
  assertEquals("doSomethingElse",((Method)methods.get(0)).getName());
  methods=ClassUtils.getSatisfiableMethods(FruitBowl.class,new Class[]{WaterMelon[].class},true,true,ignoreMethods);
  assertNotNull(methods);
  assertEquals(1,methods.size());
  assertEquals("setFruit",((Method)methods.get(0)).getName());
}
