{
  MuleClient client=new MuleClient();
  FunctionalStreamingTestComponent ftc=(FunctionalStreamingTestComponent)getComponent("testComponent");
  assertTrue("FunctionalStreamingTestComponent expected",ftc instanceof FunctionalStreamingTestComponent);
  CountDownLatch latch=new CountDownLatch(1);
  AtomicReference message=new AtomicReference();
  EventCallback callback=newCallback(latch,message);
  ((FunctionalStreamingTestComponent)ftc).setEventCallback(callback,TEST_MESSAGE.length());
  client.dispatch("tcp://localhost:60196",TEST_MESSAGE,new HashMap());
  latch.await(getTimeout(),TimeUnit.MILLISECONDS);
  assertEquals("Received stream; length: 16; 'Test...sage'",message.get());
  stopServer();
  Thread.sleep(3000);
  startServer();
  CountDownLatch latch2=new CountDownLatch(1);
  AtomicReference message2=new AtomicReference();
  EventCallback callback2=newCallback(latch2,message2);
  ((FunctionalStreamingTestComponent)ftc).setEventCallback(callback2,TEST_MESSAGE_2.length());
  client.dispatch("tcp://localhost:60196",TEST_MESSAGE_2,new HashMap());
  latch2.await(getTimeout(),TimeUnit.MILLISECONDS);
  assertEquals("Received stream; length: 20; 'Anot...sage'",message2.get());
}
