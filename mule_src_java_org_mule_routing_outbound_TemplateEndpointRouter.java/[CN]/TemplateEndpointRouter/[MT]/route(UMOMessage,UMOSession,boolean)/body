{
  UMOMessage result=null;
  if (endpoints == null || endpoints.size() == 0) {
    throw new RoutePathNotFoundException(new Message(Messages.NO_ENDPOINTS_FOR_ROUTER),message,null);
  }
  try {
    UMOEndpoint ep=(UMOEndpoint)endpoints.get(0);
    String uri=ep.getEndpointURI().toString();
    if (logger.isDebugEnabled()) {
      logger.debug("Uri before parsing is: " + uri);
    }
    Map props=new HashMap();
    props.putAll(ep.getProperties());
    props.putAll(message.getProperties());
    uri=parser.parse(props,uri);
    if (logger.isDebugEnabled()) {
      logger.debug("Uri after parsing is: " + uri);
    }
    UMOEndpointURI newUri=new MuleEndpointURI(uri);
    if (!newUri.getScheme().equalsIgnoreCase(ep.getEndpointURI().getScheme())) {
      throw new CouldNotRouteOutboundMessageException(new Message(Messages.SCHEME_CANT_CHANGE_FOR_ROUTER_X_X,ep.getEndpointURI().getScheme(),newUri.getScheme()),message,ep);
    }
    ep.setEndpointURI(new MuleEndpointURI(uri));
    if (synchronous) {
      result=send(session,message,ep);
    }
 else {
      dispatch(session,message,ep);
    }
  }
 catch (  UMOException e) {
    throw new CouldNotRouteOutboundMessageException(message,(UMOEndpoint)endpoints.get(0),e);
  }
  return result;
}
