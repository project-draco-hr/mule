{
  try {
    Flow flow=new Flow("test",getMuleContext());
    final DefaultMuleEvent accessTokenEvent=new DefaultMuleEvent(create(flow,"ClientCredentialsTokenRequestHandler"),MuleMessage.builder().nullPayload().build(),REQUEST_RESPONSE,flow);
    setMapPayloadWithTokenRequestParameters(accessTokenEvent);
    final MuleEvent response;
    response=invokeTokenUrl(accessTokenEvent);
    final TokenResponseProcessor tokenResponseProcessor=TokenResponseProcessor.createClientCredentialsProcessor(tokenResponseConfiguration,getMuleContext().getExpressionManager());
    tokenResponseProcessor.process(response);
    if (logger.isDebugEnabled()) {
      logger.debug("Retrieved access token, refresh token and expires from token url are: %s, %s, %s",tokenResponseProcessor.getAccessToken(),tokenResponseProcessor.getRefreshToken(),tokenResponseProcessor.getExpiresIn());
    }
    if (!tokenResponseContentIsValid(tokenResponseProcessor)) {
      throw new TokenNotFoundException(response,tokenResponseProcessor);
    }
    final ResourceOwnerOAuthContext defaultUserState=tokenManager.getConfigOAuthContext().getContextForResourceOwner(ResourceOwnerOAuthContext.DEFAULT_RESOURCE_OWNER_ID);
    defaultUserState.setAccessToken(tokenResponseProcessor.getAccessToken());
    defaultUserState.setExpiresIn(tokenResponseProcessor.getExpiresIn());
    final Map<String,Object> customResponseParameters=tokenResponseProcessor.getCustomResponseParameters();
    for (    String paramName : customResponseParameters.keySet()) {
      defaultUserState.getTokenResponseParameters().put(paramName,customResponseParameters.get(paramName));
    }
    tokenManager.getConfigOAuthContext().updateResourceOwnerOAuthContext(defaultUserState);
  }
 catch (  TokenNotFoundException e) {
    logger.error(String.format("Could not extract access token or refresh token from token URL. Access token is %s, Refresh token is %s",e.getTokenResponseProcessor().getAccessToken(),e.getTokenResponseProcessor().getRefreshToken()));
    muleEventLogger.logContent(e.getTokenUrlResponse());
    throw new DefaultMuleException(e);
  }
catch (  TokenUrlResponseException e) {
    logger.error((String.format("HTTP response from token URL %s returned a failure status code",getTokenUrl())));
    muleEventLogger.logContent(e.getTokenUrlResponse());
    throw new DefaultMuleException(e);
  }
}
