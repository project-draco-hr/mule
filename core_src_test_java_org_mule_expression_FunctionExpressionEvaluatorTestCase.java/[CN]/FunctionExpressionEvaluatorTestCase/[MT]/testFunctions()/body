{
  MuleMessage message=new DefaultMuleMessage(new Apple(),muleContext);
  FunctionExpressionEvaluator extractor=new FunctionExpressionEvaluator();
  Object o=extractor.evaluate("uuid",message);
  assertNotNull(o);
  o=extractor.evaluate("now",message);
  assertNotNull(o);
  assertTrue(o instanceof Timestamp);
  o=extractor.evaluate("date",message);
  assertNotNull(o);
  assertTrue(o instanceof Date);
  o=extractor.evaluate("hostname",message);
  assertNotNull(o);
  assertEquals(InetAddress.getLocalHost().getHostName(),o);
  o=extractor.evaluate("ip",message);
  assertNotNull(o);
  assertEquals(InetAddress.getLocalHost().getHostAddress(),o);
  o=extractor.evaluate("payloadClass",message);
  assertNotNull(o);
  assertEquals(Apple.class.getName(),o);
  o=extractor.evaluate("shortPayloadClass",message);
  assertNotNull(o);
  assertEquals("Apple",o);
  try {
    extractor.evaluate("bork",message);
    fail("bork is not a valid function");
  }
 catch (  IllegalArgumentException e) {
  }
}
