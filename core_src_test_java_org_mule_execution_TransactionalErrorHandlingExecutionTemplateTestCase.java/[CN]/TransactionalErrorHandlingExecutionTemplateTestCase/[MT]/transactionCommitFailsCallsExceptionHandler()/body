{
  when(mockTransactionConfig.getAction()).thenReturn(ACTION_ALWAYS_BEGIN);
  ExecutionTemplate executionTemplate=createExecutionTemplate(mockTransactionConfig);
  doAnswer(new Answer(){
    @Override public Object answer(    InvocationOnMock invocationOnMock) throws Throwable {
      TransactionCoordination.getInstance().unbindTransaction(mockTransaction);
      throw new RuntimeException();
    }
  }
).when(mockTransaction).commit();
  configureCatchExceptionListenerCall();
  try {
    executionTemplate.execute(TransactionTemplateTestUtils.getEmptyTransactionCallback(mockEvent));
    fail("MessagingException must be thrown");
  }
 catch (  MessagingException e) {
    assertThat(e.getEvent(),is(mockEvent));
  }
  verify(mockTransaction).commit();
  verify(mockMessagingExceptionHandler).handleException(any(MessagingException.class),eq(mockEvent));
}
