{
  Map configsMap=new LinkedHashMap();
  for (int i=0; i < configResources.length; i++) {
    String configExtension=StringUtils.substringAfterLast(configResources[i],".");
    List configs=(List)configsMap.get(configExtension);
    if (configs == null) {
      configs=new ArrayList();
      configsMap.put(configExtension,configs);
    }
    configs.add(configResources[i]);
  }
  try {
    Properties props=new Properties();
    props.load(ClassUtils.getResource("configuration-builders.properties",this.getClass()).openStream());
    Iterator iterator=configsMap.entrySet().iterator();
    while (iterator.hasNext()) {
      Map.Entry e=(Map.Entry)iterator.next();
      String extension=(String)e.getKey();
      List configs=(List)e.getValue();
      String className=(String)props.get(extension);
      if (!ClassUtils.isClassOnPath(className,this.getClass())) {
        throw new ConfigurationException(CoreMessages.configurationBuilderNoMatching(createConfigResourcesString()));
      }
      String[] constructorArg=new String[configs.size()];
      System.arraycopy(configs.toArray(),0,constructorArg,0,configs.size());
      ConfigurationBuilder cb=(ConfigurationBuilder)ClassUtils.instanciateClass(className,new Object[]{constructorArg});
      cb.configure(muleContext);
    }
  }
 catch (  Exception e) {
    throw new ConfigurationException(e);
  }
}
