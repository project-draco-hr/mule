{
  Event testEvent=createMockEvent();
  HttpResponseReadyCallback responseReadyCallback=mock(HttpResponseReadyCallback.class);
  ArgumentCaptor<HttpResponse> httpResponseCaptor=ArgumentCaptor.forClass(HttpResponse.class);
  doNothing().when(responseReadyCallback).responseReady(httpResponseCaptor.capture(),any(ResponseStatusCallback.class));
  HttpMessageProcessorTemplate httpMessageProcessorTemplate=new HttpMessageProcessorTemplate(testEvent,mock(Processor.class),responseReadyCallback,null,HttpResponseBuilder.emptyInstance(muleContext));
  ResponseCompletionCallback responseCompletionCallback=mock(ResponseCompletionCallback.class);
  httpMessageProcessorTemplate.sendResponseToClient(testEvent,responseCompletionCallback);
  verify(responseCompletionCallback).responseSentWithFailure(isA(MessagingException.class),eq(testEvent));
  assertThat(httpResponseCaptor.getValue().getStatusCode(),is(INTERNAL_SERVER_ERROR.getStatusCode()));
}
