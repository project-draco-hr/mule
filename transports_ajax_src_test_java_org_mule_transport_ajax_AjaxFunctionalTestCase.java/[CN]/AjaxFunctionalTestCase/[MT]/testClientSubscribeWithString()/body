{
  Thread.sleep(5000);
  final Latch latch=new Latch();
  final AtomicReference<Object> data=new AtomicReference<Object>();
  bayeuxClient.addListener(new MessageListener(){
    public void deliver(    Client fromClient,    Client toClient,    Message message){
      if (message.getData() != null) {
        data.set(message.toString());
        latch.release();
      }
    }
  }
);
  bayeuxClient.subscribe("/test1");
  MuleClient muleClient=new MuleClient(muleContext);
  muleClient.dispatch("vm://in1","Ross",null);
  latch.await(10,TimeUnit.SECONDS);
  assertNotNull(data.get());
  ObjectMapper mapper=new ObjectMapper();
  Map<?,?> result=mapper.readValue((String)data.get(),Map.class);
  assertEquals("/test1",result.get("channel"));
  assertEquals("Ross Received",result.get("data"));
}
