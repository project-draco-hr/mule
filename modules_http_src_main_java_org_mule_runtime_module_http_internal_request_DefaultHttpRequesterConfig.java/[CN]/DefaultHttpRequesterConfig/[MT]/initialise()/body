{
  LifecycleUtils.initialiseIfNeeded(authentication);
  verifyConnectionsParameters();
  if (port == null) {
    port=String.valueOf(protocol.getDefaultPort());
  }
  if (protocol.equals(HTTP) && tlsContext != null) {
    throw new InitialisationException(CoreMessages.createStaticMessage("TlsContext cannot be configured with protocol HTTP, " + "when using tls:context you must set attribute protocol=\"HTTPS\""),this);
  }
  if (protocol.equals(HTTPS) && tlsContext == null) {
    tlsContext=defaultTlsContextFactoryBuilder.buildDefault();
  }
  if (enableCookies) {
    cookieManager=new CookieManager();
  }
  String threadNamePrefix=format(THREAD_NAME_PREFIX_PATTERN,ThreadNameHelper.getPrefix(muleContext),name);
  HttpClientConfiguration configuration=new HttpClientConfiguration.Builder().setTlsContextFactory(tlsContext).setProxyConfig(proxyConfig).setClientSocketProperties(clientSocketProperties).setMaxConnections(maxConnections).setUsePersistentConnections(usePersistentConnections).setConnectionIdleTimeout(connectionIdleTimeout).setThreadNamePrefix(threadNamePrefix).setOwnerName(name).build();
  HttpClientFactory httpClientFactory=muleContext.getRegistry().get(OBJECT_HTTP_CLIENT_FACTORY);
  if (httpClientFactory == null) {
    httpClient=new GrizzlyHttpClient(configuration);
  }
 else {
    httpClient=httpClientFactory.create(configuration);
  }
  httpClient.initialise();
}
