{
  if (logger.isDebugEnabled()) {
    logger.debug("Message contains outbound attachments. Ignoring payload and trying to generate multipart response");
  }
  final HashMap<String,DataHandler> parts=new HashMap<>();
  for (  String outboundAttachmentName : event.getMessage().getOutboundAttachmentNames()) {
    parts.put(outboundAttachmentName,event.getMessage().getOutboundAttachment(outboundAttachmentName));
  }
  try {
    if (event.getMessage().getPayload() instanceof MultiPartPayload) {
      for (      org.mule.runtime.api.message.MuleMessage part : ((MultiPartPayload)event.getMessage().getPayload()).getParts()) {
        final String partName=((PartAttributes)part.getAttributes()).getName();
        parts.put(partName,toDataHandler(partName,part.getPayload(),part.getDataType().getMediaType()));
      }
    }
    final MultipartHttpEntity multipartEntity=new MultipartHttpEntity(HttpPartDataSource.createFrom(parts));
    return new ByteArrayHttpEntity(HttpMultipartEncoder.createMultipartContent(multipartEntity,contentType));
  }
 catch (  Exception e) {
    throw new MessagingException(event,e);
  }
}
