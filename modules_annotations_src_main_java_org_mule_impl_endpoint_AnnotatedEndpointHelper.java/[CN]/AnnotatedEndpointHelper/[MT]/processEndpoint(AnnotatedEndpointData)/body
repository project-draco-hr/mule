{
  preprocessEndpointData(epData);
  ImmutableEndpoint endpoint;
  EndpointBuilder endpointBuilder=getEndpointBuilder(epData);
  if (epData.getProperties() != null && epData.getProperties().size() > 0) {
    endpointBuilder.setProperties(epData.getProperties());
  }
  if (epData.getTransformers() != null) {
    List<Transformer> transformers=(List)convertProperty(List.class,epData.getTransformers());
    endpointBuilder.setTransformers(transformers);
  }
  if (epData.getFilter() != null) {
    Filter filter=(Filter)convertProperty(Filter.class,epData.getFilter());
    endpointBuilder.setFilter(filter);
  }
  if (epData.getEncoding() != null) {
    endpointBuilder.setEncoding(parsePlaceholderValues(epData.getEncoding()));
  }
  AbstractConnector connector;
  if (epData.getConnectorName() != null) {
    connector=(AbstractConnector)muleContext.getRegistry().lookupConnector(parsePlaceholderValues(epData.getConnectorName()));
  }
 else   if (epData.getConnector() != null) {
    connector=(AbstractConnector)epData.getConnector();
  }
 else {
    MuleEndpointURI uri=new MuleEndpointURI(parsePlaceholderValues(epData.getAddress()),muleContext);
    connector=(AbstractConnector)transportFactory.createConnector(uri);
    if (muleContext.getRegistry().lookupConnector(connector.getName()) == null) {
      muleContext.getRegistry().registerConnector(connector);
    }
  }
  endpointBuilder.setConnector(connector);
  String threadsString=(String)epData.getProperties().get("threads");
  if (threadsString != null) {
    int threads=Integer.valueOf(threadsString);
    connector.setMaxDispatchersActive(threads);
    connector.setMaxRequestersActive(threads);
    connector.getReceiverThreadingProfile().setMaxThreadsActive(threads);
    connector.getReceiverThreadingProfile().setMaxThreadsIdle(threads);
  }
  if (epData.getName() != null) {
    endpointBuilder.setName(parsePlaceholderValues(epData.getName()));
  }
  endpointBuilder.setExchangePattern(MessageExchangePattern.fromSyncFlag(epData.isSynchronous()));
  if (epData.getType() == ChannelType.Inbound) {
    endpoint=endpointBuilder.buildInboundEndpoint();
  }
 else   if (epData.getType() == ChannelType.Outbound) {
    endpoint=endpointBuilder.buildOutboundEndpoint();
  }
 else {
    throw new IllegalArgumentException("Channel type not recognised: " + epData.getType());
  }
  if (epData.getName() != null) {
    muleContext.getRegistry().registerEndpointBuilder(epData.getName(),endpointBuilder);
  }
  return endpoint;
}
