{
  FTPClient client=null;
  try {
    try {
      client=connector.createFtpClient(endpoint);
    }
 catch (    Exception e) {
      throw new ConnectException(e,this);
    }
    FTPListParseEngine engine=client.initiateListParsing();
    FTPFile[] files=null;
    List<FTPFile> v=new ArrayList<FTPFile>();
    while (engine.hasNext()) {
      if (getLifecycleState().isStopping()) {
        break;
      }
      files=engine.getNext(FTP_LIST_PAGE_SIZE);
      if (files == null || files.length == 0) {
        return files;
      }
      for (      FTPFile file : files) {
        if (file.isFile()) {
          if (filenameFilter == null || filenameFilter.accept(null,file.getName())) {
            v.add(file);
          }
        }
      }
    }
    if (!FTPReply.isPositiveCompletion(client.getReplyCode())) {
      throw new IOException("Failed to list files. Ftp error: " + client.getReplyCode());
    }
    return v.toArray(new FTPFile[v.size()]);
  }
  finally {
    if (client != null) {
      connector.releaseFtp(endpoint.getEndpointURI(),client);
    }
  }
}
