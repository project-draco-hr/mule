{
  registerBeanDefinitionParser("is-json-filter",new FilterDefinitionParser(IsJsonFilter.class));
  registerBeanDefinitionParser("object-to-json-transformer",new MessageProcessorDefinitionParser(ObjectToJson.class));
  registerBeanDefinitionParser("json-to-object-transformer",new MessageProcessorDefinitionParser(JsonToObject.class));
  registerBeanDefinitionParser("serialization-mixin",new ChildMapEntryDefinitionParser("serializationMixins","targetClass","mixinClass"));
  registerBeanDefinitionParser("deserialization-mixin",new ChildMapEntryDefinitionParser("deserializationMixins","targetClass","mixinClass"));
  registerBeanDefinitionParser("mixin",new ChildMapEntryDefinitionParser("mixins","targetClass","mixinClass"));
  registerBeanDefinitionParser("mapper",new OrphanDefinitionParser(MapperFactoryBean.class,true));
  registerBeanDefinitionParser("json-to-xml-transformer",new MessageProcessorDefinitionParser(JsonToXml.class));
  registerBeanDefinitionParser("xml-to-json-transformer",new MessageProcessorDefinitionParser(XmlToJson.class));
  registerBeanDefinitionParser("json-xslt-transformer",new MessageProcessorDefinitionParser(JsonXsltTransformer.class));
  registerDeprecatedBeanDefinitionParser("json-schema-validation-filter",new FilterDefinitionParser(JsonSchemaValidationFilter.class),"Use validate-schema instead");
  registerBeanDefinitionParser("validate-schema",new ValidateJsonSchemaMessageProcessorDefinitionParser());
  registerIgnoredElement("schema-redirects");
  registerIgnoredElement("schema-redirect");
}
