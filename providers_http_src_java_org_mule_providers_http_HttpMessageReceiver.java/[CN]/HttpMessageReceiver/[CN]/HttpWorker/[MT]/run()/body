{
  DataInputStream dataIn=null;
  DataOutputStream dataOut=null;
  try {
    dataIn=new DataInputStream(socket.getInputStream());
    dataOut=new DataOutputStream(socket.getOutputStream());
    UMOMessageAdapter adapter=connector.getMessageAdapter(dataIn);
    UMOMessage message=new MuleMessage(adapter);
    if (logger.isDebugEnabled()) {
      logger.debug((String)message.getProperty(HttpConnector.HTTP_REQUEST_PROPERTY));
    }
    OutputStream os=new ResponseOutputStream(dataOut,socket);
    UMOMessage returnMessage=routeMessage(message,connector.isSynchronous(),os);
    if (returnMessage == null) {
      returnMessage=new MuleMessage("",null);
    }
    RequestContext.rewriteEvent(returnMessage);
    String responseText=(String)getResponseTransformer().transform(returnMessage.getPayload());
    dataOut.write(responseText.getBytes());
    dataOut.flush();
  }
 catch (  Exception e) {
    handleException("Failed to process Http Request on: " + (socket != null ? socket.getInetAddress().toString() : "null"),e);
  }
 finally {
    try {
      if (dataIn != null)       dataIn.close();
      if (dataOut != null)       dataOut.close();
      socket.close();
    }
 catch (    Exception e) {
      logger.error("Socket close failed with: " + e);
    }
  }
}
