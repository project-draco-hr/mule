{
  watchdog=createWatchdog();
  watchdog.start();
  if (numPorts > 0) {
    ports=PortUtils.findFreePorts(numPorts);
    setPortProperties();
  }
  currentTestRunningThread=Thread.currentThread();
  printTestHeader();
  try {
    if (getTestInfo().getRunCount() == 0) {
      if (getTestInfo().isDisposeManagerPerSuite()) {
        disposeManager();
      }
      suitePreSetUp();
    }
    if (!getTestInfo().isDisposeManagerPerSuite()) {
      disposeManager();
    }
    muleContext=createMuleContext();
    final AtomicReference<Latch> contextStartedLatch=new AtomicReference<Latch>();
    if (isStartContext() && null != muleContext && muleContext.isStarted() == false) {
      contextStartedLatch.set(new Latch());
      muleContext.registerListener(new MuleContextNotificationListener<MuleContextNotification>(){
        public void onNotification(        MuleContextNotification notification){
          if (notification.getAction() == MuleContextNotification.CONTEXT_STARTED) {
            contextStartedLatch.get().countDown();
          }
        }
      }
);
      muleContext.start();
    }
    if (contextStartedLatch.get() != null) {
      contextStartedLatch.get().await(20,TimeUnit.SECONDS);
    }
    doSetUp();
  }
 catch (  Exception e) {
    getTestInfo().incRunCount();
    throw e;
  }
}
