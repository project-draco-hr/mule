{
  final int countDownInitialCount=2;
  final CountDownLatch countDown=new CountDownLatch(countDownInitialCount);
  UMODescriptor descriptor=getDescriptor("testComponent",FunctionalTestComponent.class.getName());
  EventCallback callback=new EventCallback(){
    public void eventReceived(    UMOEventContext context,    Object Component) throws Exception {
      callbackCalled=true;
      currentTx=context.getCurrentTransaction();
      assertNotNull(currentTx);
      assertTrue(currentTx.isBegun());
      countDown.countDown();
    }
  }
;
  initialiseComponent(descriptor,UMOTransactionConfig.ACTION_ALWAYS_BEGIN,callback);
  managementContext.start();
  addResultListener(getOutDest().getAddress(),countDown);
  send(DEFAULT_MESSAGE,false,getAcknowledgementMode());
  countDown.tryLock(LOCK_WAIT,TimeUnit.MILLISECONDS);
  assertTrue("Only " + (countDownInitialCount - countDown.getCount()) + " of "+ countDownInitialCount+ " checkpoints hit",countDown.tryLock());
  assertNotNull(currentMsg);
  assertTrue(currentMsg instanceof TextMessage);
  assertEquals(DEFAULT_MESSAGE + " Received",((TextMessage)currentMsg).getText());
  assertTrue(callbackCalled);
  assertTrue(currentTx.isBegun());
  Thread.sleep(1000);
  assertTrue(currentTx.isCommitted());
}
