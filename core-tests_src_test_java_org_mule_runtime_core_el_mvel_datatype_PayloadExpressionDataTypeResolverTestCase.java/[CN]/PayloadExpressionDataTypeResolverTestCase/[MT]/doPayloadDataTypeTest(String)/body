{
  final DataType expectedDataType=DataType.builder().type(String.class).mediaType(JSON).charset(CUSTOM_ENCODING).build();
  MVELExpressionLanguage expressionLanguage=(MVELExpressionLanguage)muleContext.getExpressionLanguage();
  final CompiledExpression compiledExpression=(CompiledExpression)compileExpression(expression,new ParserContext(expressionLanguage.getParserConfiguration()));
  MuleEvent testEvent=getTestEvent(TEST_MESSAGE);
  testEvent.setMessage(MuleMessage.builder(testEvent.getMessage()).payload(TEST_MESSAGE).mediaType(expectedDataType.getMediaType()).build());
  assertThat(dataTypeResolver.resolve(testEvent,compiledExpression),like(String.class,JSON,CUSTOM_ENCODING));
}
