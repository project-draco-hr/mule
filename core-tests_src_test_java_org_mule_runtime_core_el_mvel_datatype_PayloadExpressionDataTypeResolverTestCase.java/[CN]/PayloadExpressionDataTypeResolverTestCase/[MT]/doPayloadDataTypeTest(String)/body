{
  final DataType expectedDataType=DataType.builder().type(String.class).mediaType(JSON).charset(CUSTOM_ENCODING).build();
  MVELExpressionLanguage expressionLanguage=(MVELExpressionLanguage)muleContext.getExpressionLanguage();
  final CompiledExpression compiledExpression=(CompiledExpression)compileExpression(expression,new ParserContext(expressionLanguage.getParserConfiguration()));
  Event event=Event.builder(testEvent()).message(InternalMessage.builder(testEvent().getMessage()).payload(TEST_MESSAGE).mediaType(expectedDataType.getMediaType()).build()).build();
  assertThat(dataTypeResolver.resolve(event,compiledExpression),like(String.class,JSON,CUSTOM_ENCODING));
}
