{
  if (o == null) {
    return;
  }
  if (ignoreType(o.getClass())) {
    return;
  }
  try {
    super.applyLifecycle(o);
  }
 catch (  Exception e) {
    if (logger.isWarnEnabled()) {
      logger.warn("Failed to dispose object " + o,e);
    }
  }
  List<AnnotationMetaData> annos=AnnotationUtils.getMethodAnnotations(o.getClass(),PreDestroy.class);
  if (annos.size() == 0) {
    return;
  }
  AnnotationMetaData anno=annos.get(0);
  try {
    ((Method)anno.getMember()).invoke(o);
  }
 catch (  Exception e) {
    throw new LifecycleException(CoreMessages.failedToInvokeLifecycle((anno == null ? "null" : anno.getMember().getName()),o),e,this);
  }
}
