{
  final CountDownLatch latch=new CountDownLatch(EXPECTED_DELIVERED_TIMES);
  final MutableInt deliveredTimes=new MutableInt(0);
  MuleClient client=muleContext.getClient();
  muleContext.registerListener(new ExceptionNotificationListener<ExceptionNotification>(){
    @Override public void onNotification(    ExceptionNotification notification){
      deliveredTimes.increment();
      latch.countDown();
    }
  }
);
  client.dispatch("jms://in3?connector=activeMq",MESSAGE,null);
  if (!latch.await(TIMEOUT,TimeUnit.MILLISECONDS)) {
    fail("message should have been delivered at least 5 times");
  }
  assertThat(deliveredTimes.intValue(),is(EXPECTED_DELIVERED_TIMES));
  MuleMessage dlqMessage=client.request("jms://dlq?connector=activeMq",TIMEOUT);
  assertThat(dlqMessage,IsNull.<Object>notNullValue());
  assertThat(getPayloadAsString(dlqMessage),is(MESSAGE_EXPECTED));
}
