{
  callParameters=new HashMap();
  Map methodCalls=(Map)event.getProperty("soapMethods");
  if (methodCalls == null) {
    return;
  }
  Map.Entry entry;
  SoapMethod soapMethod;
  for (Iterator iterator=methodCalls.entrySet().iterator(); iterator.hasNext(); ) {
    entry=(Map.Entry)iterator.next();
    if (StringUtils.isEmpty(namespace)) {
      if (entry.getValue() instanceof List) {
        soapMethod=new SoapMethod(entry.getKey().toString(),(List)entry.getValue());
      }
 else {
        soapMethod=new SoapMethod(entry.getKey().toString(),entry.getValue().toString());
      }
    }
 else {
      if (entry.getValue() instanceof List) {
        soapMethod=new SoapMethod(new QName(namespace,entry.getKey().toString()),(List)entry.getValue());
      }
 else {
        soapMethod=new SoapMethod(new QName(namespace,entry.getKey().toString()),entry.getValue().toString());
      }
    }
    callParameters.put(soapMethod.getName().getLocalPart(),soapMethod);
  }
}
