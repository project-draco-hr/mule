{
  final DataType expectedDataType=DataType.builder().type(String.class).mediaType(JSON).charset(CUSTOM_ENCODING).build();
  MVELExpressionLanguage expressionLanguage=(MVELExpressionLanguage)muleContext.getExpressionLanguage();
  final CompiledExpression compiledExpression=(CompiledExpression)compileExpression(expression,new ParserContext(expressionLanguage.getParserConfiguration()));
  Event testEvent=getTestEvent(TEST_MESSAGE);
  final Builder builder=Event.builder(testEvent);
  dataTypePropagator.propagate(testEvent,builder,new DefaultTypedValue<>(TEST_MESSAGE,expectedDataType),compiledExpression);
  testEvent=builder.build();
  assertThat(testEvent.getMessage().getPayload().getDataType(),like(String.class,JSON,CUSTOM_ENCODING));
}
