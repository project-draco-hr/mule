{
  PolicyStatus status=null;
  TemplatePolicy policy=policyFactory.create();
  DefaultRetryContext context=new DefaultRetryContext(callback.getWorkDescription());
  try {
    do {
      try {
        callback.doWork(context);
        if (notifier != null) {
          notifier.sucess(context);
        }
        break;
      }
 catch (      Exception e) {
        if (notifier != null) {
          notifier.failed(context,e);
        }
        if (e instanceof InterruptedException || e instanceof InterruptedIOException) {
          logger.error("Process was interrupted (InterruptedException), ceasing process");
          break;
        }
      }
      status=policy.applyPolicy();
    }
 while (status.isOk());
    if (status == null || status.isOk()) {
      return context;
    }
 else {
      throw new FatalConnectException(CoreMessages.failedToConnect(context.getDescription(),policyFactory),status.getThrowable(),this);
    }
  }
  finally {
    if (status != null && status.getThrowable() != null) {
      if (logger.isDebugEnabled()) {
        logger.error(status.getThrowable());
      }
    }
  }
}
