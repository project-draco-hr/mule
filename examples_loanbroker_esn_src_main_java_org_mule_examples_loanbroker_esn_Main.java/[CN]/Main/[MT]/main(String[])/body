{
  Main loanConsumer=null;
  try {
    Map options=SystemUtils.getCommandLineOptions(args,CLI_OPTIONS);
    String config=(String)options.get("config");
    if (StringUtils.isNotBlank(config)) {
      loanConsumer=new Main(config);
      int i=100;
      String requests=(String)options.get("req");
      if (requests != null) {
        i=Integer.parseInt(requests);
      }
      String sync=(String)options.get("sync");
      if (sync != null) {
        synchronous=Boolean.valueOf(sync).booleanValue();
      }
      if (synchronous) {
        long start=System.currentTimeMillis();
        List results=loanConsumer.requestSend(i,"vm://customer.requests");
        System.out.println(new Message("loanbroker-example",10,String.valueOf(results.size())).getMessage());
        List output=new ArrayList(results.size());
        int x=1;
        for (Iterator iterator=results.iterator(); iterator.hasNext(); x++) {
          LoanQuote quote=(LoanQuote)iterator.next();
          output.add(x + ". " + quote.toString());
        }
        System.out.println(StringMessageUtils.getBoilerPlate(output,'*',80));
        long cur=System.currentTimeMillis();
        System.out.println(DateUtils.getFormattedDuration(cur - start));
        System.out.println(new Message("loanbroker-example",11,String.valueOf(((cur - start) / x))).getMessage());
      }
 else {
        loanConsumer.requestDispatch(i,"vm://customer.requests");
      }
    }
 else {
      loanConsumer=new Main(getInteractiveConfig());
      loanConsumer.run(synchronous);
    }
  }
 catch (  Exception e) {
    System.err.println(e.getMessage());
    e.printStackTrace(System.err);
    System.exit(1);
  }
}
