{
  ObjectTypeVisitor objectTypeVisitor=new ObjectTypeVisitor(createBeanDefinitionRequest.getComponentModel());
  createBeanDefinitionRequest.getComponentBuildingDefinition().getTypeDefinition().visit(objectTypeVisitor);
  Class<?> type=objectTypeVisitor.getType();
  if (isSimpleType(type)) {
    ComponentModel componentModel=createBeanDefinitionRequest.getComponentModel();
    componentModel.setType(type);
    Map<String,String> parameters=componentModel.getParameters();
    checkState(parameters.size() < 2,"Component model has more than one parameter when it's supposed to have at most one parameter");
    checkState(componentModel.getTextContent() != null || !componentModel.getParameters().isEmpty(),"Component model has both a parameter and an inner content");
    final String value=componentModel.getTextContent() != null ? componentModel.getTextContent() : parameters.values().iterator().next();
    Optional<TypeConverter> typeConverterOptional=createBeanDefinitionRequest.getComponentBuildingDefinition().getTypeConverter();
    componentModel.setBeanDefinition(getConvertibleBeanDefinition(type,value,typeConverterOptional));
    return true;
  }
  return false;
}
