{
  if (StringUtils.isEmpty(sqlText)) {
    throw new QueryTemplateParsingException("SQL text cannot be empty");
  }
  if (LOGGER.isDebugEnabled()) {
    LOGGER.debug("Parsing SQL: " + sqlText);
  }
  String sqlToUse="";
  List<QueryParam> parameterList=new ArrayList<>();
  char[] sqlTextChars=sqlText.toCharArray();
  int tokenStart=0;
  int paramIndex=1;
  while (tokenStart < sqlTextChars.length) {
    int skipToPosition;
    while (tokenStart < sqlTextChars.length) {
      skipToPosition=skipCommentsAndQuotes(sqlTextChars,tokenStart);
      if (tokenStart == skipToPosition) {
        break;
      }
 else {
        sqlToUse=sqlToUse + sqlText.substring(tokenStart,skipToPosition);
        tokenStart=skipToPosition;
      }
    }
    if (tokenStart >= sqlTextChars.length) {
      break;
    }
    char currentChar=sqlTextChars[tokenStart];
    int tokenEnd=tokenStart + 1;
    if (tokenEnd < sqlTextChars.length && currentChar == '#' && sqlTextChars[tokenEnd] == '[') {
      int openBrackets=0;
      while (tokenEnd < sqlTextChars.length) {
        if (sqlTextChars[tokenEnd] == ']') {
          openBrackets--;
        }
 else         if (sqlTextChars[tokenEnd] == '[') {
          openBrackets++;
        }
        if (openBrackets == 0) {
          break;
        }
        tokenEnd++;
      }
      if (tokenEnd == sqlTextChars.length) {
        throw new QueryTemplateParsingException("Invalid Mule expression: " + sqlText.substring(tokenStart));
      }
      tokenEnd++;
      String value=sqlText.substring(tokenStart,tokenEnd);
      QueryParam inputParam=new DefaultInputQueryParam(paramIndex++,UnknownDbType.getInstance(),value);
      parameterList.add(inputParam);
      sqlToUse=sqlToUse + "?";
      tokenStart=tokenEnd;
    }
 else     if (currentChar == ':') {
      if (tokenEnd < sqlTextChars.length && '=' == sqlTextChars[tokenEnd]) {
        sqlToUse=sqlToUse + currentChar;
        tokenStart++;
      }
 else {
        String parameter;
        while (tokenEnd < sqlTextChars.length && !isParameterSeparator(sqlTextChars[tokenEnd])) {
          tokenEnd++;
        }
        if (tokenEnd - tokenStart > 1) {
          sqlToUse=sqlToUse + "?";
          parameter=sqlText.substring(tokenStart + 1,tokenEnd);
          QueryParam inputParam=new DefaultInputQueryParam(paramIndex++,UnknownDbType.getInstance(),null,parameter);
          parameterList.add(inputParam);
        }
        tokenStart=tokenEnd;
      }
    }
 else     if (isParamChar(currentChar)) {
      QueryParam inputParam=new DefaultInputQueryParam(paramIndex++,UnknownDbType.getInstance(),null);
      parameterList.add(inputParam);
      tokenStart++;
      sqlToUse=sqlToUse + currentChar;
    }
 else {
      sqlToUse=sqlToUse + currentChar;
      tokenStart++;
    }
  }
  return new QueryTemplate(sqlToUse,queryType,parameterList);
}
