{
  if (!isPrereqsMet("org.mule.test.integration.providers.jms.activemq.JmsReconnectionTestCase.testReconnection()")) {
    return;
  }
  try {
    MuleManager.getInstance().start();
    MuleManager.getInstance().registerListener(this);
    long t0, t1;
    t0=System.currentTimeMillis();
    while (true) {
      ConnectionNotification event=(ConnectionNotification)events.poll(TIME_OUT,TimeUnit.MILLISECONDS);
      if (event != null && event.getAction() == ConnectionNotification.CONNECTION_FAILED) {
        break;
      }
 else {
        fail("no notification event was received: " + event);
      }
      t1=System.currentTimeMillis() - t0;
      if (t1 > TIME_OUT) {
        fail("No connection attempt");
      }
    }
    ServerTools.launchActiveMq(BROKER_URL);
    t0=System.currentTimeMillis();
    while (true) {
      ConnectionNotification event=(ConnectionNotification)events.poll(TIME_OUT,TimeUnit.MILLISECONDS);
      if (event.getAction() == ConnectionNotification.CONNECTION_CONNECTED) {
        break;
      }
      t1=System.currentTimeMillis() - t0;
      if (t1 > TIME_OUT) {
        fail("Connection should have succeeded");
      }
    }
    Thread.sleep(3000);
    MuleClient client=new MuleClient();
    MuleManager.getInstance().registerListener(new FunctionalTestNotificationListener(){
      public void onNotification(      UMOServerNotification notification){
        if (notification.getSource().equals("test1")) {
          eventLatch1.countDown();
        }
 else         if (notification.getSource().equals("test2")) {
          eventLatch2.countDown();
        }
      }
    }
);
    client.sendNoReceive("jms://reconnect.queue","test1",null);
    assertTrue("1st Event should have been received",eventLatch1.await(15000L,TimeUnit.MILLISECONDS));
    ServerTools.killActiveMq();
    t0=System.currentTimeMillis();
    while (true) {
      ConnectionNotification event=(ConnectionNotification)events.poll(TIME_OUT,TimeUnit.MILLISECONDS);
      if (event.getAction() == ConnectionNotification.CONNECTION_DISCONNECTED) {
        break;
      }
      t1=System.currentTimeMillis() - t0;
      if (t1 > TIME_OUT) {
        fail("Connection should have been lost");
      }
    }
    ServerTools.launchActiveMq(BROKER_URL);
    t0=System.currentTimeMillis();
    while (true) {
      ConnectionNotification event=(ConnectionNotification)events.poll(TIME_OUT,TimeUnit.MILLISECONDS);
      if (event.getAction() == ConnectionNotification.CONNECTION_CONNECTED) {
        break;
      }
      t1=System.currentTimeMillis() - t0;
      if (t1 > TIME_OUT) {
        fail("Connection should have succeeded");
      }
    }
    client.sendNoReceive("jms://reconnect.queue","test2",null);
    assertTrue("2nd Event should have been received",eventLatch2.await(15000L,TimeUnit.MILLISECONDS));
  }
  finally {
    ServerTools.killActiveMq();
  }
}
