{
  UMOEndpoint endpoint=TransportFactory.createEndpoint(serverEndpoint.getEndpointURI(),UMOEndpoint.ENDPOINT_TYPE_SENDER);
  endpoint.setRemoteSync(synchronous);
  updateContext(new MuleMessage(action),endpoint,synchronous);
  ByteArrayOutputStream out=new ByteArrayOutputStream();
  wireFormat.write(out,action);
  byte[] payload=out.toByteArray();
  UMOMessage message=action.getMessage();
  if (message == null) {
    message=new MuleMessage(payload);
  }
 else {
    message=new MuleMessage(payload,message);
  }
  message.addProperties(action.getProperties());
  MuleSession session=new MuleSession(message,((AbstractConnector)endpoint.getConnector()).getSessionHandler());
  UMOEvent event=new MuleEvent(message,endpoint,session,true);
  event.setTimeout(timeout);
  if (logger.isDebugEnabled()) {
    logger.debug("MuleClient sending remote call to: " + action.getResourceIdentifier() + ". At "+ serverEndpoint.toString()+ " .Event is: "+ event);
  }
  UMOMessage result=null;
  try {
    if (synchronous) {
      result=endpoint.send(event);
    }
 else {
      endpoint.dispatch(event);
      return null;
    }
    if (result != null) {
      if (result.getPayload() != null) {
        Object response;
        if (result.getPayload() instanceof InputStream) {
          response=wireFormat.read((InputStream)result.getPayload());
        }
 else {
          ByteArrayInputStream in=new ByteArrayInputStream(result.getPayloadAsBytes());
          response=wireFormat.read(in);
        }
        if (response instanceof AdminNotification) {
          response=((AdminNotification)response).getMessage();
        }
        return (UMOMessage)response;
      }
    }
  }
 catch (  Exception e) {
    throw new DispatchException(event.getMessage(),event.getEndpoint(),e);
  }
  if (logger.isDebugEnabled()) {
    logger.debug("Result of MuleClient remote call is: " + (result == null ? "null" : result.getPayload()));
  }
  return result;
}
