{
  if (DEFAULT_PROCESSING_STRATEGY.equals(processingStrategy)) {
    return new DefaultFlowProcessingStrategy();
  }
 else   if (SYNC_PROCESSING_STRATEGY.equals(processingStrategy)) {
    return new SynchronousProcessingStrategy();
  }
 else   if (ASYNC_PROCESSING_STRATEGY.equals(processingStrategy)) {
    return new AsynchronousProcessingStrategy();
  }
 else   if (QUEUED_ASYNC_PROCESSING_STRATEGY.equals(processingStrategy)) {
    return new QueuedAsynchronousProcessingStrategy();
  }
 else   if (THREAD_PER_PROCESSOR_PROCESSING_STRATEGY.equals(processingStrategy)) {
    return new ThreadPerProcessorProcessingStrategy();
  }
 else   if (QUEUED_THREAD_PER_PROCESSOR_PROCESSING_STRATEGY.equals(processingStrategy)) {
    return new QueuedThreadPerProcessorProcessingStrategy();
  }
  return null;
}
