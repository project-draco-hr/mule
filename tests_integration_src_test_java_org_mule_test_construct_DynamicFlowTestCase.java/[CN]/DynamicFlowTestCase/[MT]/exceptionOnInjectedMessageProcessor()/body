{
  List<MessageProcessor> preList=new ArrayList<MessageProcessor>();
  List<MessageProcessor> postList=new ArrayList<MessageProcessor>();
  Flow flow=getFlow("exceptionFlow");
  preList.add(new StringAppendTransformer("(pre)"));
  preList.add(new MessageProcessor(){
    @Override public MuleEvent process(    MuleEvent event) throws MuleException {
      throw new RuntimeException("force exception!");
    }
  }
);
  postList.add(new StringAppendTransformer("(post)"));
  flow.dynamicPipeline(null).injectBefore(preList).injectAfter(postList).resetAndUpdate();
  MuleMessage result=flowRunner("exceptionFlow").withPayload("source->").run().getMessage();
  assertEquals("source->(pre)(handled)",getPayloadAsString(result));
}
