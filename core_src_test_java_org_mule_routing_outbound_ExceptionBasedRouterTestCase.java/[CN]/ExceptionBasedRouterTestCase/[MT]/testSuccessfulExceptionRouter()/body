{
  Mock session=MuleTestUtils.getMockSession();
  OutboundRouterCollection messageRouter=new OutboundRouterCollection();
  messageRouter.setCatchAllStrategy(new LoggingCatchAllStrategy());
  UMOEndpoint endpoint1=new MuleEndpoint("test://Dummy1",false);
  UMOEndpoint endpoint2=new MuleEndpoint("test://Dummy2",false);
  UMOEndpoint endpoint3=new MuleEndpoint("test://Dummy3",false);
  ExceptionBasedRouter router=new ExceptionBasedRouter();
  RegExFilter filter=new RegExFilter("(.*) event");
  router.setFilter(filter);
  List endpoints=new ArrayList();
  endpoints.add(endpoint1);
  endpoints.add(endpoint2);
  endpoints.add(endpoint3);
  router.setEndpoints(endpoints);
  assertEquals(filter,router.getFilter());
  UMOMessage message=new MuleMessage("test event");
  assertTrue(router.isMatch(message));
  session.expect("sendEvent",C.eq(message,endpoint1));
  UMOMessage result=router.route(message,(UMOSession)session.proxy(),false);
  assertNull("Async call should've returned null.",result);
  session.verify();
  message=new MuleMessage("test event");
  session.expectAndReturn("sendEvent",C.eq(message,endpoint1),message);
  result=router.route(message,(UMOSession)session.proxy(),true);
  assertNotNull(result);
  assertEquals(message,result);
  session.verify();
}
