{
  Mock mockSession=MuleTestUtils.getMockSession();
  mockSession.matchAndReturn("getService",getTestService());
  OutboundEndpoint endpoint1=getTestOutboundEndpoint("TestFailEndpoint","test://Failure?synchronous=true");
  OutboundEndpoint endpoint2=getTestOutboundEndpoint("TestSuccessEndpoint","test://Success?synchronous=true");
  ExceptionBasedRouter router=new ExceptionBasedRouter();
  router.setMuleContext(muleContext);
  router.addEndpoint(endpoint1);
  router.addEndpoint(endpoint2);
  MuleMessage message=new DefaultMuleMessage("test event",muleContext);
  MuleMessage expectedResultMessage=new DefaultMuleMessage("Return event",muleContext);
  assertTrue(router.isMatch(message));
  final MuleSession session=(MuleSession)mockSession.proxy();
  MuleException rex=new RoutingException(message,endpoint1);
  mockSession.expectAndThrow("sendEvent",C.args(new IsPayloadEqual(message),C.eq(endpoint1)),rex);
  mockSession.expectAndReturn("sendEvent",C.args(new IsPayloadEqual(message),C.eq(endpoint2)),expectedResultMessage);
  MuleMessage actualResultMessage=router.route(message,session);
  mockSession.verify();
  assertEquals("Got an invalid return message.",expectedResultMessage,actualResultMessage);
}
