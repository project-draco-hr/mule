{
  Mock mockSession=MuleTestUtils.getMockSession();
  Endpoint endpoint1=getTestOutboundEndpoint("TestFailEndpoint");
  endpoint1.setEndpointURI(new MuleEndpointURI("test://Failure"));
  Endpoint endpoint2=getTestOutboundEndpoint("TestSuccessEndpoint");
  endpoint2.setEndpointURI(new MuleEndpointURI("test://Success"));
  ExceptionBasedRouter router=new ExceptionBasedRouter();
  router.addEndpoint(endpoint1);
  router.addEndpoint(endpoint2);
  MuleMessage message=new DefaultMuleMessage("test event");
  MuleMessage expectedResultMessage=new DefaultMuleMessage("Return event");
  assertTrue(router.isMatch(message));
  final MuleSession session=(MuleSession)mockSession.proxy();
  MuleException rex=new RoutingException(message,endpoint1);
  mockSession.expectAndThrow("sendEvent",C.args(C.eq(message),C.eq(endpoint1)),rex);
  mockSession.expectAndReturn("sendEvent",C.args(C.eq(message),C.eq(endpoint2)),expectedResultMessage);
  MuleMessage actualResultMessage=router.route(message,session,true);
  mockSession.verify();
  assertEquals("Got an invalid return message.",expectedResultMessage,actualResultMessage);
}
