{
  Mock mockSession=MuleTestUtils.getMockSession();
  mockSession.matchAndReturn("getService",getTestService());
  DefaultOutboundRouterCollection messageRouter=new DefaultOutboundRouterCollection();
  messageRouter.setCatchAllStrategy(new LoggingCatchAllStrategy());
  ImmutableEndpoint endpoint1=muleContext.getRegistry().lookupEndpointFactory().getOutboundEndpoint("test://Dummy1?synchronous=true");
  ImmutableEndpoint endpoint2=muleContext.getRegistry().lookupEndpointFactory().getOutboundEndpoint("test://Dummy2?synchronous=true");
  ImmutableEndpoint endpoint3=muleContext.getRegistry().lookupEndpointFactory().getOutboundEndpoint("test://Dummy3?synchronous=true");
  ExceptionBasedRouter router=new ExceptionBasedRouter();
  RegExFilter filter=new RegExFilter("(.*) event");
  router.setFilter(filter);
  List<ImmutableEndpoint> endpoints=new ArrayList<ImmutableEndpoint>();
  endpoints.add(endpoint1);
  endpoints.add(endpoint2);
  endpoints.add(endpoint3);
  router.setEndpoints(endpoints);
  assertEquals(filter,router.getFilter());
  MuleMessage message=new DefaultMuleMessage("test event",muleContext);
  mockSession.expectAndReturn("sendEvent",C.eq(message,endpoint1),message);
  MuleMessage result=router.route(message,(MuleSession)mockSession.proxy());
  assertNotNull(result);
  assertEquals(message,result);
  mockSession.verify();
}
