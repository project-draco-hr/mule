{
  Mock mockSession=MuleTestUtils.getMockSession();
  mockSession.matchAndReturn("getFlowConstruct",getTestService());
  DefaultOutboundRouterCollection messageRouter=new DefaultOutboundRouterCollection();
  messageRouter.setCatchAllStrategy(new LoggingCatchAllStrategy());
  OutboundEndpoint endpoint1=muleContext.getRegistry().lookupEndpointFactory().getOutboundEndpoint("test://Dummy1");
  OutboundEndpoint endpoint2=muleContext.getRegistry().lookupEndpointFactory().getOutboundEndpoint("test://Dummy2");
  OutboundEndpoint endpoint3=muleContext.getRegistry().lookupEndpointFactory().getOutboundEndpoint("test://Dummy3");
  Mock mockendpoint1=RouterTestUtils.getMockEndpoint(endpoint1);
  Mock mockendpoint2=RouterTestUtils.getMockEndpoint(endpoint2);
  Mock mockendpoint3=RouterTestUtils.getMockEndpoint(endpoint3);
  ExceptionBasedRouter router=new ExceptionBasedRouter();
  router.setMuleContext(muleContext);
  RegExFilter filter=new RegExFilter("(.*) event");
  router.setFilter(filter);
  List<MessageProcessor> endpoints=new ArrayList<MessageProcessor>();
  endpoints.add((OutboundEndpoint)mockendpoint1.proxy());
  endpoints.add((OutboundEndpoint)mockendpoint2.proxy());
  endpoints.add((OutboundEndpoint)mockendpoint3.proxy());
  router.setTargets(endpoints);
  assertEquals(filter,router.getFilter());
  MuleMessage message=new DefaultMuleMessage("test event",muleContext);
  assertTrue(router.isMatch(message));
  mockendpoint1.expect("process",RouterTestUtils.getArgListCheckerMuleEvent());
  MuleEvent result=router.route(new OutboundRoutingTestEvent(message,(MuleSession)mockSession.proxy()));
  assertNull("Async call should've returned null.",result);
  mockendpoint1.verify();
}
