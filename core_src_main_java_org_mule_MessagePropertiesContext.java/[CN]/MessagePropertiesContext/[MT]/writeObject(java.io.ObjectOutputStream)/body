{
  for (  Map.Entry<String,TypedValue> entry : inboundMap.entrySet()) {
    Object value=entry.getValue().getValue();
    if (value != null && !(value instanceof Serializable)) {
      String message=String.format("Unable to serialize the %s message property %s, which is of type %s ",PropertyScope.INBOUND,entry.getKey(),value);
      logger.error(message);
      throw new IOException(message);
    }
  }
  for (  Map.Entry<String,TypedValue> entry : outboundMap.entrySet()) {
    Object value=entry.getValue().getValue();
    if (value != null && !(value instanceof Serializable)) {
      String message=String.format("Unable to serialize the %s message property %s, which is of type %s ",PropertyScope.OUTBOUND,entry.getKey(),value);
      logger.error(message);
      throw new IOException(message);
    }
  }
  if (invocationMap instanceof UndefinedInvocationPropertiesMap) {
    for (    Map.Entry<String,TypedValue> entry : invocationMap.entrySet()) {
      Object value=entry.getValue().getValue();
      if (value != null && !(value instanceof Serializable)) {
        String message=String.format("Unable to serialize the invocation message property %s, which is of type %s ",entry.getKey(),value);
        logger.error(message);
        throw new IOException(message);
      }
    }
  }
  out.defaultWriteObject();
}
