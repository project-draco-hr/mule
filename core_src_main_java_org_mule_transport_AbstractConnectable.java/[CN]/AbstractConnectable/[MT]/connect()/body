{
  if (connected.get() || connecting.get()) {
    return;
  }
  if (disposed.get()) {
    throw new IllegalStateException("Requester/dispatcher has been disposed; cannot connect to resource");
  }
  if (!connecting.compareAndSet(false,true)) {
    return;
  }
  if (logger.isDebugEnabled()) {
    logger.debug("Connecting: " + this);
  }
  retryTemplate.execute(new RetryCallback(){
    public void doWork(    RetryContext context) throws Exception {
      try {
        doConnect();
        connected.set(true);
        connecting.set(false);
        if (logger.isDebugEnabled()) {
          logger.debug("Connected: " + getWorkDescription());
        }
        if (startOnConnect) {
          start();
        }
      }
 catch (      Exception e) {
        if (logger.isDebugEnabled()) {
          logger.debug("exception in doWork",e);
        }
        throw e;
      }
    }
    public String getWorkDescription(){
      return getConnectionDescription();
    }
  }
,getWorkManager());
}
