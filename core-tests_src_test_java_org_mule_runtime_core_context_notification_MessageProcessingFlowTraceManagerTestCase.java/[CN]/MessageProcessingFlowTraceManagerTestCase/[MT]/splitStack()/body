{
  MuleEvent event=buildEvent("newAnnotatedComponentCall");
  PipelineMessageNotification pipelineNotification=buildPipelineNotification(event,rootFlowConstruct.getName());
  assertThat(getContextInfo(event,rootFlowConstruct),is(""));
  manager.onPipelineNotificationStart(pipelineNotification);
  assertThat(getContextInfo(event,rootFlowConstruct),is("at " + rootFlowConstruct.getName()));
  manager.onMessageProcessorNotificationPreInvoke(buildProcessorNotification(event,mock(MessageProcessor.class),"/comp"));
  assertThat(getContextInfo(event,rootFlowConstruct),is("at " + rootFlowConstruct.getName() + "(/comp @ "+ APP_ID+ ")"));
  MuleEvent eventCopy=buildEvent("newAnnotatedComponentCall",event.getFlowCallStack().clone());
  assertThat(getContextInfo(eventCopy,rootFlowConstruct),is("at " + rootFlowConstruct.getName() + "(/comp @ "+ APP_ID+ ")"));
  manager.onPipelineNotificationComplete(pipelineNotification);
  assertThat(getContextInfo(event,rootFlowConstruct),is(""));
  final FlowConstruct asyncFlowConstruct=mock(FlowConstruct.class);
  when(asyncFlowConstruct.getName()).thenReturn("asyncFlow");
  manager.onPipelineNotificationStart(buildPipelineNotification(eventCopy,asyncFlowConstruct.getName()));
  manager.onMessageProcessorNotificationPreInvoke(buildProcessorNotification(eventCopy,mock(MessageProcessor.class),"/asyncComp"));
  assertThat(getContextInfo(eventCopy,asyncFlowConstruct),is("at " + asyncFlowConstruct.getName() + "(/asyncComp @ "+ APP_ID+ ")"+ System.lineSeparator()+ "at "+ rootFlowConstruct.getName()+ "(/comp @ "+ APP_ID+ ")"));
}
