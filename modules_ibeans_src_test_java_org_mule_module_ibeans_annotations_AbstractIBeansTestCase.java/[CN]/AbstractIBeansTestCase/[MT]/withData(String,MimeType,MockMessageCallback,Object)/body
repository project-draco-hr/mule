{
  return new Answer(){
    public Object answer(    InvocationOnMock invocation) throws Throwable {
      MimeType mime=mimeType;
      DataType ret=((MockIBean)ibean).ibeanReturnType();
      if (ret != null)       ret.setMimeType(mime.toString());
      Object data;
      if (ret == null || invocation.getMethod().isAnnotationPresent(Return.class) || !invocation.getMethod().getReturnType().isAssignableFrom(ret.getType())) {
        ret=DataTypeFactory.createFromReturnType(invocation.getMethod());
        mime=null;
      }
      data=loadData(resource,ret);
      ((MockIBean)ibean).ibeanSetMimeType(mime);
      ((MockIBean)ibean).ibeanSetMessageCallback(callback);
      Response response;
      Map<String,Object> headers=null;
      if (mime != null) {
        headers=new HashMap<String,Object>();
        headers.put(MuleProperties.CONTENT_TYPE_PROPERTY,mime.toString());
      }
      response=plugin.createResponse(data,headers,null);
      if (callback != null) {
        callback.onMessage(response);
      }
      return response;
    }
  }
;
}
