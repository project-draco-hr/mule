{
  DefaultMessageProcessorChainBuilder builder=new DefaultMessageProcessorChainBuilder();
  DefaultMessageProcessorChainBuilder nestedBuilder=new DefaultMessageProcessorChainBuilder();
  AppendingInterceptingMP mp1=new AppendingInterceptingMP("1");
  AppendingInterceptingMP mp2=new AppendingInterceptingMP("2");
  AppendingInterceptingMP mpa=new AppendingInterceptingMP("a");
  AppendingInterceptingMP mpb=new AppendingInterceptingMP("b");
  Processor chain=builder.chain(mp1,nestedBuilder.chain(mpa,mpb).build(),mp2).build();
  ((MuleContextAware)chain).setMuleContext(mock(MuleContext.class,Mockito.RETURNS_DEEP_STUBS));
  ((FlowConstructAware)chain).setFlowConstruct(mock(FlowConstruct.class));
  ((Lifecycle)chain).initialise();
  ((Lifecycle)chain).start();
  ((Lifecycle)chain).stop();
  ((Lifecycle)chain).dispose();
  assertLifecycle(mp1);
  assertLifecycle(mp2);
  assertLifecycle(mpa);
  assertLifecycle(mpb);
}
