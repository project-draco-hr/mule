{
  LinkedList<MessageProcessor> tempList=new LinkedList<MessageProcessor>();
  for (int i=processors.size() - 1; i >= 0; i--) {
    MessageProcessor processor=initializeMessageProcessor(processors.get(i));
    if ((processors.get(i)) instanceof InterceptingMessageProcessor) {
      if (i + 1 < processors.size()) {
        if (tempList.isEmpty()) {
          ((InterceptingMessageProcessor)processor).setListener(initializeMessageProcessor(processors.get(i + 1)));
        }
 else {
          ((InterceptingMessageProcessor)processor).setListener(new DefaultMessageProcessorChain(new ArrayList<MessageProcessor>(tempList)));
        }
      }
      tempList=new LinkedList<MessageProcessor>(Collections.singletonList(processor));
    }
 else {
      tempList.addFirst(initializeMessageProcessor(processor));
    }
  }
  return new InterceptingMessageProcessorChain(new DefaultMessageProcessorChain(new ArrayList<MessageProcessor>(tempList)),processors,"");
}
