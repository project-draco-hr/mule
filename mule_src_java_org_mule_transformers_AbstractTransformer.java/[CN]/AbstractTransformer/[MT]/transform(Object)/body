{
  Object result;
  String encoding=null;
  if (src instanceof UMOMessage && !isSourceTypeSupported(UMOMessage.class)) {
    encoding=((UMOMessage)src).getEncoding();
    src=((UMOMessage)src).getPayload();
  }
  if (!isSourceTypeSupported(src.getClass())) {
    if (ignoreBadInput) {
      logger.debug("Source type is incompatible with this transformer. Property 'ignoreBadInput' is set to true so the transformer chain will continue");
      return src;
    }
 else {
      throw new TransformerException(new Message(Messages.TRANSFORM_X_UNSUPORTED_TYPE_X_ENDPOINT_X,getName(),src.getClass().getName(),endpoint.getEndpointURI()),this);
    }
  }
 else {
    if (endpoint != null && endpoint.getEncoding() != null) {
      encoding=endpoint.getEncoding();
    }
    if (encoding == null) {
      encoding=MuleManager.getConfiguration().getEncoding();
    }
    if (logger.isDebugEnabled()) {
      logger.debug("Applying transformer " + getName() + " ("+ getClass().getName()+ ")");
      logger.debug("Object before transform: " + StringMessageUtils.truncate(src.toString(),200,false));
    }
    result=doTransform(src,encoding);
    if (result == null) {
      result=new NullPayload();
    }
    if (logger.isDebugEnabled()) {
      logger.debug("Object after transform: " + StringMessageUtils.truncate(result.toString(),200,false));
    }
    result=checkReturnClass(result);
    if (nextTransformer != null) {
      logger.debug("Following transformer in the chain is " + nextTransformer.getName() + " ("+ nextTransformer.getClass().getName()+ ")");
      result=nextTransformer.transform(result);
    }
  }
  return result;
}
