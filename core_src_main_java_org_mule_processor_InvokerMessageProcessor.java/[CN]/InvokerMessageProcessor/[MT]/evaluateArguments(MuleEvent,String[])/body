{
  ExpressionManager expressionManager=event.getMuleContext().getExpressionManager();
  Object[] args=new Object[expressions.length];
  try {
    for (int i=0; i < args.length; i++) {
      Object arg=null;
      if (expressions[i] != null) {
        if (expressions[i].startsWith(patternInfo.getPrefix()) && expressions[i].endsWith(patternInfo.getSuffix())) {
          arg=expressionManager.evaluate(expressions[i],event.getMessage());
        }
 else {
          arg=expressionManager.parse(expressions[i],event.getMessage());
        }
        if (arg instanceof MuleMessage) {
          arg=((MuleMessage)arg).getPayload();
        }
        if (!(argumentTypes[i].isAssignableFrom(arg.getClass()))) {
          DataType<?> source=DataTypeFactory.create(arg.getClass());
          DataType<?> target=DataTypeFactory.create(argumentTypes[i]);
          Transformer t=event.getMuleContext().getRegistry().lookupTransformer(source,target);
          arg=t.transform(arg);
        }
      }
      args[i]=arg;
    }
    return args;
  }
 catch (  TransformerException e) {
    throw new MessagingException(event,e);
  }
}
