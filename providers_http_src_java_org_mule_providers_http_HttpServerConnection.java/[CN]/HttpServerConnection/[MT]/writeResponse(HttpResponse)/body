{
  if (response == null) {
    return;
  }
  setKeepAlive(response.isKeepAlive());
  ResponseWriter writer=new ResponseWriter(this.out,encoding);
  OutputStream outsream=this.out;
  writer.println(response.getStatusLine());
  Iterator item=response.getHeaderIterator();
  while (item.hasNext()) {
    Header header=(Header)item.next();
    writer.print(header.toExternalForm());
  }
  writer.println();
  writer.flush();
  InputStream content=response.getBody();
  if (content != null) {
    Header transferenc=response.getFirstHeader(HttpConstants.HEADER_TRANSFER_ENCODING);
    if (transferenc != null) {
      response.removeHeaders(HttpConstants.HEADER_CONTENT_LENGTH);
      if (transferenc.getValue().indexOf("chunked") != -1) {
        outsream=new ChunkedOutputStream(outsream);
        byte[] tmp=new byte[4096];
        int i=0;
        while ((i=content.read(tmp)) >= 0) {
          outsream.write(tmp,0,i);
        }
        if (outsream instanceof ChunkedOutputStream) {
          ((ChunkedOutputStream)outsream).finish();
        }
      }
    }
 else {
      byte[] tmp=new byte[4096];
      int i=0;
      while ((i=content.read(tmp)) >= 0) {
        outsream.write(tmp,0,i);
      }
    }
  }
  outsream.flush();
}
