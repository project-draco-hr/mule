{
  if (initialized.get()) {
    return;
  }
  if (mBeanServer == null && !locateServer && !createServer) {
    throw new InitialisationException(new Message(Messages.JMX_CREATE_OR_LOCATE_SHOULD_BE_SET),this);
  }
  if (mBeanServer == null && locateServer) {
    List l=MBeanServerFactory.findMBeanServer(null);
    if (l != null && l.size() > 0) {
      mBeanServer=(MBeanServer)l.get(0);
    }
  }
  if (mBeanServer == null && createServer) {
    mBeanServer=MBeanServerFactory.createMBeanServer();
    serverCreated.set(true);
  }
  if (mBeanServer == null) {
    throw new InitialisationException(new Message(Messages.JMX_CANT_LOCATE_CREATE_SERVER),this);
  }
  if (connectorServerUrl != null) {
    try {
      JMXServiceURL url=new JMXServiceURL(connectorServerUrl);
      connectorServer=JMXConnectorServerFactory.newJMXConnectorServer(url,connectorServerProperties,mBeanServer);
    }
 catch (    Exception e) {
      throw new InitialisationException(new Message(Messages.FAILED_TO_CREATE_X,"Jmx Connector"),e,this);
    }
  }
  jmxSupport=jmxSupportFactory.newJmxSupport();
  ModelNotificationListener l=new ModelNotificationListener(){
    public void onNotification(    UMOServerNotification notification){
      if (notification.getAction() == ModelNotification.MODEL_STARTED) {
        try {
          registerWrapperService();
          registerStatisticsService();
          registerMuleService();
          registerConfigurationService();
          registerModelServices();
          registerComponentServices();
          registerEndpointServices();
          registerConnectorServices();
          registerRegistryService();
        }
 catch (        Exception e) {
          throw new MuleRuntimeException(new Message(Messages.X_FAILED_TO_INITIALISE,"MBeans"),e);
        }
      }
    }
  }
;
  try {
    UMOManager manager=MuleManager.getInstance();
    if (StringUtils.isBlank(manager.getId())) {
      throw new IllegalArgumentException("Manager ID is mandatory when running with JmxAgent. Give your Mule configuration a valid ID.");
    }
    MuleManager.getInstance().registerListener(l);
  }
 catch (  NotificationException e) {
    throw new InitialisationException(e,this);
  }
  initialized.compareAndSet(false,true);
}
