{
  MuleMessage message;
  if (payload instanceof MuleMessage) {
    message=(MuleMessage)payload;
  }
 else {
    message=new DefaultMuleMessage(payload,muleContext);
  }
  message.addProperties(messageProperties,PropertyScope.OUTBOUND);
  message.addProperties(messageProperties,PropertyScope.INVOCATION);
  OutboundEndpoint ep=endpointCache.getOutboundEndpoint(endpoint,exchangePattern,null);
  DefaultMuleEvent event=new DefaultMuleEvent(message,ep.getExchangePattern(),flowConstruct);
  RequestContext.setEvent(event);
  if (messageProperties.get(PROPERTY_PROCESS_TYPE) != null) {
    event.getMessage().setSessionProperty(PROPERTY_PROCESS_TYPE,messageProperties.get(PROPERTY_PROCESS_TYPE));
  }
  if (messageProperties.get(PROPERTY_PROCESS_ID) != null) {
    event.getMessage().setSessionProperty(PROPERTY_PROCESS_ID,messageProperties.get(PROPERTY_PROCESS_ID));
  }
  MuleEvent resultEvent=ep.process(event);
  MuleMessage response=null;
  if (resultEvent != null && !VoidMuleEvent.getInstance().equals(resultEvent)) {
    response=resultEvent.getMessage();
    if (response.getExceptionPayload() != null) {
      throw new DispatchException(MessageFactory.createStaticMessage("Unable to send or route message"),event,ep,response.getExceptionPayload().getRootException());
    }
  }
  return response;
}
