{
  if (!(msg.getPayload() instanceof NullPayload)) {
    String mimeType=msg.getStringProperty(HttpConstants.HEADER_CONTENT_TYPE,null);
    if (src instanceof String) {
      if (mimeType != null) {
        int parameterIndex=mimeType.indexOf(";");
        if (parameterIndex > 0) {
          mimeType=mimeType.substring(0,parameterIndex);
        }
      }
      if (mimeType == null) {
        mimeType=HttpConstants.DEFAULT_CONTENT_TYPE;
      }
      postMethod.setRequestEntity(new StringRequestEntity(src.toString(),mimeType,encoding));
      return;
    }
    if (mimeType == null) {
      mimeType=HttpConstants.DEFAULT_CONTENT_TYPE;
    }
    if (encoding != null && !"UTF-8".equals(encoding.toUpperCase()) && mimeType.indexOf("charset") == -1) {
      mimeType+="; charset=" + encoding;
    }
    if (src instanceof InputStream) {
      if (mimeType == null) {
        mimeType=HttpConstants.DEFAULT_CONTENT_TYPE;
      }
      postMethod.setRequestEntity(new InputStreamRequestEntity((InputStream)src,mimeType));
    }
 else     if (src instanceof byte[]) {
      if (mimeType == null) {
        mimeType=HttpConstants.DEFAULT_CONTENT_TYPE;
      }
      postMethod.setRequestEntity(new ByteArrayRequestEntity((byte[])src,mimeType));
    }
 else     if (src instanceof OutputHandler) {
      MuleEvent event=RequestContext.getEvent();
      postMethod.setRequestEntity(new StreamPayloadRequestEntity((OutputHandler)src,event));
    }
 else {
      if (mimeType == null) {
        mimeType=HttpConstants.DEFAULT_CONTENT_TYPE;
      }
      byte[] buffer=SerializationUtils.serialize((Serializable)src);
      postMethod.setRequestEntity(new ByteArrayRequestEntity(buffer,mimeType));
    }
  }
}
