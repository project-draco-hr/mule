{
  DefaultMessageProcessorChainBuilder builder=new DefaultMessageProcessorChainBuilder();
  builder.setName("'async' child chain");
  for (  Object processor : messageProcessors) {
    if (processor instanceof MessageProcessor) {
      builder.chain((MessageProcessor)processor);
    }
 else     if (processor instanceof MessageProcessorBuilder) {
      builder.chain((MessageProcessorBuilder)processor);
    }
 else {
      throw new IllegalArgumentException("MessageProcessorBuilder should only have MessageProcessor's or MessageProcessorBuilder's configured");
    }
  }
  return new AsyncDelegateMessageProcessor(builder.build(),processingStrategy,new ProcessingStrategy.ThreadNameSource(){
    @Override public String getName(){
      return name;
    }
  }
);
}
