{
  try {
    List<File> files=this.listFiles();
    if (logger.isDebugEnabled()) {
      logger.debug("Files: " + files.toString());
    }
    Comparator<File> comparator=getComparator();
    if (comparator != null) {
      Collections.sort(files,comparator);
    }
    for (    File file : files) {
      if (getLifecycleState().isStopping()) {
        break;
      }
      if (file.isFile()) {
        Lock fileLock=lockFactory.createLock(file.getName());
        if (fileLock.tryLock()) {
          try {
            if (file.length() == 0) {
              if (logger.isDebugEnabled()) {
                logger.debug("Found empty file '" + file.getName() + "'. Skipping file.");
              }
              continue;
            }
            String fileAbsolutePath=file.getAbsolutePath();
            try {
              filesBeingProcessingObjectStore.store(fileAbsolutePath,fileAbsolutePath);
              if (logger.isDebugEnabled()) {
                logger.debug("Flag for '" + fileAbsolutePath + "' stored successfully.");
              }
            }
 catch (            ObjectAlreadyExistsException e) {
              if (logger.isDebugEnabled()) {
                logger.debug(String.format("Flag for '%s' being processed is on. Skipping file.",fileAbsolutePath));
              }
              continue;
            }
            if (file.exists()) {
              processFile(file);
            }
          }
  finally {
            fileLock.unlock();
          }
        }
      }
    }
  }
 catch (  Exception e) {
    getEndpoint().getMuleContext().getExceptionListener().handleException(e);
  }
}
