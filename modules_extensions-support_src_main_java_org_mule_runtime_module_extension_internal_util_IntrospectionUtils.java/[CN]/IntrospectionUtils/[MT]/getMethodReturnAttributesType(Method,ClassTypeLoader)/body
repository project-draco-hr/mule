{
  Type type=null;
  ResolvableType methodType=getMethodResolvableType(method);
  if (isInterceptingCallback(methodType)) {
    methodType=unwrapGenericFromClass(InterceptingCallback.class,methodType,0);
  }
  if (methodType.getRawClass().equals(OperationResult.class)) {
    ResolvableType genericType=methodType.getGenerics()[1];
    if (genericType.getRawClass() != null) {
      type=genericType.getType();
    }
  }
  return type != null ? typeLoader.load(type) : typeBuilder().voidType().build();
}
