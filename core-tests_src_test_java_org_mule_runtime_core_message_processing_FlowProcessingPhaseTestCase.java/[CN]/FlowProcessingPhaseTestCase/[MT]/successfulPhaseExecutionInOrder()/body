{
  when(mockContext.supportsAsynchronousProcessing()).thenReturn(false);
  phase.runPhase(mockRequestResponseTemplate,mockContext,mockNotifier);
  InOrder inOrderVerify=Mockito.inOrder(mockContext,mockContext.getFlowConstruct(),mockRequestResponseTemplate,mockNotifier);
  inOrderVerify.verify(mockContext,atLeastOnce()).getTransactionConfig();
  inOrderVerify.verify(mockContext.getFlowConstruct()).getExceptionListener();
  inOrderVerify.verify(mockRequestResponseTemplate).getMuleEvent();
  inOrderVerify.verify(mockRequestResponseTemplate).beforeRouteEvent(any(MuleEvent.class));
  inOrderVerify.verify(mockRequestResponseTemplate).routeEvent(any(MuleEvent.class));
  inOrderVerify.verify(mockRequestResponseTemplate).afterRouteEvent(any(MuleEvent.class));
  inOrderVerify.verify(mockRequestResponseTemplate).afterSuccessfulProcessingFlow(any(MuleEvent.class));
  inOrderVerify.verify(mockNotifier).phaseSuccessfully();
  verifyOnlySuccessfulWasCalled();
}
