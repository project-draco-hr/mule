{
  TestSubscriptionEventBean subscriptionBean=(TestSubscriptionEventBean)context.getBean("testSubscribingEventBean1");
  assertNotNull(subscriptionBean);
  MuleEventMulticaster multicaster=(MuleEventMulticaster)context.getBean(AbstractApplicationContext.APPLICATION_EVENT_MULTICASTER_BEAN_NAME);
  assertNotNull(multicaster);
  EventCallback callback=new EventCallback(){
    public void eventReceived(    UMOEventContext context,    Object o) throws Exception {
      eventCount++;
    }
  }
;
  subscriptionBean.setEventCallback(callback);
  multicaster.removeApplicationListener(subscriptionBean);
  MuleClient client=new MuleClient();
  client.send("vm://event.multicaster","Test Spring Event",null);
  afterPublishEvent();
  assertEquals(0,eventCount);
  multicaster.addApplicationListener(subscriptionBean);
  client.send("vm://event.multicaster","Test Spring Event",null);
  afterPublishEvent();
  assertEquals(1,eventCount);
  eventCount=0;
  multicaster.removeAllListeners();
  client.send("vm://event.multicaster","Test Spring Event",null);
  afterPublishEvent();
  assertEquals(0,eventCount);
  multicaster.addApplicationListener(subscriptionBean);
  context.refresh();
  subscriptionBean.setEventCallback(null);
}
