{
  final RequestPatternBuilder verification=postRequestedFor(urlEqualTo(TOKEN_PATH)).withRequestBody(containing(OAuthConstants.GRANT_TYPE_PARAMETER + "=" + URLEncoder.encode(OAuthConstants.GRANT_TYPE_CLIENT_CREDENTIALS,StandardCharsets.UTF_8.name())));
  if (encodeInBody == true) {
    verification.withRequestBody(containing(OAuthConstants.CLIENT_ID_PARAMETER + "=" + URLEncoder.encode(clientId.getValue(),StandardCharsets.UTF_8.name()))).withRequestBody(containing(OAuthConstants.CLIENT_SECRET_PARAMETER + "=" + URLEncoder.encode(clientSecret.getValue(),StandardCharsets.UTF_8.name())));
  }
 else {
    verification.withHeader(HttpHeaders.Names.AUTHORIZATION,containing("Basic " + Base64.encodeBase64String(String.format("%s:%s",clientId.getValue(),clientSecret.getValue()).getBytes())));
  }
  if (scope != null) {
    verification.withRequestBody(containing(OAuthConstants.SCOPE_PARAMETER + "=" + URLEncoder.encode(scope,StandardCharsets.UTF_8.name())));
  }
  wireMockRule.verify(verification);
}
