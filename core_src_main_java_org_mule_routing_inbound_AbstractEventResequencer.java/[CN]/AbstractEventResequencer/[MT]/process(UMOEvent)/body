{
  UMOEvent[] result=null;
  if (this.isMatch(event)) {
    boolean miss=false;
    final Object groupId=this.getEventGroupIdForEvent(event);
    while (true) {
      if (miss) {
        try {
          Thread.sleep(1);
        }
 catch (        InterruptedException interrupted) {
          Thread.currentThread().interrupt();
        }
      }
      EventGroup group=this.getEventGroup(groupId);
      if (group == null) {
        group=this.addEventGroup(this.createEventGroup(event,groupId));
      }
synchronized (group) {
        if (group != this.getEventGroup(groupId)) {
          miss=true;
          continue;
        }
        group.addEvent(event);
        if (this.shouldResequenceEvents(group)) {
          result=this.resequenceEvents(group);
          this.removeEventGroup(group);
        }
        break;
      }
    }
  }
  return result;
}
