{
  if (message instanceof BytesMessage) {
    BytesMessage bMsg=(BytesMessage)message;
    bMsg.reset();
    long bmBodyLength=bMsg.getBodyLength();
    if (bmBodyLength > Integer.MAX_VALUE) {
      throw new JMSException("Size of BytesMessage exceeds Integer.MAX_VALUE; " + "please consider using JMS StreamMessage instead");
    }
    byte[] bytes=new byte[(int)bmBodyLength];
    bMsg.readBytes(bytes);
    return bytes;
  }
 else   if (message instanceof StreamMessage) {
    StreamMessage sMsg=(StreamMessage)message;
    sMsg.reset();
    ByteArrayOutputStream baos=new ByteArrayOutputStream();
    byte[] buffer=new byte[4096];
    int len;
    while ((len=sMsg.readBytes(buffer)) != -1) {
      baos.write(buffer,0,len);
    }
    return baos.toByteArray();
  }
 else   if (message instanceof ObjectMessage) {
    ObjectMessage oMsg=(ObjectMessage)message;
    ByteArrayOutputStream baos=new ByteArrayOutputStream();
    ObjectOutputStream os=new ObjectOutputStream(baos);
    os.writeObject(oMsg.getObject());
    os.flush();
    os.close();
    return baos.toByteArray();
  }
 else   if (message instanceof TextMessage) {
    TextMessage tMsg=(TextMessage)message;
    String tMsgText=tMsg.getText();
    if (null == tMsgText) {
      return ArrayUtils.EMPTY_BYTE_ARRAY;
    }
 else {
      return tMsgText.getBytes();
    }
  }
 else {
    throw new JMSException("Cannot get bytes from Map Message");
  }
}
