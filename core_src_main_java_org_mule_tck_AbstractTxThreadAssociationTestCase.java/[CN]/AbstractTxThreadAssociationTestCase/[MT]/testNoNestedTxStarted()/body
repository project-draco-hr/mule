{
  muleContext.setTransactionManager(tm);
  assertNull("There sould be no current transaction associated.",tm.getTransaction());
  tm.setTransactionTimeout(TRANSACTION_TIMEOUT_SECONDS);
  UMOTransactionConfig config=new MuleTransactionConfig();
  config.setFactory(new XaTransactionFactory());
  config.setAction(UMOTransactionConfig.ACTION_ALWAYS_BEGIN);
  TransactionTemplate template=new TransactionTemplate(config,new DefaultExceptionStrategy(),muleContext);
  final UMOTransactionConfig nestedConfig=new MuleTransactionConfig();
  nestedConfig.setFactory(new XaTransactionFactory());
  nestedConfig.setAction(UMOTransactionConfig.ACTION_BEGIN_OR_JOIN);
  template.execute(new TransactionCallback(){
    public Object doInTransaction() throws Exception {
      TransactionTemplate nestedTemplate=new TransactionTemplate(nestedConfig,new DefaultExceptionStrategy(),muleContext);
      return nestedTemplate.execute(new TransactionCallback(){
        public Object doInTransaction() throws Exception {
          return null;
        }
      }
);
    }
  }
);
}
