{
  Map.Entry header;
  String headerName;
  Map p=context.getProperties();
  for (Iterator iterator=p.entrySet().iterator(); iterator.hasNext(); ) {
    header=(Map.Entry)iterator.next();
    headerName=header.getKey().toString();
    if ((HttpConstants.REQUEST_HEADER_NAMES.get(headerName) == null) && header.getValue() instanceof String) {
      if (headerName.startsWith(MuleProperties.PROPERTY_PREFIX)) {
        headerName="X-" + headerName;
      }
      if (headerName.startsWith(HttpConstants.HEADER_CONTENT_LENGTH) && httpMethod.getResponseHeader(HttpConstants.HEADER_CONTENT_LENGTH) == null) {
        httpMethod.addRequestHeader(headerName,(String)header.getValue());
      }
 else {
        httpMethod.addRequestHeader(headerName,(String)header.getValue());
      }
    }
  }
  if (context.getMessage().getPayload() instanceof InputStream) {
    httpMethod.addRequestHeader(HttpConstants.HEADER_CONTENT_TYPE,"multipart/related");
  }
}
