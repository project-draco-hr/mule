{
  OutputHandler handler=new OutputHandler(){
    public void write(    UMOEvent event,    OutputStream out) throws IOException {
      try {
        Attachments atts=message.getAttachments();
        if (atts != null && atts.size() > 0) {
          atts.write(out);
        }
 else {
          XMLStreamWriter writer=STAXUtils.createXMLStreamWriter(out,message.getEncoding(),context);
          message.getSerializer().writeMessage(message,writer,context);
          try {
            writer.flush();
            writer.close();
          }
 catch (          XMLStreamException e) {
            logger.error(e);
            throw new XFireException("Couldn't send message.",e);
          }
        }
      }
 catch (      XFireException e) {
        logger.error("Couldn't send message.",e);
        throw new IOException(e.getMessage());
      }
    }
  }
;
  DefaultMessageAdapter sp=new DefaultMessageAdapter(handler);
  sp.setProperty(HttpConnector.HTTP_METHOD_PROPERTY,HttpConstants.METHOD_POST);
  writeHeaders(message,sp);
  UMOMessage msg=RequestContext.getEvent().getMessage();
  for (Iterator i=msg.getPropertyNames().iterator(); i.hasNext(); ) {
    String propertyName=(String)i.next();
    if (!(propertyName.startsWith(MuleProperties.PROPERTY_PREFIX))) {
      sp.setProperty(propertyName,msg.getProperty(propertyName));
    }
  }
  System.out.println(sp.getProperty(MuleProperties.MULE_REPLY_TO_PROPERTY));
  System.out.println(sp.getReplyTo());
  UMOMessage result=send(getUri(),sp);
  if (result != null) {
    InMessage inMessage;
    String contentType=sp.getStringProperty(HttpConstants.HEADER_CONTENT_TYPE,"text/xml");
    InputStream in=(InputStream)result.getPayload(InputStream.class);
    try {
      if (contentType.toLowerCase().indexOf("multipart/related") != -1) {
        try {
          Attachments atts=new JavaMailAttachments(in,contentType);
          InputStream msgIs=atts.getSoapMessage().getDataHandler().getInputStream();
          inMessage=new InMessage(STAXUtils.createXMLStreamReader(msgIs,message.getEncoding(),context),getUri());
          inMessage.setAttachments(atts);
        }
 catch (        MessagingException e) {
          throw new IOException(e.getMessage());
        }
      }
 else {
        inMessage=new InMessage(STAXUtils.createXMLStreamReader(in,message.getEncoding(),context),getUri());
      }
      getEndpoint().onReceive(context,inMessage);
    }
  finally {
      try {
        in.close();
      }
 catch (      IOException e) {
        logger.warn("Could not close stream.",e);
      }
    }
  }
}
