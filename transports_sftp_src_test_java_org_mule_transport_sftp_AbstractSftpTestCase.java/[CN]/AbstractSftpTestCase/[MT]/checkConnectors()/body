{
  assertTrue("context is not started",muleContext.getLifecycleManager().getState().isStarted());
  Map<String,Connector> connectorMap=muleContext.getRegistry().lookupByType(Connector.class);
  Map<String,InboundEndpoint> inboundMap=muleContext.getRegistry().lookupByType(InboundEndpoint.class);
  Map<String,Service> serviceMap=muleContext.getRegistry().lookupByType(Service.class);
  Map<String,Model> modelMap=muleContext.getRegistry().lookupByType(Model.class);
  Map<String,Component> componentMap=muleContext.getRegistry().lookupByType(Component.class);
  Iterator it=connectorMap.entrySet().iterator();
  while (it.hasNext()) {
    Map.Entry<String,Connector> pairs=(Map.Entry<String,Connector>)it.next();
    logger.debug("checking connector : " + pairs.getKey());
    assertTrue(pairs.getKey() + " is not started",pairs.getValue().isStarted());
  }
  it=serviceMap.entrySet().iterator();
  while (it.hasNext()) {
    Map.Entry<String,Service> pairs=(Map.Entry<String,Service>)it.next();
    assertTrue(pairs.getKey() + " is not started",pairs.getValue().isStarted());
  }
  it=modelMap.entrySet().iterator();
  while (it.hasNext()) {
    Map.Entry<String,Model> pairs=(Map.Entry<String,Model>)it.next();
    assertTrue(pairs.getKey() + " is not started",pairs.getValue().getLifecycleState().isStarted());
  }
}
