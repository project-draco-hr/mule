{
  registerBeanDefinitionParser("process",new ProcessComponentDefinitionParser());
  registerMuleBeanDefinitionParser("process-definition",new ChildMapEntryDefinitionParser("processDefinitions","name","resource"));
  try {
    registerBeanDefinitionParser("jbpm",new MuleOrphanDefinitionParser(Class.forName(JBPM_WRAPPER_CLASS),true));
  }
 catch (  ClassNotFoundException e) {
    logger.debug("Element <bpm:jbpm> will not available because " + JBPM_WRAPPER_CLASS + " is not on the classpath");
  }
  registerBeanDefinitionParser("rules",new RulesComponentDefinitionParser());
  try {
    registerBeanDefinitionParser("drools",new MuleOrphanDefinitionParser(Class.forName(DROOLS_WRAPPER_CLASS),true));
  }
 catch (  ClassNotFoundException e) {
    logger.debug("Element <drools> will not available in the bpm: namespace because it is not on the classpath");
  }
}
