{
  try {
    Object data=event.getTransformedMessage();
    String filename=(String)event.getProperty(FileConnector.PROPERTY_FILENAME);
    if (filename == null) {
      String outPattern=(String)event.getProperty(FileConnector.PROPERTY_OUTPUT_PATTERN);
      if (outPattern == null) {
        outPattern=connector.getOutputPattern();
      }
      filename=generateFilename(event,outPattern);
    }
    if (filename == null) {
      throw new IOException("Filename is null");
    }
    FileObject file=connector.getFsManager().resolveFile(connector.getDirectory() + "/" + filename);
    byte[] buf;
    if (data instanceof byte[]) {
      buf=(byte[])data;
    }
 else {
      buf=data.toString().getBytes();
    }
    logger.info("Writing file to: " + file.getURL());
    OutputStream outputStream=file.getContent().getOutputStream(connector.isOutputAppend());
    try {
      outputStream.write(buf);
    }
  finally {
      outputStream.close();
    }
    if (connector.isVersionControlled()) {
      if (!connector.isOutputAppend()) {
        connector.getWCClient().doAdd(new File(file.getName().getPath()),true,true,true,true);
      }
      File[] paths={new File(file.getName().getPath())};
      SVNCommitClient commitClient=connector.getCommitClient();
      SVNCommitPacket packet=commitClient.doCollectCommitItems(paths,true,true,true);
      commitClient.doCommit(packet,true,"Praxis");
    }
  }
 catch (  Exception e) {
    getConnector().handleException(e);
  }
}
