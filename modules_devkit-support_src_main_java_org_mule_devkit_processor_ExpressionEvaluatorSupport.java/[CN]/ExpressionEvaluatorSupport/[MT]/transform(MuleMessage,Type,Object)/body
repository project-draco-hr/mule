{
  if (source == null) {
    return source;
  }
  Object target=null;
  if (isList(source.getClass())) {
    if (isList(expectedType)) {
      List newList=new ArrayList();
      Type valueType=((ParameterizedType)expectedType).getActualTypeArguments()[0];
      ListIterator iterator=((List)source).listIterator();
      while (iterator.hasNext()) {
        Object subTarget=iterator.next();
        newList.add(transform(muleMessage,valueType,subTarget));
      }
      target=newList;
    }
 else {
      target=source;
    }
  }
 else {
    if (isMap(source.getClass())) {
      if (isMap(expectedType)) {
        Type keyType=Object.class;
        Type valueType=Object.class;
        if (expectedType instanceof ParameterizedType) {
          keyType=((ParameterizedType)expectedType).getActualTypeArguments()[0];
          valueType=((ParameterizedType)expectedType).getActualTypeArguments()[1];
        }
        Map map=((Map)source);
        Map newMap=new HashMap();
        for (        Object entryObj : map.entrySet()) {
{
            Map.Entry entry=((Map.Entry)entryObj);
            Object newKey=transform(muleMessage,keyType,entry.getKey());
            Object newValue=transform(muleMessage,valueType,entry.getValue());
            newMap.put(newKey,newValue);
          }
        }
        target=newMap;
      }
 else {
        target=source;
      }
    }
 else {
      target=source;
    }
  }
  if ((target != null) && (!isAssignableFrom(expectedType,target.getClass()))) {
    DataType sourceDataType=DataTypeFactory.create(target.getClass());
    if (expectedType instanceof ParameterizedType) {
      expectedType=((ParameterizedType)expectedType).getRawType();
    }
    DataType targetDataType=DataTypeFactory.create(((Class)expectedType));
    Transformer t=muleMessage.getMuleContext().getRegistry().lookupTransformer(sourceDataType,targetDataType);
    return t.transform(target);
  }
 else {
    return target;
  }
}
