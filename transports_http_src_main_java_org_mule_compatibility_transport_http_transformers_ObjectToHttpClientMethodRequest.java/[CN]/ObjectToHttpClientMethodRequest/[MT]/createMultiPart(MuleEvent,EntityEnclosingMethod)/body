{
  final MuleMessage msg=event.getMessage();
  Part[] parts;
  int i=0;
  if (msg.getPayload() instanceof NullPayload) {
    parts=new Part[msg.getOutboundAttachmentNames().size()];
  }
 else {
    parts=new Part[msg.getOutboundAttachmentNames().size() + 1];
    parts[i++]=new FilePart("payload",new ByteArrayPartSource("payload",event.getMessageAsBytes()));
  }
  for (final Iterator<String> iterator=msg.getOutboundAttachmentNames().iterator(); iterator.hasNext(); i++) {
    final String attachmentName=iterator.next();
    final DataHandler dh=msg.getOutboundAttachment(attachmentName);
    String fileName=dh.getName();
    if (dh.getDataSource() instanceof StringDataSource) {
      final StringDataSource ds=(StringDataSource)dh.getDataSource();
      parts[i]=new StringPart(ds.getName(),IOUtils.toString(ds.getInputStream()));
    }
 else {
      if (dh.getDataSource() instanceof FileDataSource) {
        fileName=((FileDataSource)dh.getDataSource()).getFile().getName();
      }
 else       if (dh.getDataSource() instanceof URLDataSource) {
        fileName=((URLDataSource)dh.getDataSource()).getURL().getFile();
        final int x=fileName.lastIndexOf("/");
        if (x > -1) {
          fileName=fileName.substring(x + 1);
        }
      }
 else       if (dh.getDataSource() instanceof PartDataSource) {
        org.mule.compatibility.transport.http.multipart.Part part=((PartDataSource)dh.getDataSource()).getPart();
        if (part instanceof MultiPartInputStream.MultiPart) {
          String partFileName=((MultiPartInputStream.MultiPart)part).getContentDispositionFilename();
          if (!StringUtils.isEmpty(partFileName)) {
            fileName=partFileName;
          }
        }
      }
      parts[i]=new FilePart(attachmentName,new ByteArrayPartSource(StringUtils.defaultString(fileName,attachmentName),IOUtils.toByteArray(dh.getInputStream())),dh.getContentType(),null);
    }
  }
  return new MultipartRequestEntity(parts,method.getParams());
}
