{
  final MuleMessage msg=event.getMessage();
  if (msg.getPayload() != null) {
    String outboundMimeType=msg.getDataType().getMediaType().toRfcString();
    if (outboundMimeType == null) {
      outboundMimeType=(getEndpoint() != null && getEndpoint().getMimeType() != null ? getEndpoint().getMimeType().toRfcString() : null);
    }
    if (outboundMimeType == null) {
      if (!msg.getDataType().getMediaType().equals(MediaType.ANY)) {
        outboundMimeType=msg.getDataType().getMediaType().toRfcString();
      }
 else {
        outboundMimeType=HttpConstants.DEFAULT_CONTENT_TYPE;
        if (logger.isDebugEnabled()) {
          logger.debug("Content-Type not set on outgoing request, defaulting to: " + outboundMimeType);
        }
      }
    }
    if (encoding != null && !UTF_8.equals(encoding) && outboundMimeType.indexOf(CHARSET_PARAM_NAME) == -1) {
      outboundMimeType+="; charset=" + encoding.name();
    }
    final String httpVersion=msg.getOutboundProperty(HttpConnector.HTTP_VERSION_PROPERTY,HttpConstants.HTTP11);
    if (HttpConstants.HTTP10.equals(httpVersion)) {
      try {
        src=event.getMessageAsBytes(muleContext);
      }
 catch (      final Exception e) {
        throw new TransformerException(this,e);
      }
    }
    if (msg.getOutboundAttachmentNames() != null && msg.getOutboundAttachmentNames().size() > 0) {
      try {
        postMethod.setRequestEntity(createMultiPart(event,postMethod));
        return;
      }
 catch (      final Exception e) {
        throw new TransformerException(this,e);
      }
    }
    if (src instanceof String) {
      postMethod.setRequestEntity(new StringRequestEntity(src.toString(),outboundMimeType,encoding.name()));
      return;
    }
    if (src instanceof InputStream) {
      postMethod.setRequestEntity(new InputStreamRequestEntity((InputStream)src,outboundMimeType));
    }
 else     if (src instanceof byte[]) {
      postMethod.setRequestEntity(new ByteArrayRequestEntity((byte[])src,outboundMimeType));
    }
 else     if (src instanceof OutputHandler) {
      final MuleEvent eventFromContext=getCurrentEvent();
      postMethod.setRequestEntity(new StreamPayloadRequestEntity((OutputHandler)src,eventFromContext));
    }
 else {
      final byte[] buffer=muleContext.getObjectSerializer().serialize(src);
      postMethod.setRequestEntity(new ByteArrayRequestEntity(buffer,outboundMimeType));
    }
  }
 else   if (msg.getOutboundAttachmentNames() != null && msg.getOutboundAttachmentNames().size() > 0) {
    try {
      postMethod.setRequestEntity(createMultiPart(event,postMethod));
    }
 catch (    Exception e) {
      throw new TransformerException(this,e);
    }
  }
}
