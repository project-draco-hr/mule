{
  QName retType=returnType;
  if (expression.startsWith("[")) {
    int x=expression.indexOf("]");
    if (x == -1) {
      throw new IllegalArgumentException("Expression is malformed: " + expression);
    }
    String type=expression.substring(1,x);
    expression=expression.substring(x + 1);
    if (type.equalsIgnoreCase("boolean")) {
      retType=XPathConstants.BOOLEAN;
    }
 else     if (type.equalsIgnoreCase("string")) {
      retType=XPathConstants.STRING;
    }
 else     if (type.equalsIgnoreCase("node")) {
      retType=XPathConstants.NODE;
    }
 else     if (type.equalsIgnoreCase("nodeset")) {
      retType=XPathConstants.NODESET;
    }
 else     if (type.equalsIgnoreCase("number")) {
      retType=XPathConstants.NUMBER;
    }
 else {
      throw new IllegalArgumentException("Result type not recognised: " + type + ". Use either boolean, string, number, node or nodeset.");
    }
  }
  try {
    Node payload=muleContext.getTransformationService().getPayload(message,DataTypeFactory.create(Node.class));
    XPathExpression xpath=getXPath(expression);
    return xpath.evaluate(payload,retType);
  }
 catch (  Exception e) {
    throw new MuleRuntimeException(XmlMessages.failedToProcessXPath(expression),e);
  }
}
