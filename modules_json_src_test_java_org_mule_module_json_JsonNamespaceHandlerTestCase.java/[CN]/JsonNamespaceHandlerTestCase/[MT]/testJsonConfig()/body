{
  String javaVersion=System.getProperty("java.specification.version","<None>");
  String osName=System.getProperty("os.name","<None>");
  if (javaVersion.equals("1.6") && osName.startsWith("Windows")) {
    return;
  }
  IsJsonFilter filter=(IsJsonFilter)muleContext.getRegistry().lookupObject("jsonFilter");
  assertNotNull(filter);
  assertTrue(filter.isValidateParsing());
  ObjectToJson serializer=(ObjectToJson)muleContext.getRegistry().lookupObject("fruitCollectionToJson");
  assertNotNull(serializer);
  assertEquals(String.class,serializer.getReturnClass());
  assertEquals(FruitCollection.class,serializer.getSourceClass());
  assertEquals(3,serializer.getSerializationMixins().size());
  JsonToObject deserializer=(JsonToObject)muleContext.getRegistry().lookupObject("jsonToFruitCollection");
  assertNotNull(deserializer);
  assertEquals(FruitCollection.class,deserializer.getReturnClass());
  assertEquals(1,deserializer.getDeserializationMixins().size());
  FruitCollection fc=JsonBeanRoundTripTestCase.JSON_OBJECT;
  String result=(String)serializer.transform(fc);
  assertNotNull(result);
  assertEquals(JsonBeanRoundTripTestCase.JSON_STRING,result);
  FruitCollection result2=(FruitCollection)deserializer.transform(result);
  assertNotNull(result2);
  assertEquals(fc,result2);
  JsonToXml jToX=(JsonToXml)muleContext.getRegistry().lookupObject("jToX");
  assertNotNull(jToX);
  XmlToJson xToJ=(XmlToJson)muleContext.getRegistry().lookupObject("XtoJ");
  assertNotNull(xToJ);
}
