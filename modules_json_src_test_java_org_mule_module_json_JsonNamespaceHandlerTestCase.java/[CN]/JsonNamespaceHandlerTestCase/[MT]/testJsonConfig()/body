{
  JsonToXml jToX=muleContext.getRegistry().lookupObject("jToX");
  assertNotNull(jToX);
  XmlToJson xToJ=muleContext.getRegistry().lookupObject("xToJ");
  assertNotNull(xToJ);
  JsonXsltTransformer jToJ=muleContext.getRegistry().lookupObject("jToJ");
  assertNotNull(jToJ);
  assertNotNull(jToJ.getXslt());
  JsonSchemaValidationFilter jvf=muleContext.getRegistry().lookupObject("jvf");
  assertNotNull(jvf);
  assertNotNull(jvf.getSchemaLocations());
  String javaVersion=System.getProperty("java.specification.version","<None>");
  String osName=System.getProperty("os.name","<None>");
  if (javaVersion.equals("1.6") && osName.startsWith("Windows")) {
    return;
  }
  IsJsonFilter filter=muleContext.getRegistry().lookupObject("jsonFilter");
  assertNotNull(filter);
  assertTrue(filter.isValidateParsing());
  ObjectToJson serializer=muleContext.getRegistry().lookupObject("fruitCollectionToJson");
  serializer.initialise();
  assertNotNull(serializer);
  assertEquals(String.class,serializer.getReturnDataType().getType());
  assertEquals(FruitCollection.class,serializer.getSourceClass());
  assertEquals(3,serializer.getSerializationMixins().size());
  JsonToObject deserializer=muleContext.getRegistry().lookupObject("jsonToFruitCollection");
  assertNotNull(deserializer);
  assertEquals(FruitCollection.class,deserializer.getReturnDataType().getType());
  assertEquals(1,deserializer.getDeserializationMixins().size());
  FruitCollection fc=JsonBeanRoundTripTestCase.JSON_OBJECT;
  String result=(String)serializer.transform(fc);
  assertNotNull(result);
  ObjectMapper mapper=new ObjectMapper();
  JsonNode actualJsonNode=mapper.readTree(result);
  JsonNode expectedJsonNode=mapper.readTree(JsonBeanRoundTripTestCase.JSON_STRING);
  assertEquals(actualJsonNode,expectedJsonNode);
  FruitCollection result2=(FruitCollection)deserializer.transform(result);
  assertNotNull(result2);
  assertEquals(fc,result2);
}
