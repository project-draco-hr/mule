{
  try {
    String correlationId=(String)propertyExtractor.getProperty(MuleProperties.MULE_CORRELATION_ID_PROPERTY,message);
    initialise(message);
    UMOEndpoint endpoint;
    UMOMessage result=null;
    Document part;
    List parts=(List)nodes.get();
    if (parts == null) {
      logger.error("There are no parts for current message. No events were routed: " + message);
      return null;
    }
    int correlationSequence=1;
    int epCounter=0;
    for (Iterator iterator=parts.iterator(); iterator.hasNext(); epCounter++) {
      part=(Document)iterator.next();
      if (epCounter == endpoints.size()) {
        epCounter=0;
      }
      Map theProperties=(Map)properties.get();
      message=new MuleMessage(part,new HashMap(theProperties));
      if (enableEndpointFiltering) {
        endpoint=getEndpointForMessage(message);
      }
 else {
        endpoint=(UMOEndpoint)getEndpoints().get(epCounter);
      }
      if (endpoint == null) {
        logger.error("There was no matching endpoint for message part: " + part.asXML());
      }
 else {
        try {
          if (enableCorrelation != ENABLE_CORRELATION_NEVER) {
            boolean correlationSet=message.getCorrelationId() != null;
            if (!correlationSet && (enableCorrelation == ENABLE_CORRELATION_IF_NOT_SET)) {
              message.setCorrelationId(correlationId);
            }
            final int groupSize=message.getCorrelationGroupSize();
            message.setCorrelationGroupSize(groupSize);
            message.setCorrelationSequence(correlationSequence++);
          }
          if (synchronous) {
            result=send(session,message,endpoint);
          }
 else {
            dispatch(session,message,endpoint);
          }
        }
 catch (        UMOException e) {
          throw new CouldNotRouteOutboundMessageException(message,endpoint,e);
        }
      }
    }
    return result;
  }
  finally {
    nodes.set(null);
    properties.set(null);
  }
}
