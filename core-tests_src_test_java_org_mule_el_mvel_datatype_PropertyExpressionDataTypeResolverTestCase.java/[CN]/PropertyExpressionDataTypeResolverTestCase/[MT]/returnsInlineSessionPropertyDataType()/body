{
  final String expression="foo";
  final DataType expectedDataType=DataTypeFactory.create(String.class,JSON);
  expectedDataType.setEncoding(CUSTOM_ENCODING);
  MVELExpressionLanguage expressionLanguage=(MVELExpressionLanguage)muleContext.getExpressionLanguage();
  final CompiledExpression compiledExpression=(CompiledExpression)compileExpression(expression,new ParserContext(expressionLanguage.getParserConfiguration()));
  MuleEvent testEvent=getTestEvent(TEST_MESSAGE);
  testEvent.getMessage().setProperty("foo",EXPRESSION_VALUE,SESSION,expectedDataType);
  assertThat(expressionDataTypeResolver.resolve(testEvent.getMessage(),compiledExpression),like(String.class,JSON,CUSTOM_ENCODING));
}
