{
  UMOTransaction tx=TransactionCoordination.getInstance().getTransaction();
  Destination dest=null;
  boolean topic=false;
  String resourceInfo=endpointUri.getResourceInfo();
  topic=(resourceInfo != null && "topic".equalsIgnoreCase(resourceInfo));
  if (tx != null) {
    receiveSession=(Session)tx.getResource();
    dest=connector.getJmsSupport().createDestination(receiveSession,endpointUri.getAddress(),topic);
    consumer=connector.getJmsSupport().createConsumer(receiveSession,dest);
  }
 else   if (receiveSession == null) {
    receiveSession=connector.getSession(false);
    dest=connector.getJmsSupport().createDestination(receiveSession,endpointUri.getAddress(),topic);
    consumer=connector.getJmsSupport().createConsumer(receiveSession,dest);
  }
  dest=connector.getJmsSupport().createDestination(receiveSession,endpointUri.getAddress(),topic);
  Message message=null;
  try {
    if (consumer == null) {
      consumer=connector.getJmsSupport().createConsumer(receiveSession,dest);
    }
    if (timeout == RECEIVE_NO_WAIT) {
      message=consumer.receiveNoWait();
    }
 else     if (timeout == RECEIVE_WAIT_INDEFINITELY) {
      message=consumer.receive();
    }
 else {
      message=consumer.receive(timeout);
    }
    if (message == null)     return null;
    return new MuleMessage(connector.getMessageAdapter(message));
  }
 catch (  Exception e) {
    e.printStackTrace();
    return null;
  }
}
