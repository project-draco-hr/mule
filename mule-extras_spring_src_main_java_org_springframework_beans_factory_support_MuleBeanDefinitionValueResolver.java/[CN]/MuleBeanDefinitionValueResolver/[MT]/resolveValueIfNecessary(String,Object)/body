{
  if (value instanceof BeanDefinitionHolder) {
    BeanDefinitionHolder bdHolder=(BeanDefinitionHolder)value;
    return resolveInnerBeanDefinition(argName,bdHolder.getBeanName(),bdHolder.getBeanDefinition());
  }
 else   if (value instanceof BeanDefinition) {
    BeanDefinition bd=(BeanDefinition)value;
    return resolveInnerBeanDefinition(argName,"(inner bean)",bd);
  }
 else   if (value instanceof RuntimeBeanReference) {
    RuntimeBeanReference ref=(RuntimeBeanReference)value;
    return resolveReference(argName,ref);
  }
 else   if (value instanceof ManagedList) {
    return resolveManagedList(argName,(List)value);
  }
 else   if (value instanceof ManagedSet) {
    return resolveManagedSet(argName,(Set)value);
  }
 else   if (value instanceof ManagedMap) {
    return resolveManagedMap(argName,(Map)value);
  }
 else   if (value instanceof ManagedProperties) {
    Properties copy=new Properties();
    copy.putAll((Properties)value);
    return copy;
  }
 else   if (value instanceof TypedStringValue) {
    TypedStringValue typedStringValue=(TypedStringValue)value;
    try {
      Class resolvedTargetType=resolveTargetType(typedStringValue);
      return this.beanFactory.doTypeConversionIfNecessary(typedStringValue.getValue(),resolvedTargetType);
    }
 catch (    Throwable ex) {
      throw new BeanCreationException(this.beanDefinition.getResourceDescription(),this.beanName,"Error converting typed String value for " + argName,ex);
    }
  }
 else {
    return value;
  }
}
