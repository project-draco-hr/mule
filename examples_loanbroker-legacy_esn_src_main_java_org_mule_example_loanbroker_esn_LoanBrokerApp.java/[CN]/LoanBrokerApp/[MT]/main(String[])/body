{
  LoanBrokerApp loanBrokerApp=null;
  Map<String,Object> options=SystemUtils.getCommandLineOptions(args,CLI_OPTIONS);
  String config=(String)options.get("config");
  if (StringUtils.isNotBlank(config)) {
    loanBrokerApp=new LoanBrokerApp(config);
    int i=100;
    String requests=(String)options.get("req");
    if (requests != null) {
      i=Integer.parseInt(requests);
    }
    String sync=(String)options.get("sync");
    if (sync != null) {
      synchronous=Boolean.valueOf(sync).booleanValue();
    }
    if (synchronous) {
      long start=System.currentTimeMillis();
      List<Object> results=loanBrokerApp.requestSend(i,"CustomerRequests");
      System.out.println(LocaleMessage.responseNumQuotes(results.size()));
      List<String> output=new ArrayList<String>(results.size());
      int x=1;
      for (Iterator<Object> iterator=results.iterator(); iterator.hasNext(); x++) {
        LoanQuote quote=(LoanQuote)iterator.next();
        output.add(x + ". " + quote.toString());
      }
      System.out.println(StringMessageUtils.getBoilerPlate(output,'*',80));
      long cur=System.currentTimeMillis();
      System.out.println(DateUtils.getFormattedDuration(cur - start));
      System.out.println(LocaleMessage.responseAvgRequest(((cur - start) / x)));
    }
 else {
      loanBrokerApp.requestDispatch(i,"CustomerRequests");
    }
  }
 else {
    loanBrokerApp=new LoanBrokerApp(getInteractiveConfig());
    loanBrokerApp.run(synchronous);
  }
}
