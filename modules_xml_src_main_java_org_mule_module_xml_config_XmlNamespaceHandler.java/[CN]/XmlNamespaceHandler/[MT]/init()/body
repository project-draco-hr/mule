{
  registerBeanDefinitionParser("jxpath-filter",new ChildDefinitionParser("filter",JXPathFilter.class));
  registerBeanDefinitionParser("is-xml-filter",new ChildDefinitionParser("filter",IsXmlFilter.class));
  registerBeanDefinitionParser("message-splitter",new RouterDefinitionParser(FilteringXmlMessageSplitter.class));
  registerMuleBeanDefinitionParser("round-robin-splitter",new RouterDefinitionParser(RoundRobinXmlSplitter.class)).addAlias("endpointFiltering","enableEndpointFiltering");
  registerBeanDefinitionParser("dom-to-xml-transformer",new TransformerDefinitionParser(DomDocumentToXml.class));
  registerBeanDefinitionParser("dom-to-output-handler-transformer",new TransformerDefinitionParser(DocumentToOutputHandler.class));
  registerBeanDefinitionParser("jxpath-extractor-transformer",new TransformerDefinitionParser(JXPathExtractor.class));
  registerBeanDefinitionParser("object-to-xml-transformer",new TransformerDefinitionParser(ObjectToXml.class));
  registerBeanDefinitionParser("xml-to-dom-transformer",new TransformerDefinitionParser(XmlToDomDocument.class));
  registerBeanDefinitionParser("xml-to-object-transformer",new TransformerDefinitionParser(XmlToObject.class));
  registerBeanDefinitionParser("xml-prettyprinter-transformer",new TransformerDefinitionParser(XmlPrettyPrinter.class));
  registerBeanDefinitionParser("xslt-transformer",new XsltTransformerDefinitionParser());
  registerBeanDefinitionParser("namespace",new ChildMapEntryDefinitionParser("namespaces","prefix","uri"));
  registerBeanDefinitionParser("context-property",new ChildMapEntryDefinitionParser("contextProperties","key","value"));
  registerBeanDefinitionParser("xslt-text",new XsltTextDefinitionParser("xslt",String.class));
}
