{
  Map<String,Map<String,String>> conditionals=getHeader(CONDITIONAL_PACKAGE);
  int size;
  do {
    size=dot.getDirectories().size();
    analyze();
    analyzed=false;
    Map<String,Map<String,String>> imports=getImports();
    Map<String,Map<String,String>> filtered=merge(CONDITIONAL_PACKAGE,conditionals,imports,new HashSet<String>(),null);
    for (    Map.Entry<String,Map<String,String>> entry : getImports().entrySet()) {
      String type=entry.getValue().get("import:");
      if (type != null && type.equals("private"))       filtered.put(entry.getKey(),entry.getValue());
    }
    filtered.keySet().removeAll(dot.getPackages());
    doExpand(dot,CONDITIONAL_PACKAGE + " Private imports",replaceWitInstruction(filtered,CONDITIONAL_PACKAGE),false);
  }
 while (dot.getDirectories().size() > size);
  analyzed=true;
}
