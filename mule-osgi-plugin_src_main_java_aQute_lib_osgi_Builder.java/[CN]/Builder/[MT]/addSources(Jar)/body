{
  if (!hasSources())   return;
  Set<String> packages=new HashSet<String>();
  try {
    ByteArrayOutputStream out=new ByteArrayOutputStream();
    getProperties().store(out,"Generated by BND, at " + new Date());
    dot.putResource("OSGI-OPT/bnd.bnd",new EmbeddedResource(out.toByteArray(),0));
    out.close();
  }
 catch (  Exception e) {
    error("Can not embed bnd file in JAR: " + e);
  }
  for (Iterator<String> cpe=classspace.keySet().iterator(); cpe.hasNext(); ) {
    String path=cpe.next();
    path=path.substring(0,path.length() - ".class".length()) + ".java";
    String pack=getPackage(path).replace('.','/');
    if (pack.length() > 1)     pack=pack + "/";
    boolean found=false;
    String[] fixed={"packageinfo","package.html","module-info.java","package-info.java"};
    for (Iterator<File> i=getSourcePath().iterator(); i.hasNext(); ) {
      File root=i.next();
      File f=getFile(root,path);
      if (f.exists()) {
        found=true;
        if (!packages.contains(pack)) {
          packages.add(pack);
          File bdir=getFile(root,pack);
          for (int j=0; j < fixed.length; j++) {
            File ff=getFile(bdir,fixed[j]);
            if (ff.isFile()) {
              dot.putResource("OSGI-OPT/src/" + pack + fixed[j],new FileResource(ff));
            }
          }
        }
        dot.putResource("OSGI-OPT/src/" + path,new FileResource(f));
      }
    }
    if (!found) {
      for (      Jar jar : classpath) {
        Resource resource=jar.getResource(path);
        if (resource != null) {
          dot.putResource("OSGI-OPT/src",resource);
        }
 else {
          resource=jar.getResource("OSGI-OPT/src/" + path);
          if (resource != null) {
            dot.putResource("OSGI-OPT/src",resource);
          }
        }
      }
    }
    if (getSourcePath().isEmpty())     warning("Including sources but " + SOURCEPATH + " does not contain any source directories ");
  }
}
