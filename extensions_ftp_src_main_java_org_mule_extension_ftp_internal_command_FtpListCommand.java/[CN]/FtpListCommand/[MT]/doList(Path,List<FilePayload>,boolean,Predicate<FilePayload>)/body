{
  FTPListParseEngine engine=client.initiateListParsing();
  while (engine.hasNext()) {
    FTPFile[] files=engine.getNext(FTP_LIST_PAGE_SIZE);
    if (ArrayUtils.isEmpty(files)) {
      return;
    }
    for (    FTPFile file : files) {
      FilePayload payload=new FtpFilePayload(path.resolve(file.getName()),file,config);
      if (isVirtualDirectory(payload.getName()) || !matcher.test(payload)) {
        continue;
      }
      accumulator.add(payload);
      if (payload.isDirectory() && recursive) {
        Path recursionPath=path.resolve(payload.getName());
        if (!client.changeWorkingDirectory(payload.getName())) {
          throw exception(format("Could not change working directory to '%s' while performing recursion on list operation",recursionPath));
        }
        doList(recursionPath,accumulator,recursive,matcher);
        if (!client.changeToParentDirectory()) {
          throw exception(format("Could not return to parent working directory '%s' while performing recursion on list operation",recursionPath.getParent()));
        }
      }
    }
  }
}
