{
  if (axisDescriptor == null) {
    axisDescriptor=(MuleDescriptor)MuleManager.getInstance().getModel().getDescriptor(AXIS_SERVICE_COMPONENT_NAME);
    if (axisDescriptor == null) {
      axisDescriptor=new MuleDescriptor(AXIS_SERVICE_COMPONENT_NAME);
      axisDescriptor.setImplementation(AxisServiceComponent.class.getName());
    }
 else {
      MuleManager.getInstance().getModel().unregisterComponent(axisDescriptor);
    }
    if (axisDescriptor.getProperties().get("axisServer") == null) {
      axisDescriptor.getProperties().put("axisServer",axisServer);
    }
    axisDescriptor.setContainerManaged(false);
  }
  String endpoint=receiver.getEndpointURI().getAddress();
  boolean startsWith=false;
  String scheme=ep.getScheme().toLowerCase();
  if (scheme.equals("http") || scheme.equals("tcp")) {
    endpoint=scheme + "://" + ep.getHost()+ ":"+ ep.getPort();
    startsWith=true;
    String sync="synchronous=" + receiver.getEndpoint().isSynchronous();
    if (endpoint.indexOf("?") > -1) {
      endpoint+="&" + sync;
    }
 else {
      endpoint+="?" + sync;
    }
  }
  Map endpointCounters=(Map)axisDescriptor.getProperties().get(ENDPOINT_COUNTERS_PROPERTY);
  if (endpointCounters == null) {
    endpointCounters=new HashMap();
  }
  String endpointKey=getCounterEndpointKey(receiver.getEndpointURI());
  Integer count=(Integer)endpointCounters.get(endpointKey.toString());
  if (count == null)   count=new Integer(0);
  if (count.intValue() == 0) {
    UMOEndpoint serviceEndpoint=new MuleEndpoint(endpoint,true);
    serviceEndpoint.setName(ep.getScheme() + ":" + receiver.getComponent().getDescriptor().getName());
    serviceEndpoint.setFilter(receiver.getEndpoint().getFilter());
    axisDescriptor.getInboundRouter().addEndpoint(serviceEndpoint);
  }
  count=new Integer(count.intValue() + 1);
  endpointCounters.put(endpointKey.toString(),count);
  axisDescriptor.getProperties().put(ENDPOINT_COUNTERS_PROPERTY,endpointCounters);
}
