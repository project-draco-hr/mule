{
  AbstractConnector connector=((AbstractConnector)endpoint.getConnector());
  List<MessageProcessor> list=new ArrayList<MessageProcessor>();
  list.add(new OutboundLoggingMessageProcessor());
  list.add(new ProcessIfStartedMessageProcessor(connector,connector.getLifecycleManager().getState()));
  list.add(new TransactionalInterceptingMessageProcessor(endpoint.getTransactionConfig(),connector.getExceptionListener()));
  list.add(new OutboundEventTimeoutMessageProcessor());
  list.add(new OutboundSimpleTryCatchMessageProcessor());
  list.add(new OutboundSessionHandlerMessageProcessor(connector.getSessionHandler()));
  list.add(new OutboundEndpointPropertyMessageProcessor());
  if (endpoint instanceof OutboundEndpointDecorator) {
    list.add(new OutboundEndpointDecoratorMessageProcessor((OutboundEndpointDecorator)endpoint));
  }
  list.add(new OutboundSecurityFilterMessageProcessor(endpoint));
  list.add(new OutboundTryCatchMessageProcessor(endpoint));
  list.add(new OutboundResponsePropertiesMessageProcessor(endpoint));
  return list;
}
