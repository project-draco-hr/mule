{
  String readDir=endpoint.getEndpointURI().getAddress();
  if (null != getReadFromDirectory()) {
    readDir=getReadFromDirectory();
  }
  long polling=this.pollingFrequency;
  String moveTo=moveToDirectoryName;
  String moveToPattern=getMoveToPattern();
  Map props=endpoint.getProperties();
  if (props != null) {
    String read=(String)props.get(PROPERTY_READ_FROM_DIRECTORY);
    if (read != null) {
      readDir=read;
    }
    String move=(String)props.get(PROPERTY_MOVE_TO_DIRECTORY);
    if (move != null) {
      moveTo=move;
    }
    String tempMoveToPattern=(String)props.get(PROPERTY_MOVE_TO_PATTERN);
    if (tempMoveToPattern != null) {
      if (logger.isDebugEnabled()) {
        logger.debug("set moveTo Pattern to: " + tempMoveToPattern);
      }
      moveToPattern=tempMoveToPattern;
    }
    String tempPolling=(String)props.get(PROPERTY_POLLING_FREQUENCY);
    if (tempPolling != null) {
      polling=Long.parseLong(tempPolling);
    }
    if (polling <= 0) {
      polling=DEFAULT_POLLING_FREQUENCY;
    }
    if (logger.isDebugEnabled()) {
      logger.debug("set polling frequency to: " + polling);
    }
    String tempFileAge=(String)props.get(PROPERTY_FILE_AGE);
    if (tempFileAge != null) {
      try {
        setFileAge(Long.parseLong(tempFileAge));
      }
 catch (      Exception ex1) {
        logger.error("Failed to set fileAge",ex1);
      }
    }
    Map srvOverride=(Map)props.get(PROPERTY_SERVICE_OVERRIDE);
    if (srvOverride != null) {
      if (serviceOverrides == null) {
        serviceOverrides=new Properties();
      }
      serviceOverrides.setProperty(MuleProperties.CONNECTOR_INBOUND_TRANSFORMER,NoActionTransformer.class.getName());
      serviceOverrides.setProperty(MuleProperties.CONNECTOR_OUTBOUND_TRANSFORMER,NoActionTransformer.class.getName());
    }
  }
  try {
    return serviceDescriptor.createMessageReceiver(this,component,endpoint,new Object[]{readDir,moveTo,moveToPattern,new Long(polling)});
  }
 catch (  Exception e) {
    throw new InitialisationException(CoreMessages.failedToCreateObjectWith("Message Receiver",serviceDescriptor),e,this);
  }
}
