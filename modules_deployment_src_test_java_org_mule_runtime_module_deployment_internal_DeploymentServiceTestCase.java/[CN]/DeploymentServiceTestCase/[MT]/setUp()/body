{
  if (parallelDeployment) {
    setProperty(PARALLEL_DEPLOYMENT_PROPERTY,"");
  }
  final String tmpDir=getProperty("java.io.tmpdir");
  muleHome=new File(new File(tmpDir,"mule home"),getClass().getSimpleName() + currentTimeMillis());
  appsDir=new File(muleHome,"apps");
  appsDir.mkdirs();
  containerAppPluginsDir=new File(muleHome,CONTAINER_APP_PLUGINS);
  containerAppPluginsDir.mkdirs();
  tmpAppsDir=new File(muleHome,"tmp");
  tmpAppsDir.mkdirs();
  domainsDir=new File(muleHome,"domains");
  domainsDir.mkdirs();
  setProperty(MULE_HOME_DIRECTORY_PROPERTY,muleHome.getCanonicalPath());
  final File domainFolder=getDomainFolder(DEFAULT_DOMAIN_NAME);
  assertThat(domainFolder.mkdirs(),is(true));
  services=getServicesFolder();
  services.mkdirs();
  copyFileToDirectory(buildSchedulerServiceFile(compilerWorkFolder.newFolder("schedulerService")),services);
  applicationDeploymentListener=mock(DeploymentListener.class);
  domainDeploymentListener=mock(DeploymentListener.class);
  MuleArtifactResourcesRegistry muleArtifactResourcesRegistry=new MuleArtifactResourcesRegistry();
  serviceManager=muleArtifactResourcesRegistry.getServiceManager();
  containerClassLoader=muleArtifactResourcesRegistry.getContainerClassLoader();
  artifactClassLoaderManager=muleArtifactResourcesRegistry.getArtifactClassLoaderManager();
  deploymentService=new MuleDeploymentService(muleArtifactResourcesRegistry.getDomainFactory(),muleArtifactResourcesRegistry.getApplicationFactory());
  deploymentService.addDeploymentListener(applicationDeploymentListener);
  deploymentService.addDomainDeploymentListener(domainDeploymentListener);
}
