{
  startDeployment();
  addPackedDomainFromBuilder(sharedDomainFileBuilder);
  addPackedAppFromBuilder(sharedAAppFileBuilder);
  addPackedAppFromBuilder(sharedBAppFileBuilder);
  assertDeploymentSuccess(domainDeploymentListener,sharedDomainFileBuilder.getId());
  assertDeploymentSuccess(applicationDeploymentListener,sharedAAppFileBuilder.getId());
  assertDeploymentSuccess(applicationDeploymentListener,sharedBAppFileBuilder.getId());
  Domain domain=findADomain(sharedDomainFileBuilder.getId());
  assertThat(domain.getMuleContext().getRegistry().get("http-listener-config"),not(is(nullValue())));
  ArtifactClassLoader initialArtifactClassLoader=domain.getArtifactClassLoader();
  reset(domainDeploymentListener);
  reset(applicationDeploymentListener);
  File domainFolder=new File(domainsDir.getPath(),sharedDomainFileBuilder.getId());
  File configFile=new File(domainFolder,sharedDomainFileBuilder.getConfigFile());
  long firstFileTimestamp=configFile.lastModified();
  FileUtils.touch(configFile);
  alterTimestampIfNeeded(configFile,firstFileTimestamp);
  assertUndeploymentSuccess(applicationDeploymentListener,sharedAAppFileBuilder.getId());
  assertUndeploymentSuccess(applicationDeploymentListener,sharedBAppFileBuilder.getId());
  assertUndeploymentSuccess(domainDeploymentListener,sharedDomainFileBuilder.getId());
  assertDeploymentSuccess(domainDeploymentListener,sharedDomainFileBuilder.getId());
  assertDeploymentSuccess(applicationDeploymentListener,sharedAAppFileBuilder.getId());
  assertDeploymentSuccess(applicationDeploymentListener,sharedBAppFileBuilder.getId());
  domain=findADomain(sharedDomainFileBuilder.getId());
  ArtifactClassLoader artifactClassLoaderAfterRedeployment=domain.getArtifactClassLoader();
  assertThat(artifactClassLoaderAfterRedeployment,not(sameInstance(initialArtifactClassLoader)));
  removeAppAnchorFile(sharedAAppFileBuilder.getId());
  removeAppAnchorFile(sharedBAppFileBuilder.getId());
  removeDomainAnchorFile(sharedDomainFileBuilder.getId());
  assertUndeploymentSuccess(applicationDeploymentListener,sharedAAppFileBuilder.getId());
  assertUndeploymentSuccess(applicationDeploymentListener,sharedBAppFileBuilder.getId());
  assertUndeploymentSuccess(domainDeploymentListener,sharedDomainFileBuilder.getId());
}
