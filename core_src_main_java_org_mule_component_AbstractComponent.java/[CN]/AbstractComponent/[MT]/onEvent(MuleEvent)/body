{
  if (logger.isTraceEnabled()) {
    logger.trace(this.getClass().getName() + ": async call for Mule Component " + service.getName());
  }
  try {
    checkDisposed();
    if (!(event.getEndpoint() instanceof InboundEndpoint)) {
      throw new IllegalStateException("Unable to process outbound event, components only process incoming events.");
    }
    if (stopping.get() || !started.get()) {
      throw new DefaultMuleException(CoreMessages.componentIsStopped(service.getName()));
    }
    doOnEvent(event);
  }
 catch (  Exception e) {
    logger.error(new ServiceException(CoreMessages.failedToInvoke(this.toString()),event.getMessage(),service,e));
  }
}
