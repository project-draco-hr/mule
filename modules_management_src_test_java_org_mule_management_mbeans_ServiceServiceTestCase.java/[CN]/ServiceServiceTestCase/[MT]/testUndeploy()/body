{
  final String domainOriginal="TEST_DOMAIN_1";
  final SedaService service=new SedaService();
  service.setName("TEST_SERVICE");
  final DefaultJavaComponent component=new DefaultJavaComponent(new SingletonObjectFactory(Object.class));
  component.setMuleContext(muleContext);
  service.setComponent(component);
  service.setMuleContext(muleContext);
  service.setThreadingProfile(ThreadingProfile.DEFAULT_THREADING_PROFILE);
  SedaModel model=new SedaModel();
  model.setMuleContext(muleContext);
  service.setModel(model);
  muleContext.getRegistry().registerModel(model);
  muleContext.getRegistry().registerService(service);
  muleContext.start();
  final ServiceService jmxService=new ServiceService("TEST_SERVICE",muleContext);
  final ObjectName name=ObjectName.getInstance(domainOriginal + ":type=TEST_SERVICE");
  mBeanServer.registerMBean(jmxService,name);
  Set mbeans=mBeanServer.queryMBeans(ObjectName.getInstance(domainOriginal + ":*"),null);
  assertEquals("Unexpected number of components registered in the domain.",4,mbeans.size());
  mBeanServer.unregisterMBean(name);
  mbeans=mBeanServer.queryMBeans(ObjectName.getInstance(domainOriginal + ":*"),null);
  assertEquals("There should be no MBeans left in the domain",0,mbeans.size());
}
