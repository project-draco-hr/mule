{
  if (session instanceof TopicSession) {
    return new ReusableTopicSessionWrapper((TopicSession)session);
  }
 else   if (session instanceof QueueSession) {
    return new ReusableQueueSessionWrapper((javax.jms.QueueSession)session);
  }
 else   if (session instanceof Session) {
    return new ReusableSessionWrapper(session);
  }
 else {
    throw new IllegalArgumentException("session type " + session.getClass() + " no supported as reusable");
  }
}
