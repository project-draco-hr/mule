{
  if (message.getPayload() instanceof List) {
    CopyOnWriteArrayList payload=new CopyOnWriteArrayList((List)message.getPayload());
    payloads.set(payload);
    if (enableCorrelation != ENABLE_CORRELATION_NEVER) {
      final int groupSize=payload.size();
      message.setCorrelationGroupSize(groupSize);
      if (logger.isDebugEnabled()) {
        logger.debug("java.util.List payload detected, setting correlation group size to " + groupSize);
      }
    }
  }
 else {
    throw new IllegalArgumentException("The payload for this router must be of type java.util.List");
  }
  Map props=new HashMap();
  for (Iterator iterator=message.getPropertyNames().iterator(); iterator.hasNext(); ) {
    String propertyKey=(String)iterator.next();
    props.put(propertyKey,message.getProperty(propertyKey));
  }
  properties.set(props);
}
