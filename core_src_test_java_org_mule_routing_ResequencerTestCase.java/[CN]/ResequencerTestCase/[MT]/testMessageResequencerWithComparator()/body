{
  MuleSession session=getTestSession(null,muleContext);
  Flow testService=getTestFlow("test",Apple.class);
  assertNotNull(testService);
  TestEventResequencer router=new TestEventResequencer(3);
  router.setMuleContext(muleContext);
  router.setFlowConstruct(testService);
  router.initialise();
  MuleMessage message1=new DefaultMuleMessage("test event A",muleContext);
  MuleMessage message2=new DefaultMuleMessage("test event B",muleContext);
  MuleMessage message3=new DefaultMuleMessage("test event C",muleContext);
  final String correlationId=message1.getUniqueId();
  message1.setCorrelationId(correlationId);
  message2.setCorrelationId(correlationId);
  message3.setCorrelationId(correlationId);
  InboundEndpoint endpoint=MuleTestUtils.getTestInboundEndpoint(MessageExchangePattern.ONE_WAY,muleContext);
  MuleEvent event1=new DefaultMuleEvent(message1,endpoint,getTestFlow(),session);
  MuleEvent event2=new DefaultMuleEvent(message2,endpoint,getTestFlow(),session);
  MuleEvent event3=new DefaultMuleEvent(message3,endpoint,getTestFlow(),session);
  router=new TestEventResequencer(3);
  router.setMuleContext(muleContext);
  router.setEventComparator(new EventPayloadComparator());
  router.setFlowConstruct(testService);
  router.initialise();
  assertNull(router.process(event2));
  assertNull(router.process(event3));
  MuleEvent resultEvent=router.process(event1);
  assertNotNull(resultEvent);
  MuleMessage resultMessage=resultEvent.getMessage();
  assertNotNull(resultMessage);
  assertEquals("test event C",resultMessage.getPayloadAsString());
}
