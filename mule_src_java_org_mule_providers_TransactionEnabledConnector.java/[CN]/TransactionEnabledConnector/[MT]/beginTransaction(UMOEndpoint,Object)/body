{
  TransactionProxy trans=TransactionCoordination.getInstance().getTransactionProxy();
  byte action=endpoint.getTransactionConfig().getBeginAction();
  UMOTransactionFactory factory=endpoint.getTransactionConfig().getFactory();
  if ((action == UMOTransactionConfig.ACTION_NONE || action == UMOTransactionConfig.ACTION_JOIN_IF_POSSIBLE) && trans == null) {
    return null;
  }
 else   if (action == UMOTransactionConfig.ACTION_JOIN_IF_POSSIBLE && trans != null) {
    return trans;
  }
 else   if (action == UMOTransactionConfig.ACTION_NONE && trans != null) {
    throw new IllegalTransactionStateException("A transaction is available for this session, but transaction action is none");
  }
 else   if ((action == UMOTransactionConfig.ACTION_BEGIN_OR_JOIN && trans == null) || action == UMOTransactionConfig.ACTION_ALWAYS_BEGIN) {
    try {
      UMOTransaction tx=factory.beginTransaction(session);
      return TransactionCoordination.getInstance().bindTransaction(tx,endpoint.getTransactionConfig().getConstraint());
    }
 catch (    Exception e) {
      throw new TransactionNotInProgressException("Failed to obtain endpoint session",e);
    }
  }
 else {
    throw new TransactionNotInProgressException("Cannot join transaction on an event received.");
  }
}
