{
  try {
    MuleMessage responseMessage=null;
synchronized (mutex) {
      Continuation continuation=ContinuationSupport.getContinuation(request);
      if (continuation.isInitial()) {
        MessageReceiver receiver=getReceiverForURI(request);
        MuleMessage requestMessage=receiver.createMuleMessage(request);
        requestMessage.setProperty(HttpConnector.HTTP_METHOD_PROPERTY,request.getMethod(),PropertyScope.INBOUND);
        ContinuationsReplyTo continuationsReplyTo=new ContinuationsReplyTo(continuation,mutex);
        requestMessage.setReplyTo(continuationsReplyTo);
        setupRequestMessage(request,requestMessage,receiver);
        if (receiver instanceof JettyHttpMessageReceiver) {
          JettyHttpMessageReceiver jettyReceiver=(JettyHttpMessageReceiver)receiver;
          jettyReceiver.routeMessageAsync(requestMessage,continuationsReplyTo);
          continuation.suspend();
        }
 else {
          responseMessage=receiver.routeMessage(requestMessage).getMessage();
          writeResponse(response,responseMessage);
        }
      }
 else {
        if (continuation.isResumed()) {
          Object r=continuation.getAttribute(OBJECT_KEY);
          if (r instanceof MuleMessage) {
            responseMessage=(MuleMessage)r;
            continuation.setAttribute(OBJECT_KEY,null);
            writeResponse(response,responseMessage);
          }
 else           if (r instanceof Exception) {
            if (r instanceof MessagingException) {
              MessagingException me=(MessagingException)r;
              MuleEvent event=me.getEvent();
              if (event instanceof DefaultMuleEvent) {
                ((DefaultMuleEvent)event).resetAccessControl();
              }
            }
            throw (Exception)r;
          }
        }
      }
    }
  }
 catch (  RuntimeException e) {
    throw new ServletException(e);
  }
catch (  Exception e) {
    String message=e.getMessage();
    handleException(e,message,response);
  }
}
