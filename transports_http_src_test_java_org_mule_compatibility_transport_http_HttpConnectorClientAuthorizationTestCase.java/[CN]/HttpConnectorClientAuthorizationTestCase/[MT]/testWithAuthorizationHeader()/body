{
  message.setOutboundProperty(HttpConstants.HEADER_AUTHORIZATION,HEADER_AUTHORIZATION_VALUE);
  when(mockMuleEvent.getMessageSourceURI()).thenReturn(uri);
  when(mockMuleEvent.getMessage()).thenReturn(message);
  when(mockMuleEvent.getCredentials()).thenReturn(null);
  when(mockImmutableEndpoint.getProperty(HttpConstants.HEADER_AUTHORIZATION)).thenReturn(HEADER_AUTHORIZATION_VALUE);
  when(mockHttpMethod.getRequestHeader(HttpConstants.HEADER_AUTHORIZATION)).thenReturn(null);
  connector.setupClientAuthorization(mockMuleEvent,mockHttpMethod,mockHttpClient,mockImmutableEndpoint);
  verify(mockHttpMethod,atLeast(1)).addRequestHeader(eq(HttpConstants.HEADER_AUTHORIZATION),anyString());
}
