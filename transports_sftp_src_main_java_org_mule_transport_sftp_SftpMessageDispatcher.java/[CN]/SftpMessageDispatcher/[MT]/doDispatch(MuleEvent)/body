{
  String filename=buildFilename(event);
  InputStream inputStream=null;
  if (logger.isDebugEnabled()) {
    logger.debug("Writing file to: " + endpoint.getEndpointURI() + " ["+ filename+ "]");
  }
  SftpClient client=null;
  boolean useTempDir=false;
  String transferFilename=null;
  try {
    String serviceName=(event.getFlowConstruct() == null) ? "UNKNOWN SERVICE" : event.getFlowConstruct().getName();
    SftpNotifier notifier=new SftpNotifier(connector,event.getMessage(),endpoint,serviceName);
    client=connector.createSftpClient(endpoint,notifier);
    String destDir=endpoint.getEndpointURI().getPath();
    if (logger.isDebugEnabled()) {
      logger.debug("Connection setup successful, writing file.");
    }
    filename=client.duplicateHandling(destDir,filename,sftpUtil.getDuplicateHandling());
    transferFilename=filename;
    useTempDir=sftpUtil.isUseTempDirOutbound();
    if (useTempDir) {
      sftpUtil.cwdToTempDirOnOutbound(client,destDir);
      boolean addUniqueSuffix=sftpUtil.isUseTempFileTimestampSuffix();
      if (addUniqueSuffix) {
        transferFilename=sftpUtil.createUniqueSuffix(transferFilename);
      }
    }
    if (sftpUtil.getDuplicateHandling().equals(SftpConnector.PROPERTY_DUPLICATE_HANDLING_APPEND)) {
      if (event.getMessage().getPayload() instanceof OutputHandler) {
        client.storeFile(transferFilename,event,(OutputHandler)event.getMessage().getPayload(),SftpClient.WriteMode.APPEND);
      }
 else {
        inputStream=generateInputStream(event);
        client.storeFile(transferFilename,inputStream,SftpClient.WriteMode.APPEND);
      }
    }
 else {
      if (event.getMessage().getPayload() instanceof OutputHandler) {
        client.storeFile(transferFilename,event,(OutputHandler)event.getMessage().getPayload());
      }
 else {
        inputStream=generateInputStream(event);
        client.storeFile(transferFilename,inputStream);
      }
    }
    if (useTempDir) {
      client.rename(transferFilename,destDir + "/" + filename);
    }
    logger.info("Successfully wrote file '" + filename + "' to "+ endpoint.getEndpointURI());
  }
 catch (  Exception e) {
    logger.error("Unexpected exception attempting to write file, message was: " + e.getMessage(),e);
    sftpUtil.setErrorOccurredOnInputStream(inputStream);
    if (useTempDir) {
      String tempDir=sftpUtil.getTempDirOutbound();
      sftpUtil.cleanupTempDir(client,transferFilename,tempDir);
    }
    throw e;
  }
 finally {
    if (client != null) {
      connector.releaseClient(endpoint,client);
    }
    if (inputStream != null) {
      inputStream.close();
    }
  }
}
