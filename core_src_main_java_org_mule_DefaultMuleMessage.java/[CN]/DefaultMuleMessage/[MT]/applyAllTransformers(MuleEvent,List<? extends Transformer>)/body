{
  if (!transformers.isEmpty()) {
    boolean checkPayloadTypeAfterTransformations=false;
    for (    Transformer transformer : transformers) {
      Class<?> srcCls=getPayload().getClass();
      DataType<?> originalSourceType=DataTypeFactory.create(srcCls);
      checkPayloadTypeAfterTransformations=false;
      if (transformer.isSourceDataTypeSupported(originalSourceType)) {
        transformMessage(event,transformer);
      }
 else {
        if (logger.isDebugEnabled()) {
          logger.debug("Transformer " + transformer + " doesn't support the source payload: "+ srcCls);
        }
        if (TransformerUtils.isTransformationEnforced(muleContext)) {
          if (transformer instanceof DiscoverableTransformer) {
            logger.debug("Skipping converter: " + transformer);
            checkPayloadTypeAfterTransformations=true;
          }
 else {
            Transformer implicitTransformer=muleContext.getDataTypeConverterResolver().resolve(originalSourceType,transformer.getSourceDataTypes());
            if (implicitTransformer != null) {
              transformMessage(event,implicitTransformer);
              transformMessage(event,transformer);
            }
 else {
              throw new IllegalArgumentException("Cannot apply transformer " + transformer + " on source payload: "+ srcCls);
            }
          }
        }
 else         if (!transformer.isIgnoreBadInput()) {
          if (logger.isDebugEnabled()) {
            logger.debug("Exiting from transformer chain (ignoreBadInput = false)");
          }
          break;
        }
      }
    }
    if (checkPayloadTypeAfterTransformations) {
      Transformer transformer=transformers.get(transformers.size() - 1);
      TransformerUtils.checkTransformerReturnClass(transformer,payload);
    }
  }
}
