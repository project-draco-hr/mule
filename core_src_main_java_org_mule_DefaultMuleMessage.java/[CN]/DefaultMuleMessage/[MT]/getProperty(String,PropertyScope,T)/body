{
  assertAccess(READ);
  T result;
  if (defaultValue instanceof Boolean) {
    result=(T)(Boolean)ObjectUtils.getBoolean(getProperty(name,scope),(Boolean)defaultValue);
  }
 else   if (defaultValue instanceof Byte) {
    result=(T)(Byte)ObjectUtils.getByte(getProperty(name,scope),(Byte)defaultValue);
  }
 else   if (defaultValue instanceof Integer) {
    result=(T)(Integer)ObjectUtils.getInt(getProperty(name,scope),(Integer)defaultValue);
  }
 else   if (defaultValue instanceof Short) {
    result=(T)(Short)ObjectUtils.getShort(getProperty(name,scope),(Short)defaultValue);
  }
 else   if (defaultValue instanceof Long) {
    result=(T)(Long)ObjectUtils.getLong(getProperty(name,scope),(Long)defaultValue);
  }
 else   if (defaultValue instanceof Float) {
    result=(T)(Float)ObjectUtils.getFloat(getProperty(name,scope),(Float)defaultValue);
  }
 else   if (defaultValue instanceof Double) {
    result=(T)(Double)ObjectUtils.getDouble(getProperty(name,scope),(Double)defaultValue);
  }
 else   if (defaultValue instanceof String) {
    result=(T)(String)ObjectUtils.getString(getProperty(name,scope),(String)defaultValue);
  }
 else {
    Object temp=getProperty(name,scope);
    if (temp == null) {
      return defaultValue;
    }
 else     if (defaultValue == null) {
      return (T)temp;
    }
 else     if (defaultValue.getClass().isAssignableFrom(temp.getClass())) {
      result=(T)temp;
    }
 else {
      throw new IllegalArgumentException(CoreMessages.objectNotOfCorrectType(temp.getClass(),defaultValue.getClass()).getMessage());
    }
  }
  return result;
}
