{
  Transformer inputStreamToString=createMockConverter(STRING_DATA_TYPE,"inputStreamToString",INPUT_STREAM_DATA_TYPE);
  Transformer inputStreamToJson=createMockConverter(JSON_DATA_TYPE,"inputStreamToJson",INPUT_STREAM_DATA_TYPE);
  Transformer jsonToXml=createMockConverter(XML_DATA_TYPE,"jsonToXml",JSON_DATA_TYPE);
  Transformer jsonToString=createMockConverter(STRING_DATA_TYPE,"jsonToXml",JSON_DATA_TYPE);
  Transformer stringToXml=createMockConverter(XML_DATA_TYPE,"stringToXml",STRING_DATA_TYPE);
  Transformer stringToJson=createMockConverter(JSON_DATA_TYPE,"stringToJson",STRING_DATA_TYPE);
  GraphTransformerResolver graphResolver=new GraphTransformerResolver();
  graphResolver.transformerChange(inputStreamToString,TransformerResolver.RegistryAction.ADDED);
  graphResolver.transformerChange(inputStreamToJson,TransformerResolver.RegistryAction.ADDED);
  graphResolver.transformerChange(jsonToXml,TransformerResolver.RegistryAction.ADDED);
  graphResolver.transformerChange(jsonToString,TransformerResolver.RegistryAction.ADDED);
  graphResolver.transformerChange(stringToXml,TransformerResolver.RegistryAction.ADDED);
  graphResolver.transformerChange(stringToJson,TransformerResolver.RegistryAction.ADDED);
  List<Transformer> transformers=graphResolver.lookupTransformers(INPUT_STREAM_DATA_TYPE,XML_DATA_TYPE);
  assertEquals(4,transformers.size());
  assertContainsCompositeTransformer(transformers,inputStreamToString,stringToXml);
  assertContainsCompositeTransformer(transformers,inputStreamToJson,jsonToXml);
  assertContainsCompositeTransformer(transformers,inputStreamToString,stringToJson,jsonToXml);
  assertContainsCompositeTransformer(transformers,inputStreamToJson,jsonToString,stringToXml);
}
