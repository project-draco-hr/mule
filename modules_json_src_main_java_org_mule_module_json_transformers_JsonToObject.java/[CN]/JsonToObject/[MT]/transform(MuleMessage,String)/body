{
  Object src=message.getPayload();
  Object returnValue;
  InputStream is=null;
  try {
    if (src instanceof InputStream) {
      is=(InputStream)src;
    }
 else     if (src instanceof File) {
      is=new FileInputStream((File)src);
    }
 else     if (src instanceof URL) {
      is=((URL)src).openStream();
    }
 else     if (src instanceof byte[]) {
      is=new ByteArrayInputStream((byte[])src);
    }
    if (src instanceof Reader) {
      if (getReturnClass().equals(JsonData.class)) {
        returnValue=new JsonData((Reader)src);
      }
 else {
        returnValue=getMapper().readValue((Reader)src,getReturnClass());
      }
    }
 else     if (src instanceof String) {
      if (getReturnClass().equals(JsonData.class)) {
        returnValue=new JsonData((String)src);
      }
 else {
        returnValue=getMapper().readValue((String)src,getReturnClass());
      }
    }
 else {
      if (getReturnClass().equals(JsonData.class)) {
        returnValue=new JsonData((Reader)src);
      }
 else {
        returnValue=getMapper().readValue(is,getReturnClass());
      }
    }
    return returnValue;
  }
 catch (  Exception e) {
    throw new TransformerException(CoreMessages.transformFailed("json",getReturnClass().getName()),this,e);
  }
 finally {
    if (is != null) {
      IOUtils.closeQuietly(is);
    }
  }
}
