{
  String key=null;
  int index=-1;
  int x=name.indexOf("[");
  int y=-1;
  if (x >= 0) {
    y=name.indexOf("]");
    key=name.substring(x + 1,y);
    if (NumberUtils.isDigits(key)) {
      index=Integer.valueOf(key);
      key=null;
    }
  }
  int i=name.indexOf("->");
  String objectName;
  if (x > 0) {
    objectName=name.substring(0,x);
  }
 else   if (i > 0) {
    objectName=name.substring(0,i);
  }
 else {
    objectName=name;
  }
  if (isArray() && !objectName.startsWith("[")) {
    throw new MorphException("Object is an array, but a nae of the object is given: " + objectName);
  }
  Object o;
  if (key != null) {
    o=morphDynaBean.get(objectName,key);
  }
 else   if (index > -1 && !objectName.startsWith("[")) {
    o=morphDynaBean.get(objectName,index);
  }
 else   if (index > -1) {
    o=get(index);
  }
 else {
    o=morphDynaBean.get(objectName);
  }
  if (o instanceof MorphDynaBean && i > 0) {
    return new JsonData((MorphDynaBean)o).get(name.substring(i + 2));
  }
  if (o instanceof MorphDynaBean && y > 0) {
    return new JsonData((MorphDynaBean)o).get(name.substring(y + 1));
  }
 else   if (o instanceof List && i > 0) {
    return new JsonData((List)o).get(name.substring(i + 2));
  }
 else   if (o instanceof List && y > 0) {
    return new JsonData((List)o).get(name.substring(y + 1));
  }
 else {
    return o;
  }
}
