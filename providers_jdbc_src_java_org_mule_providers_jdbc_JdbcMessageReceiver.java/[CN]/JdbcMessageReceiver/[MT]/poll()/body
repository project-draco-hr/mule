{
  try {
    List results=getResults();
    for (Iterator it=results.iterator(); it.hasNext(); ) {
      Object session=null;
      UMOTransaction tx=null;
      Connection con=null;
      Object result=it.next();
      try {
        session=this.connector.getSession(endpoint);
        if (session instanceof Connection) {
          con=(Connection)session;
        }
 else {
          con=((XAConnection)session).getConnection();
        }
        if (this.connector.getDataSource() instanceof XADataSource) {
          TransactionManager transactionManager=MuleManager.getInstance().getTransactionManager();
          while (transactionManager.getTransaction() != null) {
            Thread.sleep(100);
          }
          logger.debug("starting Xa Transaction");
          transactionManager.begin();
        }
        tx=this.connector.beginTransaction(endpoint,session);
        if (this.ackStmt != null) {
          Object[] ackParams=JdbcConnector.getParams(getEndpointURI(),this.ackParams,result);
          int nbRows=new QueryRunner().update(con,this.ackStmt,ackParams);
          if (nbRows != 1) {
            logger.warn("Row count for ack should be 1 and not " + nbRows);
          }
        }
        UMOMessageAdapter msgAdapter=this.connector.getMessageAdapter(result);
        UMOMessage message=new MuleMessage(msgAdapter);
        routeMessage(message,tx,tx != null || endpoint.isSynchronous());
        if (tx == null) {
          DbUtils.commitAndClose(con);
        }
      }
 catch (      Exception e) {
        rollback(tx,con);
        throw e;
      }
    }
  }
 catch (  Exception e) {
    logger.error(e);
    try {
      endpoint.getConnector().stop();
    }
 catch (    Exception e2) {
      logger.error("Failed to stop endpoint: " + e2.getMessage(),e2);
    }
  }
}
