{
  final MuleEvent newEvent=new DefaultMuleEvent(event,this);
  RequestContext.setEvent(newEvent);
  try {
    TransactionTemplate<MuleEvent> exceptionHandlingTransactionTemplate=TransactionTemplateFactory.<MuleEvent>createExceptionHandlingTransactionTemplate(muleContext);
    return exceptionHandlingTransactionTemplate.execute(new TransactionCallback<MuleEvent>(){
      @Override public MuleEvent doInTransaction() throws Exception {
        MuleEvent result=messageProcessorChain.process(newEvent);
        if (result != null) {
          result.getMessage().release();
          return new DefaultMuleEvent(result,event.getFlowConstruct());
        }
        return null;
      }
    }
);
  }
 catch (  MessagingException e) {
    throw e;
  }
catch (  Exception e) {
    throw new DefaultMuleException(CoreMessages.createStaticMessage("Flow execution exception"),e);
  }
 finally {
    RequestContext.setEvent(event);
    event.getMessage().release();
  }
}
