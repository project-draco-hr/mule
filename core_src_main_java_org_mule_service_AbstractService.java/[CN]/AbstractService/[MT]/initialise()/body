{
  if (initialised.get()) {
    throw new InitialisationException(CoreMessages.objectAlreadyInitialised("Service '" + name + "'"),this);
  }
  if (inboundRouter == null) {
    inboundRouter=new DefaultInboundRouterCollection();
    inboundRouter.addRouter(new InboundPassThroughRouter());
  }
  if (outboundRouter == null) {
    outboundRouter=new DefaultOutboundRouterCollection();
    outboundRouter.addRouter(new OutboundPassThroughRouter());
  }
  if (responseRouter == null) {
    responseRouter=new DefaultResponseRouterCollection();
  }
  if (nestedRouter == null) {
    nestedRouter=new DefaultNestedRouterCollection();
  }
  if (exceptionListener == null) {
    exceptionListener=new DefaultServiceExceptionStrategy(this);
    ((MuleContextAware)exceptionListener).setMuleContext(muleContext);
    ((Initialisable)exceptionListener).initialise();
  }
  return LifecycleLogic.initialiseAll(this,componentFactory.initialise(),new LifecycleLogic.Closure(){
    public LifecycleTransitionResult doContinue() throws InitialisationException {
      doInitialise();
      stats=createStatistics();
      stats.setEnabled(muleContext.getStatistics().isEnabled());
      muleContext.getStatistics().add(stats);
      stats.setOutboundRouterStat(outboundRouter.getStatistics());
      stats.setInboundRouterStat(inboundRouter.getStatistics());
      initialised.set(true);
      fireComponentNotification(ServiceNotification.SERVICE_INITIALISED);
      return LifecycleTransitionResult.OK;
    }
  }
);
}
