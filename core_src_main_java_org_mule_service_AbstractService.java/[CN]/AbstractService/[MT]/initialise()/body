{
  if (inboundRouter == null) {
    inboundRouter=new DefaultInboundRouterCollection();
    inboundRouter.addRouter(new InboundPassThroughRouter());
  }
  if (outboundRouter == null) {
    outboundRouter=new DefaultOutboundRouterCollection();
    outboundRouter.addRouter(new OutboundPassThroughRouter());
  }
  if (responseRouter == null) {
    responseRouter=new DefaultResponseRouterCollection();
  }
  if (exceptionListener == null) {
    exceptionListener=getModel().getExceptionListener();
  }
  inboundSourceAggregator=((DefaultInboundRouterCollection)inboundRouter).getSourceAggregator();
  inboundSourceAggregator.setListener(inboundRouter);
  if (inboundSourceAggregator instanceof PatternAware) {
    ((PatternAware)inboundSourceAggregator).setPattern(this);
  }
  responseSourceAggregator=((DefaultInboundRouterCollection)responseRouter).getSourceAggregator();
  responseSourceAggregator.setListener(responseRouter);
  if (responseSourceAggregator instanceof PatternAware) {
    ((PatternAware)responseSourceAggregator).setPattern(this);
  }
  inboundRouter.setListener(new InternalServiceMessageProcessor());
  try {
    lifecycleManager.fireLifecycle(Initialisable.PHASE_NAME);
  }
 catch (  LifecycleException e) {
    throw new InitialisationException(e,this);
  }
  component.setService(this);
  component.initialise();
  stats=createStatistics();
  stats.setEnabled(muleContext.getStatistics().isEnabled());
  muleContext.getStatistics().add(stats);
  stats.setOutboundRouterStat(outboundRouter.getStatistics());
  stats.setInboundRouterStat(inboundRouter.getStatistics());
  stats.setComponentStat(component.getStatistics());
}
