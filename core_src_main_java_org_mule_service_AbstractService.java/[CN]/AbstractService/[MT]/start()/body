{
  lifecycleManager.checkPhase(Startable.PHASE_NAME);
  if (!beyondInitialState.get() && initialState.equals(AbstractService.INITIAL_STATE_STOPPED)) {
    logger.info("Service " + name + " has not been started (initial state = 'stopped')");
    beyondInitialState.set(true);
    return;
  }
  component.start();
  registerListeners();
  connectListeners();
  if (!beyondInitialState.get() && initialState.equals(AbstractService.INITIAL_STATE_PAUSED)) {
    lifecycleManager.fireLifecycle(Startable.PHASE_NAME);
    lifecycleManager.fireLifecycle(Pausable.PHASE_NAME);
    logger.info("Service " + name + " has been started and paused (initial state = 'paused')");
  }
 else {
    lifecycleManager.fireLifecycle(Startable.PHASE_NAME);
    logger.info("Service " + name + " has been started successfully");
  }
  beyondInitialState.set(true);
  startListeners();
}
