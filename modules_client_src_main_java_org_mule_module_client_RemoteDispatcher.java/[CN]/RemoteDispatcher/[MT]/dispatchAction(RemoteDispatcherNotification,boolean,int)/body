{
  OutboundEndpoint serverEndpoint;
  if (synchronous) {
    serverEndpoint=syncServerEndpoint;
  }
 else {
    serverEndpoint=asyncServerEndpoint;
  }
  MuleMessage serializeMessage=new DefaultMuleMessage(action,muleContext);
  updateContext(serializeMessage,serverEndpoint,synchronous);
  ByteArrayOutputStream out=new ByteArrayOutputStream();
  wireFormat.write(out,serializeMessage,serverEndpoint.getEncoding());
  byte[] payload=out.toByteArray();
  MuleMessage message=action.getMessage();
  if (message == null) {
    message=new DefaultMuleMessage(payload,muleContext);
  }
 else {
    message=new DefaultMuleMessage(payload,message,muleContext);
  }
  message.addProperties(action.getProperties());
  MuleSession session=new DefaultMuleSession(muleContext);
  MuleEvent event=new DefaultMuleEvent(message,serverEndpoint.getExchangePattern(),session);
  event.setTimeout(timeout);
  if (logger.isDebugEnabled()) {
    logger.debug("MuleClient sending remote call to: " + action.getResourceIdentifier() + ". At "+ serverEndpoint.toString()+ " . Event is: "+ event);
  }
  MuleMessage result=null;
  try {
    MuleEvent resultEvent=serverEndpoint.process(event);
    if (resultEvent != null) {
      result=resultEvent.getMessage();
    }
    if (result != null && result.getPayload() != null) {
      if (result.getPayload() instanceof NullPayload) {
        return null;
      }
      Object response;
      if (result.getPayload() instanceof InputStream) {
        byte[] b=IOUtils.toByteArray((InputStream)result.getPayload());
        if (b.length == 0)         return null;
        ByteArrayInputStream in=new ByteArrayInputStream(b);
        response=wireFormat.read(in);
      }
 else {
        ByteArrayInputStream in=new ByteArrayInputStream(result.getPayloadAsBytes());
        response=wireFormat.read(in);
      }
      if (response instanceof RemoteDispatcherNotification) {
        response=((RemoteDispatcherNotification)response).getMessage();
      }
      return (MuleMessage)response;
    }
  }
 catch (  Exception e) {
    throw new DispatchException(event,serverEndpoint,e);
  }
  if (logger.isDebugEnabled()) {
    logger.debug("Result of MuleClient remote call is: " + (result == null ? "null" : result.getPayload()));
  }
  return result;
}
