{
  if (responseEvent == null || VoidMuleEvent.getInstance().equals(responseEvent) || !event.getExchangePattern().hasResponse()) {
    return null;
  }
  final InternalMessage message=responseEvent.getMessage();
  InternalMessage.Builder builder=InternalMessage.builder(message);
  BindingOperationInfo binding=exchange.get(BindingOperationInfo.class);
  HttpStatus responseCode=OK;
  final ParameterMap responseParams=new ParameterMap();
  if (message.getAttributes() instanceof HttpResponseAttributes) {
    responseCode=HttpStatus.getStatusByCode(((HttpResponseAttributes)message.getAttributes()).getStatusCode());
    responseParams.putAll(((HttpResponseAttributes)message.getAttributes()).getHeaders());
  }
  if (null != binding && null != binding.getOperationInfo() && binding.getOperationInfo().isOneWay()) {
    builder.addOutboundProperty(HTTP_STATUS_PROPERTY,ACCEPTED.getStatusCode());
    responseCode=ACCEPTED;
    builder.nullPayload();
  }
 else {
    final Optional<Charset> charset=message.getPayload().getDataType().getMediaType().getCharset();
    if (charset.isPresent()) {
      builder.payload(getResponseOutputHandler(exchange)).mediaType(XML.withCharset(charset.get()));
    }
 else {
      builder.payload(getResponseOutputHandler(exchange)).mediaType(XML);
    }
  }
  Message faultMsg=exchange.getOutFaultMessage();
  if (faultMsg != null) {
    if (null != binding && null != binding.getOperationInfo() && binding.getOperationInfo().isOneWay()) {
      final Optional<Charset> charset=message.getPayload().getDataType().getMediaType().getCharset();
      if (charset.isPresent()) {
        builder.payload(getResponseOutputHandler(exchange)).mediaType(XML.withCharset(charset.get()));
      }
 else {
        builder.payload(getResponseOutputHandler(exchange)).mediaType(XML);
      }
    }
    Exception ex=faultMsg.getContent(Exception.class);
    if (ex != null) {
      builder.exceptionPayload(new DefaultExceptionPayload(ex));
      builder.addOutboundProperty(HTTP_STATUS_PROPERTY,INTERNAL_SERVER_ERROR.getStatusCode());
      responseCode=INTERNAL_SERVER_ERROR;
    }
  }
  final InternalMessage responseMessage=builder.attributes(new HttpResponseAttributes(responseCode.getStatusCode(),responseCode.getReasonPhrase(),responseParams)).build();
  return Event.builder(responseEvent).message(responseMessage).build();
}
