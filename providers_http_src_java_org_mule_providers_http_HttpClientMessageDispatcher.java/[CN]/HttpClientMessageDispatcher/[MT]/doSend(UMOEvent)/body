{
  HttpMethod httpMethod=execute(event,false);
  try {
    Properties h=new Properties();
    Header[] headers=httpMethod.getRequestHeaders();
    for (int i=0; i < headers.length; i++) {
      h.setProperty(headers[i].getName(),headers[i].getValue());
    }
    String status=String.valueOf(httpMethod.getStatusCode());
    h.setProperty(HttpConnector.HTTP_STATUS_PROPERTY,status);
    logger.debug("Http response is: " + status);
    ExceptionPayload ep=null;
    if (httpMethod.getStatusCode() >= 400) {
      logger.error(httpMethod.getResponseBodyAsString());
      ep=new ExceptionPayload(new DispatchException(event.getMessage(),event.getEndpoint(),new Exception("Http call returned a status of: " + httpMethod.getStatusCode() + " "+ httpMethod.getStatusText())));
    }
    UMOMessage m=null;
    if (httpMethod.getResponseHeader(HttpConstants.HEADER_CONTENT_TYPE).getValue().startsWith("text/")) {
      m=new MuleMessage(httpMethod.getResponseBody(),h);
    }
 else {
      m=new MuleMessage(httpMethod.getResponseBodyAsString(),h);
    }
    m.setExceptionPayload(ep);
    return m;
  }
 catch (  Exception e) {
    throw new DispatchException(event.getMessage(),event.getEndpoint(),e);
  }
 finally {
    if (httpMethod != null)     httpMethod.releaseConnection();
  }
}
