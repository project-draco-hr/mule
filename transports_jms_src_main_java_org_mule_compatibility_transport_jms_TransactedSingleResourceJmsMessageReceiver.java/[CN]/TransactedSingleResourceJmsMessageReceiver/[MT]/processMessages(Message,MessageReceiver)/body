{
  ExecutionTemplate<MuleEvent> executionTemplate=createExecutionTemplate();
  final Charset encoding=endpoint.getEncoding();
  if (receiveMessagesInTransaction) {
    ExecutionCallback<MuleEvent> processingCallback=new MessageProcessingCallback<MuleEvent>(message){
      @Override public MuleEvent process() throws Exception {
        Transaction tx=TransactionCoordination.getInstance().getTransaction();
        if (tx != null) {
          tx.bindResource(connector.getConnection(),ReusableSessionWrapperFactory.createWrapper(session));
        }
        if (tx instanceof JmsClientAcknowledgeTransaction) {
          tx.bindResource(message,message);
        }
        if (logger.isDebugEnabled()) {
          logger.debug("Message received it is of type: " + ClassUtils.getSimpleName(message.getClass()));
          if (message.getJMSDestination() != null) {
            logger.debug("Message received on " + message.getJMSDestination() + " ("+ message.getJMSDestination().getClass().getName()+ ")");
          }
 else {
            logger.debug("Message received on unknown destination");
          }
          logger.debug("Message CorrelationId is: " + message.getJMSCorrelationID());
          logger.debug("Jms Message Id is: " + message.getJMSMessageID());
        }
        if (message.getJMSRedelivered()) {
          if (logger.isDebugEnabled()) {
            logger.debug("Message with correlationId: " + message.getJMSCorrelationID() + " is redelivered. handing off to Exception Handler");
          }
          redeliveryHandler.handleRedelivery(message,receiver.getEndpoint(),receiver.getFlowConstruct());
        }
        MuleCompatibilityMessage messageToRoute=createMuleMessage(message,encoding);
        return routeMessage(messageToRoute);
      }
    }
;
    executionTemplate.execute(processingCallback);
  }
 else {
    MuleCompatibilityMessage messageToRoute=createMuleMessage(message,encoding);
    routeMessage(messageToRoute);
  }
}
