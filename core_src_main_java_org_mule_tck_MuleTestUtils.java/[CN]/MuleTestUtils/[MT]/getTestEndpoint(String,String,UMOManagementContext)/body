{
  Map props=new HashMap();
  props.put("name",name);
  props.put("type",type);
  props.put("endpointURI",new MuleEndpointURI("test://test"));
  props.put("connector","testConnector");
  AbstractConnector connector=null;
  connector=(AbstractConnector)ClassUtils.loadClass("org.mule.tck.testmodels.mule.TestConnector",AbstractMuleTestCase.class).newInstance();
  connector.setName("testConnector");
  connector.setManagementContext(context);
  connector.initialise();
  UMOEndpointBuilder endpointBuilder=new EndpointURIEndpointBuilder("test://test",context);
  endpointBuilder.setConnector(connector);
  endpointBuilder.setName(name);
  if (UMOImmutableEndpoint.ENDPOINT_TYPE_RECEIVER.equals(type)) {
    return (UMOEndpoint)context.getRegistry().lookupEndpointFactory().createInboundEndpoint(endpointBuilder,context);
  }
 else   if (UMOImmutableEndpoint.ENDPOINT_TYPE_SENDER.equals(type)) {
    return (UMOEndpoint)context.getRegistry().lookupEndpointFactory().createOutboundEndpoint(endpointBuilder,context);
  }
 else   if (UMOImmutableEndpoint.ENDPOINT_TYPE_RESPONSE.equals(type)) {
    return (UMOEndpoint)context.getRegistry().lookupEndpointFactory().createResponseEndpoint(endpointBuilder,context);
  }
 else {
    throw new IllegalArgumentException("The endpoint type: " + type + "is not recognized.");
  }
}
