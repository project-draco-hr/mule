{
  Document document=DocumentHelper.createDocument();
  Element rootElement=document.addElement("mule","http://www.mulesoft.org/schema/mule/core");
  org.w3c.dom.Element[] placeholders=callback.getPropertyPlaceholders();
  int noIgnoreUnresolvableCount=0;
  for (  org.w3c.dom.Element placeholder : placeholders) {
    try {
      Element newPlaceHolder=convert(placeholder);
      String ignoreUnresolvable=newPlaceHolder.attributeValue(IGNORE_UNRESOLVABLE_ATTR);
      if (!"true".equalsIgnoreCase(ignoreUnresolvable)) {
        noIgnoreUnresolvableCount++;
      }
      if (noIgnoreUnresolvableCount > 1) {
        throw new MuleArtifactFactoryException("There are multiple property-placeholder elements with attribute " + IGNORE_UNRESOLVABLE_ATTR + " missing or set to false. It may be not possible to find all property values. Please fix your Mule configuration file.");
      }
      rootElement.add(newPlaceHolder);
    }
 catch (    ParserConfigurationException e) {
      throw new MuleArtifactFactoryException("Error parsing XML",e);
    }
  }
  Element parentElement=rootElement;
  addSchemaLocation(rootElement,element,callback);
  if (embedInFlow) {
    parentElement=rootElement.addElement("flow","http://www.mulesoft.org/schema/mule/core");
    parentElement.addAttribute("name",flowName);
  }
  try {
    parentElement.add(convert(element));
    processGlobalReferences(element,callback,rootElement);
    if (embedInFlow) {
      parentElement.addElement("logger","http://www.mulesoft.org/schema/mule/core");
    }
    return document.asXML();
  }
 catch (  Throwable t) {
    throw new MuleArtifactFactoryException("Error generating minimal XML configuration.",t);
  }
}
