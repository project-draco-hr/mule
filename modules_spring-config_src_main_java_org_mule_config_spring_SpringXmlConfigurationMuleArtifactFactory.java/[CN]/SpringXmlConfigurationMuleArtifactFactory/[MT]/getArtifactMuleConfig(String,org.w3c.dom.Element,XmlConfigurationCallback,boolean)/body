{
  Map<String,String> schemaLocations=new HashMap<String,String>();
  schemaLocations.put("http://www.mulesoft.org/schema/mule/core","http://www.mulesoft.org/schema/mule/core/current/mule.xsd");
  Document document=DocumentHelper.createDocument();
  Element rootElement=document.addElement("mule","http://www.mulesoft.org/schema/mule/core");
  org.w3c.dom.Element[] placeholders=callback.getPropertyPlaceholders();
  for (  org.w3c.dom.Element placeholder : placeholders) {
    try {
      Element newPlaceholder=convert(placeholder);
      rootElement.add(newPlaceholder);
      addSchemaLocation(placeholder,callback,schemaLocations);
    }
 catch (    ParserConfigurationException e) {
      throw new MuleArtifactFactoryException("Error parsing XML",e);
    }
  }
  Element parentElement=rootElement;
  addSchemaLocation(element,callback,schemaLocations);
  if (embedInFlow) {
    parentElement=rootElement.addElement("flow","http://www.mulesoft.org/schema/mule/core");
    parentElement.addAttribute("name",flowName);
  }
  try {
    parentElement.add(convert(element));
    processGlobalReferences(element,callback,rootElement,schemaLocations);
    if (embedInFlow) {
      parentElement.addElement("logger","http://www.mulesoft.org/schema/mule/core");
    }
    setSchemaLocation(rootElement,schemaLocations);
    return document.asXML();
  }
 catch (  Throwable t) {
    throw new MuleArtifactFactoryException("Error generating minimal XML configuration.",t);
  }
}
