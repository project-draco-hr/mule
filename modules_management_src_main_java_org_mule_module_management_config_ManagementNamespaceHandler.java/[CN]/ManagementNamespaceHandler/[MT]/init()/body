{
  registerBeanDefinitionParser("jmx-server",new JmxAgentDefinitionParser());
  registerBeanDefinitionParser("mBeanServer",new ObjectFactoryWrapper("MBeanServerObjectFactory"));
  registerBeanDefinitionParser("credentials",new ChildMapDefinitionParser("credentials"));
  registerBeanDefinitionParser("jmx-log4j",new AgentDefinitionParser(Log4jAgent.class));
  registerBeanDefinitionParser("jmx-mx4j-adaptor",new AgentDefinitionParser(Mx4jAgent.class));
  registerBeanDefinitionParser("jmx-notifications",new AgentDefinitionParser(JmxServerNotificationAgent.class));
  MuleDefinitionParserConfiguration defaultJmxParser=registerMuleBeanDefinitionParser("jmx-default-config",new AgentDefinitionParser(DefaultJmxSupportAgent.class));
  defaultJmxParser.addAlias("registerMx4jAdapter","loadMx4jAgent");
  defaultJmxParser.addAlias("registerLog4j","loadLog4jAgent");
  registerBeanDefinitionParser("level-mapping",new ChildMapEntryDefinitionParser("levelMappings","severity","eventId"));
  registerBeanDefinitionParser("log4j-notifications",new AgentDefinitionParser(Log4jNotificationLoggerAgent.class));
  registerBeanDefinitionParser("chainsaw-notifications",new AgentDefinitionParser(Log4jNotificationLoggerAgent.class));
  registerBeanDefinitionParser("publish-notifications",new AgentDefinitionParser(EndpointNotificationLoggerAgent.class));
  registerBeanDefinitionParser("rmi-server",new AgentDefinitionParser(RmiRegistryAgent.class));
  registerBeanDefinitionParser("yourkit-profiler",new AgentDefinitionParser(YourKitProfilerAgent.class));
  registerBeanDefinitionParser("outbound-endpoint",new GenericEndpointDefinitionParser(OutboundEndpointFactoryBean.class));
  registerIgnoredElement("connector-server");
}
