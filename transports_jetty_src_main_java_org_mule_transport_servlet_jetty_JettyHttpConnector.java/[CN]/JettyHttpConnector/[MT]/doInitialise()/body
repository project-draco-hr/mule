{
  httpServer=new Server(){
    @Override public void addHandler(    Handler handler){
      final Connector c=getServer().getConnectors()[0];
      if (handler instanceof WebAppContext) {
        final WebAppContext webapp=(WebAppContext)handler;
        final String msg=String.format("Will deploy a web app at %s:/%s%s%s","http",c.getHost(),c.getPort() == 80 ? StringUtils.EMPTY : ":" + c.getPort(),webapp.getContextPath());
        final File workDir=new File(muleContext.getConfiguration().getWorkingDirectory(),"_exploded_wars" + webapp.getContextPath());
        workDir.mkdirs();
        webapp.setTempDirectory(workDir);
        webapp.setAttribute("muleContext",muleContext);
        if (logger.isInfoEnabled()) {
          logger.info(StringMessageUtils.getBoilerPlate(msg,'*',70));
        }
      }
      super.addHandler(handler);
    }
  }
;
  if (webappsConfiguration != null) {
    deployer=new WebAppDeployer();
    String webAppDir=webappsConfiguration.getDirectory();
    if (StringUtils.isBlank(webAppDir)) {
      final String appDir=muleContext.getRegistry().get(MuleProperties.APP_HOME_DIRECTORY_PROPERTY);
      webAppDir=appDir + "/webapps";
    }
    if (configFile == null) {
      final URL muleDefaults=ClassUtils.getResource("org/mule/transport/jetty/webdefault.xml",getClass());
      deployer.setDefaultsDescriptor(muleDefaults.toExternalForm());
    }
    deployer.setWebAppDir(webAppDir);
    deployer.setExtract(true);
    deployer.setParentLoaderPriority(false);
    deployer.setServerClasses(webappsConfiguration.getServerClasses());
    deployer.setSystemClasses(webappsConfiguration.getSystemClasses());
    org.mortbay.jetty.AbstractConnector jettyConnector=createJettyConnector();
    jettyConnector.setHost(webappsConfiguration.getHost());
    jettyConnector.setPort(webappsConfiguration.getPort());
    deployer.setContexts(httpServer);
    String[] confClasses=new String[]{WebInfConfiguration.class.getName(),DummyJndiConfiguration.class.getName()};
    deployer.setConfigurationClasses(confClasses);
    httpServer.addConnector(jettyConnector);
    httpServer.addLifeCycle(deployer);
  }
  initialiseFromConfigFile();
  try {
    muleContext.registerListener(new MuleContextNotificationListener<MuleContextNotification>(){
      public void onNotification(      MuleContextNotification notification){
        if (notification.getAction() == MuleContextNotification.CONTEXT_STARTED) {
          setInitialStateStopped(false);
          try {
            start();
            final JettyWebappServerAgent agent=(JettyWebappServerAgent)muleContext.getRegistry().lookupAgent(JettyWebappServerAgent.NAME);
            if (agent != null) {
              agent.onJettyConnectorStarted(JettyHttpConnector.this);
            }
          }
 catch (          MuleException e) {
            throw new MuleRuntimeException(CoreMessages.failedToStart(getName()),e);
          }
        }
      }
    }
);
  }
 catch (  NotificationException e) {
    throw new InitialisationException(e,this);
  }
}
