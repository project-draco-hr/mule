{
  BeanDefinition root;
  BeanDefinition bd=containingBd;
  if (logger.isDebugEnabled()) {
    logger.debug("parsing: " + writeNode(ele));
  }
  if (!tryParsingSpringPropertyElements(ele,bd)) {
    String namespaceUri=ele.getNamespaceURI();
    NamespaceHandler handler=getReaderContext().getNamespaceHandlerResolver().resolve(namespaceUri);
    if (handler == null) {
      getReaderContext().error("Unable to locate NamespaceHandler for namespace [" + namespaceUri + "]",ele);
      return null;
    }
    bd=handler.parse(ele,new ParserContext(getReaderContext(),this,containingBd));
    registerBean(ele,bd);
  }
  root=bd;
  String ns=ele.getNamespaceURI();
  if (ns != null && ns.startsWith(MULE_NAMESPACE_PREFIX)) {
    NodeList list=ele.getChildNodes();
    for (int i=0; i < list.getLength(); i++) {
      if (list.item(i) instanceof Element) {
        Element element=(Element)list.item(i);
        if (logger.isDebugEnabled()) {
          logger.debug("parsing: " + writeNode(element));
        }
        if (!tryParsingSpringPropertyElements(element,bd)) {
          bd=parseCustomElement(element,bd);
          registerBean(element,bd);
        }
      }
    }
  }
  return root;
}
