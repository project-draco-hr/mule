{
  this.manager=Mockito.mock(OAuth2Manager.class,Mockito.RETURNS_DEEP_STUBS);
  this.interceptor=new ManagedAccessTokenProcessInterceptor<Object>(this.next,this.manager);
  this.event=Mockito.mock(MuleEvent.class,Mockito.RETURNS_DEEP_STUBS);
  Mockito.when(event.getMuleContext().getExpressionManager().parse(Mockito.anyString(),Mockito.any(MuleMessage.class))).thenAnswer(new Answer<String>(){
    @Override public String answer(    InvocationOnMock invocation) throws Throwable {
      return (String)invocation.getArguments()[0];
    }
  }
);
  List<Class<? extends Exception>> managedExceptions=new ArrayList<Class<? extends Exception>>();
  Mockito.when(this.callback.getManagedExceptions()).thenReturn(managedExceptions);
}
