{
  connector.registerListener(getTestInboundEndpoint("in","test://in"),getNullMessageProcessor(),getTestService());
  assertEquals(1,connector.receivers.size());
  assertFalse(((AbstractMessageReceiver)connector.receivers.get("in")).isConnected());
  assertFalse(((AbstractMessageReceiver)connector.receivers.get("in")).isStarted());
  connector.start();
  assertFalse(((AbstractMessageReceiver)connector.receivers.get("in")).isConnected());
  assertFalse(((AbstractMessageReceiver)connector.receivers.get("in")).isStarted());
  connector.registerListener(getTestInboundEndpoint("in2","test://in2"),getNullMessageProcessor(),getTestService());
  assertEquals(2,connector.receivers.size());
  assertFalse(((AbstractMessageReceiver)connector.receivers.get("in")).isConnected());
  assertFalse(((AbstractMessageReceiver)connector.receivers.get("in")).isStarted());
  connector.stop();
  assertEquals(2,connector.receivers.size());
  assertFalse(((AbstractMessageReceiver)connector.receivers.get("in")).isConnected());
  assertFalse(((AbstractMessageReceiver)connector.receivers.get("in")).isStarted());
  assertFalse(((AbstractMessageReceiver)connector.receivers.get("in2")).isConnected());
  assertFalse(((AbstractMessageReceiver)connector.receivers.get("in2")).isStarted());
  connector.start();
  assertEquals(2,connector.receivers.size());
  assertFalse(((AbstractMessageReceiver)connector.receivers.get("in")).isConnected());
  assertFalse(((AbstractMessageReceiver)connector.receivers.get("in")).isStarted());
  assertFalse(((AbstractMessageReceiver)connector.receivers.get("in2")).isConnected());
  assertFalse(((AbstractMessageReceiver)connector.receivers.get("in2")).isStarted());
  connector.dispose();
  assertEquals(0,connector.receivers.size());
}
