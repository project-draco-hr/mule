{
  acquireContextDisposeDelay();
  this.artifactAwareContextSelector=artifactAwareContextSelector;
  activeContexts=CacheBuilder.newBuilder().build();
  disposedContexts=CacheBuilder.newBuilder().expireAfterWrite(disposeDelayInMillis,TimeUnit.MILLISECONDS).removalListener(new RemovalListener<Integer,LoggerContext>(){
    @Override public void onRemoval(    RemovalNotification<Integer,LoggerContext> notification){
      stop(notification.getValue());
      activeContexts.invalidate(notification.getKey());
      builtContexts.remove(notification.getKey());
    }
  }
).build();
  executorService=newScheduledThreadPool(1,new LoggerContextReaperThreadFactory(reaperContextClassLoader));
}
