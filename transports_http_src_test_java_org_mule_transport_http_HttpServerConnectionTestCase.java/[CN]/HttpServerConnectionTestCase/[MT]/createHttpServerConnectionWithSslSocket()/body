{
  when(mockHandshakeCompleteEvent.getLocalCertificates()).thenReturn(mockLocalCertificate);
  when(mockHandshakeCompleteEvent.getPeerCertificates()).thenReturn(mockPeerCertificates);
  doAnswer(new Answer<Void>(){
    @Override public Void answer(    InvocationOnMock invocationOnMock) throws Throwable {
      ((HandshakeCompletedListener)invocationOnMock.getArguments()[0]).handshakeCompleted(mockHandshakeCompleteEvent);
      return null;
    }
  }
).when(mockSslSocket).addHandshakeCompletedListener(any(HandshakeCompletedListener.class));
  HttpServerConnection httpServerConnection=new HttpServerConnection(mockSslSocket,ENCODING,mockHttpConnector);
  verify(mockSslSocket,times(1)).addHandshakeCompletedListener(httpServerConnection);
  assertThat(httpServerConnection.getLocalCertificateChain(),is(mockLocalCertificate));
  assertThat(httpServerConnection.getPeerCertificateChain(),is(mockPeerCertificates));
}
