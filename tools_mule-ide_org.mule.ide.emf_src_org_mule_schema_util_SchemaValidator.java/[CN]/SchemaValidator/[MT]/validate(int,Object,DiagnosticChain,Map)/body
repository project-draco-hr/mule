{
switch (classifierID) {
case SchemaPackage.AGENTS_TYPE:
    return validateAgentsType((AgentsType)value,diagnostics,context);
case SchemaPackage.AGENT_TYPE:
  return validateAgentType((AgentType)value,diagnostics,context);
case SchemaPackage.CATCH_ALL_STRATEGY_TYPE:
return validateCatchAllStrategyType((CatchAllStrategyType)value,diagnostics,context);
case SchemaPackage.COMPONENT_FACTORY_TYPE:
return validateComponentFactoryType((ComponentFactoryType)value,diagnostics,context);
case SchemaPackage.COMPONENT_LIFECYCLE_ADAPTER_FACTORY_TYPE:
return validateComponentLifecycleAdapterFactoryType((ComponentLifecycleAdapterFactoryType)value,diagnostics,context);
case SchemaPackage.COMPONENT_POOL_FACTORY_TYPE:
return validateComponentPoolFactoryType((ComponentPoolFactoryType)value,diagnostics,context);
case SchemaPackage.CONNECTION_STRATEGY_TYPE:
return validateConnectionStrategyType((ConnectionStrategyType)value,diagnostics,context);
case SchemaPackage.CONNECTOR_TYPE:
return validateConnectorType((ConnectorType)value,diagnostics,context);
case SchemaPackage.CONSTRAINT_TYPE:
return validateConstraintType((ConstraintType)value,diagnostics,context);
case SchemaPackage.CONTAINER_CONTEXT_TYPE:
return validateContainerContextType((ContainerContextType)value,diagnostics,context);
case SchemaPackage.CONTAINER_ENTRY_TYPE:
return validateContainerEntryType((ContainerEntryType)value,diagnostics,context);
case SchemaPackage.CONTAINER_PROPERTY_TYPE:
return validateContainerPropertyType((ContainerPropertyType)value,diagnostics,context);
case SchemaPackage.DOCUMENT_ROOT:
return validateDocumentRoot((DocumentRoot)value,diagnostics,context);
case SchemaPackage.ENCRYPTION_STRATEGY_TYPE:
return validateEncryptionStrategyType((EncryptionStrategyType)value,diagnostics,context);
case SchemaPackage.ENDPOINT_IDENTIFIERS_TYPE:
return validateEndpointIdentifiersType((EndpointIdentifiersType)value,diagnostics,context);
case SchemaPackage.ENDPOINT_IDENTIFIER_TYPE:
return validateEndpointIdentifierType((EndpointIdentifierType)value,diagnostics,context);
case SchemaPackage.ENDPOINT_TYPE:
return validateEndpointType((EndpointType)value,diagnostics,context);
case SchemaPackage.ENTRY_POINT_RESOLVER_TYPE:
return validateEntryPointResolverType((EntryPointResolverType)value,diagnostics,context);
case SchemaPackage.ENTRY_TYPE:
return validateEntryType((EntryType)value,diagnostics,context);
case SchemaPackage.ENVIRONMENT_PROPERTIES_TYPE:
return validateEnvironmentPropertiesType((EnvironmentPropertiesType)value,diagnostics,context);
case SchemaPackage.EXCEPTION_STRATEGY_TYPE:
return validateExceptionStrategyType((ExceptionStrategyType)value,diagnostics,context);
case SchemaPackage.FACTORY_ENTRY_TYPE:
return validateFactoryEntryType((FactoryEntryType)value,diagnostics,context);
case SchemaPackage.FACTORY_PROPERTY_TYPE:
return validateFactoryPropertyType((FactoryPropertyType)value,diagnostics,context);
case SchemaPackage.FILE_PROPERTIES_TYPE:
return validateFilePropertiesType((FilePropertiesType)value,diagnostics,context);
case SchemaPackage.FILTER_TYPE:
return validateFilterType((FilterType)value,diagnostics,context);
case SchemaPackage.GLOBAL_ENDPOINTS_TYPE:
return validateGlobalEndpointsType((GlobalEndpointsType)value,diagnostics,context);
case SchemaPackage.GLOBAL_ENDPOINT_TYPE:
return validateGlobalEndpointType((GlobalEndpointType)value,diagnostics,context);
case SchemaPackage.INBOUND_ROUTER_TYPE:
return validateInboundRouterType((InboundRouterType)value,diagnostics,context);
case SchemaPackage.INTERCEPTOR_STACK_TYPE:
return validateInterceptorStackType((InterceptorStackType)value,diagnostics,context);
case SchemaPackage.INTERCEPTOR_TYPE:
return validateInterceptorType((InterceptorType)value,diagnostics,context);
case SchemaPackage.LEFT_FILTER_TYPE:
return validateLeftFilterType((LeftFilterType)value,diagnostics,context);
case SchemaPackage.LIST_TYPE:
return validateListType((ListType)value,diagnostics,context);
case SchemaPackage.MAP_TYPE:
return validateMapType((MapType)value,diagnostics,context);
case SchemaPackage.MODEL_TYPE:
return validateModelType((ModelType)value,diagnostics,context);
case SchemaPackage.MULE_CONFIGURATION_TYPE:
return validateMuleConfigurationType((MuleConfigurationType)value,diagnostics,context);
case SchemaPackage.MULE_DESCRIPTOR_TYPE:
return validateMuleDescriptorType((MuleDescriptorType)value,diagnostics,context);
case SchemaPackage.MULE_ENVIRONMENT_PROPERTIES_TYPE:
return validateMuleEnvironmentPropertiesType((MuleEnvironmentPropertiesType)value,diagnostics,context);
case SchemaPackage.OUTBOUND_ROUTER_TYPE:
return validateOutboundRouterType((OutboundRouterType)value,diagnostics,context);
case SchemaPackage.PERSISTENCE_STRATEGY_TYPE:
return validatePersistenceStrategyType((PersistenceStrategyType)value,diagnostics,context);
case SchemaPackage.POOLING_PROFILE_TYPE:
return validatePoolingProfileType((PoolingProfileType)value,diagnostics,context);
case SchemaPackage.PROPERTIES_TYPE:
return validatePropertiesType((PropertiesType)value,diagnostics,context);
case SchemaPackage.PROPERTY_TYPE:
return validatePropertyType((PropertyType)value,diagnostics,context);
case SchemaPackage.QUEUE_PROFILE_TYPE:
return validateQueueProfileType((QueueProfileType)value,diagnostics,context);
case SchemaPackage.REPLY_TO_TYPE:
return validateReplyToType((ReplyToType)value,diagnostics,context);
case SchemaPackage.RESPONSE_ROUTER_TYPE:
return validateResponseRouterType((ResponseRouterType)value,diagnostics,context);
case SchemaPackage.RIGHT_FILTER_TYPE:
return validateRightFilterType((RightFilterType)value,diagnostics,context);
case SchemaPackage.ROUTER_TYPE:
return validateRouterType((RouterType)value,diagnostics,context);
case SchemaPackage.SECURITY_FILTER_TYPE:
return validateSecurityFilterType((SecurityFilterType)value,diagnostics,context);
case SchemaPackage.SECURITY_MANAGER_TYPE:
return validateSecurityManagerType((SecurityManagerType)value,diagnostics,context);
case SchemaPackage.SECURITY_PROVIDER_TYPE:
return validateSecurityProviderType((SecurityProviderType)value,diagnostics,context);
case SchemaPackage.SYSTEM_ENTRY_TYPE:
return validateSystemEntryType((SystemEntryType)value,diagnostics,context);
case SchemaPackage.SYSTEM_PROPERTY_TYPE:
return validateSystemPropertyType((SystemPropertyType)value,diagnostics,context);
case SchemaPackage.TEXT_PROPERTY_TYPE:
return validateTextPropertyType((TextPropertyType)value,diagnostics,context);
case SchemaPackage.THREADING_PROFILE_TYPE:
return validateThreadingProfileType((ThreadingProfileType)value,diagnostics,context);
case SchemaPackage.TRANSACTION_MANAGER_TYPE:
return validateTransactionManagerType((TransactionManagerType)value,diagnostics,context);
case SchemaPackage.TRANSACTION_TYPE:
return validateTransactionType((TransactionType)value,diagnostics,context);
case SchemaPackage.TRANSFORMERS_TYPE:
return validateTransformersType((TransformersType)value,diagnostics,context);
case SchemaPackage.TRANSFORMER_TYPE:
return validateTransformerType((TransformerType)value,diagnostics,context);
case SchemaPackage.ACTION_TYPE:
return validateActionType((Object)value,diagnostics,context);
case SchemaPackage.CREATE_CONNECTOR_TYPE:
return validateCreateConnectorType((Object)value,diagnostics,context);
case SchemaPackage.ENABLE_CORRELATION_TYPE:
return validateEnableCorrelationType((Object)value,diagnostics,context);
case SchemaPackage.EXHAUSTED_ACTION_TYPE:
return validateExhaustedActionType((Object)value,diagnostics,context);
case SchemaPackage.ID_TYPE:
return validateIdType((Object)value,diagnostics,context);
case SchemaPackage.INITIALISATION_POLICY_TYPE:
return validateInitialisationPolicyType((Object)value,diagnostics,context);
case SchemaPackage.INITIAL_STATE_TYPE:
return validateInitialStateType((Object)value,diagnostics,context);
case SchemaPackage.POOL_EXHAUSTED_ACTION_TYPE:
return validatePoolExhaustedActionType((Object)value,diagnostics,context);
case SchemaPackage.TYPE_TYPE:
return validateTypeType((Object)value,diagnostics,context);
case SchemaPackage.ACTION_TYPE_OBJECT:
return validateActionTypeObject((ActionType)value,diagnostics,context);
case SchemaPackage.CREATE_CONNECTOR_TYPE_OBJECT:
return validateCreateConnectorTypeObject((CreateConnectorType)value,diagnostics,context);
case SchemaPackage.ENABLE_CORRELATION_TYPE_OBJECT:
return validateEnableCorrelationTypeObject((EnableCorrelationType)value,diagnostics,context);
case SchemaPackage.EXHAUSTED_ACTION_TYPE_OBJECT:
return validateExhaustedActionTypeObject((ExhaustedActionType)value,diagnostics,context);
case SchemaPackage.ID_TYPE_OBJECT:
return validateIdTypeObject((IdType)value,diagnostics,context);
case SchemaPackage.INITIALISATION_POLICY_TYPE_OBJECT:
return validateInitialisationPolicyTypeObject((InitialisationPolicyType)value,diagnostics,context);
case SchemaPackage.INITIAL_STATE_TYPE_OBJECT:
return validateInitialStateTypeObject((InitialStateType)value,diagnostics,context);
case SchemaPackage.POOL_EXHAUSTED_ACTION_TYPE_OBJECT:
return validatePoolExhaustedActionTypeObject((PoolExhaustedActionType)value,diagnostics,context);
case SchemaPackage.TYPE_TYPE_OBJECT:
return validateTypeTypeObject((TypeType)value,diagnostics,context);
case SchemaPackage.VERSION_TYPE:
return validateVersionType((String)value,diagnostics,context);
default :
return true;
}
}
